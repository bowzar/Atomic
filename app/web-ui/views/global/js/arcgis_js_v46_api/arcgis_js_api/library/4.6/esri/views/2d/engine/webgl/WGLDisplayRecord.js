// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.6/esri/copyright.txt for details.
//>>built
define("require exports ../../../../core/ObjectPool ./MeshData ./MaterialInfo ./enums ./Utils".split(" "),function(q,r,n,p,l,m,h){return function(){function e(){this.id=-1;this.geometryType=m.WGLGeometryType.UNKNOWN;this.materialInfo=this.meshData=null;this.sortKey=this.indexCount=this.indexFrom=this.vertexCount=this.vertexFrom=this.zOrder=this.symbolLevel=0}e.prototype.acquire=function(b,c,d,f,a,e){this.setData(b,c,d,f,a,e)};e.prototype.release=function(){this.id=-1;this.geometryType=m.WGLGeometryType.UNKNOWN;
this.materialInfo=this.meshData=null;this.sortKey=this.indexCount=this.indexFrom=this.vertexCount=this.vertexFrom=this.zOrder=this.symbolLevel=0};e.prototype.setData=function(b,c,d,f,a,e){this.id=b;this.geometryType=c;this.meshData=d;this.materialInfo=f;this.symbolLevel=a;this.zOrder=e;this._computeSortKey()};e.prototype.readMeshDataFromBuffers=function(b,c){this.meshData?this.meshData.clear():this.meshData=p.pool.acquire();for(var d in b){for(var f=b[d].stride,a=b[d].data,e=[],g=0;g<f*this.vertexCount/
4;++g)e[g]=a[g+f*this.vertexFrom/4];this.meshData.vertexData.set(d,e)}for(g=this.meshData.indexData.length=0;g<this.indexCount;++g)this.meshData.indexData[g]=c[g+this.indexFrom]-this.vertexFrom;this.meshData.vertexCount=this.vertexCount};e.prototype.writeMeshDataToBuffers=function(b,c,d,f){for(var a in c)for(var e=c[a].stride,g=this.meshData.vertexData.get(a),h=c[a].data,k=0;k<e*this.meshData.vertexCount/4;++k)h[k+e*b/4]=g[k];for(k=0;k<this.meshData.indexData.length;++k)f[k+d]=this.meshData.indexData[k]+
b;this.vertexFrom=b;this.vertexCount=this.meshData.vertexCount;this.indexFrom=d;this.indexCount=this.meshData.indexData.length};e.writeAllMeshDataToBuffers=function(b,c,d){for(var f=0,a=0,e=0;e<b.length;e++){var g=b[e];g.writeMeshDataToBuffers(f,c,a,d);f+=g.vertexCount;a+=g.indexCount}};e.prototype._computeSortKey=function(){this.sortKey=(this.symbolLevel&31)<<12|(this.zOrder&127)<<4|this.geometryType&7};e.serialize=function(b,c,d,e){var a=0;e&&(c&&(c[d+a]=b.geometryType),++a);a+=l.serialize(b.materialInfo,
c,d+a);c&&(c[d+a]=b.symbolLevel);++a;c&&(c[d+a]=b.zOrder);++a;a+=h.serializeInteger(b.vertexFrom,c,d+a);a+=h.serializeInteger(b.vertexCount,c,d+a);a+=h.serializeInteger(b.indexFrom,c,d+a);return a+=h.serializeInteger(b.indexCount,c,d+a)};e.deserialize=function(b,c,d,f){var a=0;b.displayRecord=e.pool.acquire();b.displayRecord.id=-1;f&&(b.displayRecord.geometryType=c[d+a],++a);b.displayRecord.meshData=null;f={materialInfo:null};a+=l.deserialize(f,c,d+a);b.displayRecord.materialInfo=f.materialInfo;b.displayRecord.symbolLevel=
c[d+a];++a;b.displayRecord.zOrder=c[d+a];++a;f={n:void 0};a+=h.deserializeInteger(f,c,d+a);b.displayRecord.vertexFrom=f.n;a+=h.deserializeInteger(f,c,d+a);b.displayRecord.vertexCount=f.n;a+=h.deserializeInteger(f,c,d+a);b.displayRecord.indexFrom=f.n;a+=h.deserializeInteger(f,c,d+a);b.displayRecord.indexCount=f.n;b.displayRecord._computeSortKey();return a};e.pool=new n(e);return e}()});