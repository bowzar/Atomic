// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.6/esri/copyright.txt for details.
//>>built
define("../../../core/declare ../../../request ../../../core/urlUtils ./PromiseLightweight ./AsyncQuotaRoundRobinQueue ../webgl-engine/lib/Util".split(" "),function(h,n,m,p,q,k){var l=k.assert,e={QUEUED:1,DOWNLOADING:2,CANCELLED:4};h=h(null,{constructor:function(a){this.alreadyLoading={};this.loadQueue=new q(r,this._doneLoadingCallback,this,a);this._urlInfo={hasSameOrigin:{},canUseXhr:{}}},destroy:function(){for(var a in this.alreadyLoading){for(var b=this.alreadyLoading[a],c=0;c<b.clientPromises.length;c++){var d=
b.clientPromises[c];d.isRejected()||d.reject(b.url,null,b.docType,b.clientMetadata[c])}this._cancelTask(b)}this.loadQueue.clear();this.alreadyLoading=this.loadQueue=null},request:function(a,b,c,d){d=d||{};var g=new p.Promise(function(){this.cancel(g)}.bind(this));g.requestURL=a;var f=this.alreadyLoading[a];f?(f.clientPromises.push(g),f.clientMetadata.push(d.metadata)):(f={url:a,docType:b,clientType:c,status:e.QUEUED,clientMetadata:[d.metadata],clientPromises:[g],downloadObj:null,_cancelledInQueue:!1},
this.alreadyLoading[a]=f,this.loadQueue.push(f));return g},isRequested:function(a){return void 0!==this.alreadyLoading[a]},cancel:function(a){var b=this.alreadyLoading[a.requestURL];b&&this._removeRequestPromiseFromTask(b,a)},hasPendingDownloads:function(){return!k.objectEmpty(this.alreadyLoading)},_removeRequestPromiseFromTask:function(a,b){var c=a.clientPromises.length;1<c?(b=a.clientPromises.indexOf(b),l(-1<b,"request to be cancelled is already cancelled or invalid"),a.clientPromises[b]=a.clientPromises[c-
1],a.clientPromises.pop(),a.clientMetadata[b]=a.clientMetadata[c-1],a.clientMetadata.pop()):(l(a.clientPromises[0]===b,"request to be cancelled is already cancelled or invalid"),this._cancelTask(a))},_cancelTask:function(a){if(a.status===e.DOWNLOADING){this.loadQueue.workerCancelled(a);if("image"===a.docType&&m.isDataProtocol(a.url)){var b=a.downloadObj;b.removeAttribute("onload");b.removeAttribute("onerror");b.removeAttribute("src")}else a.status=e.CANCELLED,a.downloadObj.cancel();a.downloadObj=
null}a.status=e.CANCELLED;a.clientPromises=void 0;a.clientMetadata=void 0;delete this.alreadyLoading[a.url]},_doneLoadingCallback:function(a,b){var c;l(a.status===e.DOWNLOADING);delete this.alreadyLoading[a.url];if(b)for(c=0;c<a.clientPromises.length;c++)a.clientPromises[c].isRejected()||a.clientPromises[c].reject(a.url,b,a.docType,a.clientMetadata[c]);else for(c=0;c<a.clientPromises.length;c++)a.clientPromises[c].done(a.url,a.result,a.docType,a.clientMetadata[c])}});var t=function(a,b,c){a.onload=
function(){b.status!==e.CANCELLED&&(b.result=a,a.removeAttribute("onload"),a.removeAttribute("onerror"),c(b))};a.onerror=function(){b.status!==e.CANCELLED&&(a.removeAttribute("onload"),a.removeAttribute("onerror"),c(b,{status:404}))}},r=function(a,b){if(a.status===e.CANCELLED)return!1;a.status=e.DOWNLOADING;if("image"===a.docType&&m.isDataProtocol(a.url)){var c=new Image;t(c,a,b);c.src=a.url;a.downloadObj=c;return!0}var d;switch(a.docType){case "binary":d="array-buffer";c=0;break;case "image":d="image";
break;default:d="json"}a.downloadObj=n(a.url,{responseType:d,timeout:c,allowImageDataAccess:"image"===a.docType});a.downloadObj.then(function(c){a.duration=k.performance.now()-a.startTime;a.size=0;a.result=c.data;b(a)},function(c){a.downloadObj.isCanceled()||b(a,c)});return!0};h.TaskStatus=e;return h});