// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.6/esri/copyright.txt for details.
//>>built
define("require exports dojo/_base/lang ../../../core/promiseUtils ../../../tasks/support/GenerateRendererParameters ./support/utils ../support/utils ../../../layers/support/fieldUtils".split(" "),function(w,x,p,e,q,d,k,m){function r(a){if(!(a&&a.layer&&(a.field||a.valueExpression||a.sqlExpression)))return e.reject(d.createError("histogram:missing-parameters","'layer' and 'field', 'valueExpression' or 'sqlExpression' parameters are required"));var b=p.mixin({},a);b.normalizationType=d.getNormalizationType(b);
a=[0,1,2];var f=k.createLayerAdapter(b.layer,a);return(b.layer=f)?f.load().then(function(){var a=b.valueExpression||b.sqlExpression,c=b.field,l=c?f.getField(c):null,g=!b.classificationMethod||"equal-interval"===b.classificationMethod,c=k.getFieldsList({field:c,normalizationField:b.normalizationField,valueExpression:b.valueExpression});if(c=d.verifyBasicFieldValidity(f,c,"histogram:invalid-parameters"))return e.reject(c);if(l){if(a=d.verifyFieldType(f,l,"histogram:invalid-parameters",t))return e.reject(a);
if(m.isDateField(l)){if(b.normalizationType)return e.reject(d.createError("histogram:invalid-parameters","Normalization is not allowed for date fields"));if(!g)return e.reject(d.createError("histogram:invalid-parameters","'classificationMethod' other than 'equal-interval' is not allowed for date fields"))}}else if(a){if(b.normalizationType)return e.reject(d.createError("histogram:invalid-parameters","Normalization is not allowed when 'valueExpression' or 'sqlExpression' is specified"));if(!g)return e.reject(d.createError("histogram:invalid-parameters",
"'classificationMethod' other than 'equal-interval' is not allowed when 'valueExpression' or 'sqlExpression' is specified"))}return b}):e.reject(d.createError("histogram:invalid-parameters","'layer' must be one of these types: "+k.getLayerTypeLabels(a).join(", ")))}function u(a,b,f){var h=[],c=a.classBreakInfos,e=c[0].minValue,g=c[c.length-1].maxValue;c.forEach(function(a){h.push([a.minValue,a.maxValue])});return{min:e,max:g,intervals:h,sqlExpr:d.getFieldExpr(f,a.normalizationTotal),excludeZerosExpr:b,
normTotal:a.normalizationTotal}}function n(a,b){var f=a.layer,e=d.getSQLFilterForNormalization(a);b=new q({classificationDefinition:d.createCBDefn(a,a.numBins||10),where:d.mergeWhereClauses(e,b)});return f.generateRenderer(b).then(function(b){return u(b,e,a)})}function v(a){var b=a.layer,f=a.minValue,h=a.maxValue,c=b.supportsSQLExpression,l=null!=f&&null!=h,g=!a.classificationMethod||"equal-interval"===a.classificationMethod;return a.valueExpression||a.sqlExpression||c&&g?b.histogram(a):a.normalizationType||
!g?n(a).then(function(b){if(l){if(f>b.max||h<b.min)return e.reject(d.createError("histogram:insufficient-data","Range defined by 'minValue' and 'maxValue' does not intersect available data range of the field"));var c=d.getFieldExpr(a,b.normTotal),c=d.getRangeExpr(c,f,h);return g?k.getBins({layer:a.layer,field:a.field,numBins:a.numBins},{min:f,max:h,sqlExpr:b.sqlExpr,excludeZerosExpr:b.excludeZerosExpr}):n(a,c).then(function(b){return k.getBins({layer:a.layer,field:a.field,numBins:a.numBins},b)})}return k.getBins({layer:a.layer,
field:a.field,numBins:a.numBins},b)}):b.histogram(a)}var t=[].concat(m.numericTypes).concat("date");return function(a){return r(a).then(function(a){return v(a)})}});