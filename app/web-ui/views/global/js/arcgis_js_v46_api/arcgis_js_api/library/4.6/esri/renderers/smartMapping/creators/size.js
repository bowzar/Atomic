// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.6/esri/copyright.txt for details.
//>>built
define("require exports dojo/i18n!../../nls/smartMapping dojo/_base/lang ../../ClassBreaksRenderer ../statistics/summaryStatistics ../symbology/size ../../support/utils ../../../core/promiseUtils ./support/utils ../support/utils ../../support/utils ../../../core/screenUtils ../../support/AuthoringInfoVisualVariable ../../support/AuthoringInfo ../statistics/support/utils".split(" "),function(R,n,x,p,y,F,t,v,d,e,f,G,z,H,A,I){function J(a){if(!(a&&a.layer&&(a.field||a.valueExpression||a.sqlExpression)))return d.reject(e.createError("size-visual-variable:missing-parameters",
"'layer' and 'field', 'valueExpression' or 'sqlExpression' parameters are required"));var b=p.mixin({},a);a=[0,1];var c=f.createLayerAdapter(b.layer,a);return(b.layer=c)?c.load().then(function(){var a=c.geometryType;if("mesh"===a)return d.reject(e.createError("size-visual-variable:invalid-parameters","Size visualization is not applicable to layers with 'mesh' geometry type"));if(b.worldScale){if("polyline"===a||"polygon"===a)return d.reject(e.createError("size-visual-variable:not-supported","'worldScale' sizing is not supported for polyline and polygon layers"));
if(!b.view||"3d"!==b.view.type)return d.reject(e.createError("size-visual-variable:invalid-parameters","'view' parameter should be an instance of SceneView when 'worldScale' parameter is true"))}a=f.getFieldsList({field:b.field,normalizationField:b.normalizationField,valueExpression:b.valueExpression});return(a=e.verifyBasicFieldValidity(c,a,"size-visual-variable:invalid-parameters"))?d.reject(a):b}):d.reject(e.createError("size-visual-variable:invalid-parameters","'layer' must be one of these types: "+
f.getLayerTypeLabels(a).join(", ")))}function K(a){if(!(a&&a.layer&&(a.field||a.valueExpression||a.sqlExpression)))return d.reject(e.createError("size-continuous-renderer:missing-parameters","'layer' and 'field', 'valueExpression' or 'sqlExpression' parameters are required"));var b=p.mixin({},a);b.symbolType=b.symbolType||"2d";b.defaultSymbolEnabled=null==b.defaultSymbolEnabled?!0:b.defaultSymbolEnabled;a=[0,1];var c=f.createLayerAdapter(b.layer,a);return(b.layer=c)?c.load().then(function(){var a=
c.geometryType,g=-1<b.symbolType.indexOf("3d");if("mesh"===a)return d.reject(e.createError("size-continuous-renderer:invalid-parameters","Size visualization is not applicable to layers with 'mesh' geometry type"));if(g&&("polyline"===a||"polygon"===a))return d.reject(e.createError("size-continuous-renderer:not-supported","3d symbols are not supported for polyline and polygon layers"));if(-1<b.symbolType.indexOf("3d-volumetric")&&(!b.view||"3d"!==b.view.type))return d.reject(e.createError("size-continuous-renderer:invalid-parameters",
"'view' parameter should be an instance of SceneView when 'symbolType' parameter is '3d-volumetric' or 3d-volumetric-uniform"));a=f.getFieldsList({field:b.field,normalizationField:b.normalizationField,valueExpression:b.valueExpression});return(a=e.verifyBasicFieldValidity(c,a,"size-continuous-renderer:invalid-parameters"))?d.reject(a):b}):d.reject(e.createError("size-continuous-renderer:invalid-parameters","'layer' must be one of these types: "+f.getLayerTypeLabels(a).join(", ")))}function L(a){if(!(a&&
a.layer&&a.field))return d.reject(e.createError("size-class-breaks-renderer:missing-parameters","'layer' and 'field' parameters are required"));var b=p.mixin({},a);b.symbolType=b.symbolType||"2d";b.defaultSymbolEnabled=null==b.defaultSymbolEnabled?!0:b.defaultSymbolEnabled;b.classificationMethod=b.classificationMethod||"equal-interval";b.normalizationType=I.getNormalizationType(b);a=[0,1];var c=f.createLayerAdapter(b.layer,a);return(b.layer=c)?null!=b.minValue&&null!=b.maxValue||null==b.minValue&&
null==b.maxValue?c.load().then(function(){var a=c.geometryType,g=-1<b.symbolType.indexOf("3d");if("mesh"===a)return d.reject(e.createError("size-class-breaks-renderer:invalid-parameters","Size visualization is not applicable to layers with 'mesh' geometry type"));if(g&&("polyline"===a||"polygon"===a))return d.reject(e.createError("size-class-breaks-renderer:not-supported","3d symbols are not supported for polyline and polygon layers"));if(-1<b.symbolType.indexOf("3d-volumetric")&&(!b.view||"3d"!==
b.view.type))return d.reject(e.createError("size-class-breaks-renderer:invalid-parameters","'view' parameter should be an instance of SceneView when 'symbolType' parameter is '3d-volumetric' or 3d-volumetric-uniform"));a=f.getFieldsList({field:b.field,normalizationField:b.normalizationField});return(a=e.verifyBasicFieldValidity(c,a,"size-class-breaks-renderer:invalid-parameters"))?d.reject(a):b}):d.reject(e.createError("size-class-breaks-renderer:missing-parameters","Both 'minValue' and 'maxValue' are required when specifying custom data range")):
d.reject(e.createError("size-class-breaks-renderer:invalid-parameters","'layer' must be one of these types: "+f.getLayerTypeLabels(a).join(", ")))}function M(a){a=p.mixin({},a);delete a.basemap;delete a.sizeScheme;delete a.legendOptions;delete a.symbolType;delete a.defaultSymbolEnabled;delete a.view;a.analyzeData=!(null!=a.minValue&&null!=a.maxValue);return a}function N(a){a=p.mixin({},a);var b=-1<a.symbolType.indexOf("3d-volumetric");if(a.worldScale=b)a.axis="3d-volumetric-uniform"===a.symbolType?
"all":"height";delete a.symbolType;delete a.defaultSymbolEnabled;return a}function B(a){var b=a.sizeScheme,c=a.basemap;b?b=t.cloneScheme(b):(b=(a=t.getSchemes({basemap:a.basemap,geometryType:a.geometryType,worldScale:a.worldScale,view:a.view}))&&a.primaryScheme,c=a&&a.basemapId);return{scheme:b,basemapId:c}}function C(a,b){var c;switch(b){case "point":case "multipoint":c=[a.minSize,a.maxSize];break;case "polyline":c=[a.minWidth,a.maxWidth];break;case "polygon":c=[a.marker.minSize,a.marker.maxSize]}return c}
function O(a,b,c,d){var g=d.field,l=d.layer.geometryType,u=d.defaultSymbolEnabled,h=t.cloneScheme(a.sizeScheme),r="polygon"===l,m=r?h.marker:h,k=r?h.background:null,h="polyline"===l?m.noDataWidth:m.noDataSize,k=k?e.createSymbol(k,k.color,l,d.symbolType):null;return{renderer:new y({backgroundFillSymbol:k,classBreakInfos:[{minValue:-D,maxValue:D,symbol:e.createSymbol(m,m.color,r?"point":l,d.symbolType)}],defaultLabel:u?x.other:null,defaultSymbol:u?e.createSymbol(m,m.noDataColor,r?"point":l,d.symbolType,
null,h):null,field:g,normalizationField:c,normalizationType:b,valueExpression:d.valueExpression,visualVariables:a.visualVariables.map(function(a){return v.cloneSizeVariable(a)}),authoringInfo:a.authoringInfo&&a.authoringInfo.clone()}),visualVariables:a.visualVariables.map(function(a){return v.cloneSizeVariable(a)}),statistics:a.statistics,defaultValuesUsed:a.defaultValuesUsed,sizeScheme:t.cloneScheme(a.sizeScheme),basemapId:a.basemapId}}function P(a,b,c){b=C(a,b);a=z.toPt(b[0]);b=(z.toPt(b[1])-a)/
(4<=c?c-1:c);for(var d=[],e=0;e<c;e++)d.push(a+b*e);return d}function Q(a,b){var c=a.field,f=a.defaultSymbolEnabled,g=a.layer.geometryType,l="polygon"===g,u=B({basemap:a.basemap,geometryType:g,sizeScheme:a.sizeScheme,worldScale:-1<a.symbolType.indexOf("3d-volumetric"),view:a.view}),h=u.scheme,r=b.result,m=r.classBreakInfos,k=a.classificationMethod,w=a.normalizationType,p=P(h,g,m.length),q=l?h.marker:h,n=l?h.background:null,v="polyline"===g?q.noDataWidth:q.noDataSize,c=new y({backgroundFillSymbol:n?
e.createSymbol(n,n.color,g,a.symbolType):null,classBreakInfos:m.map(function(b,c){return{minValue:b.minValue,maxValue:b.maxValue,symbol:e.createSymbol(q,q.color,l?"point":g,a.symbolType,null,p[c]),label:b.label}}),defaultLabel:f?x.other:null,defaultSymbol:f?e.createSymbol(q,q.noDataColor,l?"point":g,a.symbolType,null,v):null,field:c,classificationMethod:k,normalizationType:w,normalizationField:a.normalizationField,normalizationTotal:"percent-of-total"===w?r.normalizationTotal:void 0,legendOptions:a.legendOptions,
authoringInfo:new A({type:"class-breaks-size",classificationMethod:k,standardDeviationInterval:a.standardDeviationInterval})});"standard-deviation"!==k&&G.setLabelsForClassBreaks({classBreakInfos:c.classBreakInfos,classificationMethod:k,normalizationType:w,round:!0});return d.resolve({renderer:c,sizeScheme:t.cloneScheme(h),classBreaksResult:r,defaultValuesUsed:b.defaultValuesUsed,basemapId:u.basemapId})}function E(a){return J(a).then(function(a){var b=a.normalizationField,f=b?"field":void 0;return(a.statistics?
d.resolve(a.statistics):F({layer:a.layer,field:a.field,valueExpression:a.valueExpression,sqlExpression:a.sqlExpression,sqlWhere:a.sqlWhere,normalizationType:f,normalizationField:b,minValue:a.minValue,maxValue:a.maxValue})).then(function(c){var l=a.layer,f=a.field,h=f&&"function"!==typeof f?l.getField(f):null,g=h&&"date"===h.type,m=l.geometryType,l=B({basemap:a.basemap,geometryType:m,sizeScheme:a.sizeScheme,worldScale:a.worldScale,view:a.view});if(h=l.scheme){var k=C(h,m),n=(g=e.getDefaultDataRange(c,
g,!1))||[c.min,c.max],m=[],p=k[0],k=k[1],q=void 0;"height"===a.axis&&(m.push({type:"size",axis:"width-and-depth",minSize:((k-p)/2+p)/4.6}),q="height",k*=2);m.unshift({type:"size",field:f,valueExpression:a.valueExpression,valueUnit:"unknown",normalizationField:b,axis:q,minSize:p,maxSize:k,minDataValue:n[0],maxDataValue:n[1],legendOptions:a.legendOptions});f=new H({type:"size",minSliderValue:c.min,maxSliderValue:c.max});f=new A({visualVariables:[f]});c=d.resolve({basemapId:l.basemapId,visualVariables:m,
statistics:c,defaultValuesUsed:!!g,sizeScheme:t.cloneScheme(h),authoringInfo:f})}else c=d.reject(e.createError("size-visual-variable:insufficient-info","Unable to find size scheme"));return c})})}Object.defineProperty(n,"__esModule",{value:!0});var D=Math.pow(2,53)-1;n.createVisualVariables=E;n.createContinuousRenderer=function(a){return K(a).then(function(a){return E(N(a)).then(function(b){var c=a.normalizationField;return O(b,c?"field":void 0,c,a)})})};n.createClassBreaksRenderer=function(a){return L(a).then(function(a){return e.getClassBreaks(M(a)).then(function(b){return Q(a,
b)})})}});