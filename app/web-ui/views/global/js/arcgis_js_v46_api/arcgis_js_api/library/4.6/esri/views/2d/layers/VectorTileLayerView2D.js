// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.6/esri/copyright.txt for details.
//>>built
require({cache:{"esri/views/2d/tiling/TileInfoViewPOT":function(){define("require exports ../../../core/tsSupport/extendsHelper ../../../core/tsSupport/decorateHelper ./TileKey ./TileInfoView".split(" "),function(p,d,a,b,c,f){return function(b){function e(){return null!==b&&b.apply(this,arguments)||this}a(e,b);e.prototype.getTileParentId=function(a){a=c.pool.acquire(a);var b=0===a.level?null:c.getId(a.level-1,a.row>>1,a.col>>1,a.world);c.pool.release(a);return b};e.prototype.getTileIdAtParent=function(a,
b){b=c.pool.acquire(b);var e=this._infoByLevel[b.level];if(a.resolution<e.resolution)throw c.pool.release(b),Error("Cannot calculate parent tile. destination LOD's resolution "+a.resolution+" is not a parent resolution of "+e.resolution);if(a.resolution===e.resolution)return a=b.id,c.pool.release(b),a;e=b.level-a.level;if(0>e)throw c.pool.release(b),Error("Wrong way...!");a=c.getId(a.level,b.row>>e,b.col>>e,b.world);c.pool.release(b);return a};return e}(f)})},"esri/views/vectorTiles/TileHandler":function(){define("require exports module dojo/Deferred dojo/promise/all dojo/has ../../core/workers ../../core/promiseUtils ../../core/requireUtils ../../core/LRUCache ../../request ../2d/tiling/TileKey ./TileIndex ./SpriteMosaic ./SpriteSource ./GlyphMosaic ./GlyphSource ./VectorTileDisplayObject ./GeometryUtils".split(" "),
function(p,d,a,b,c,f,e,h,l,k,m,n,g,q,t,r,u,v,w){var x=new k(10),z=new Map;return function(){function d(a,b,c,g,q){void 0===g&&(g=!1);this.devicePixelRatio=c;this.allowUpdates=g;this._tileIndex=this._connection=this._glyphMosaic=this._spriteMosaic=null;this._updateQueue=new Map;this._ongoingRequests=new Map;this._vectorTileLayer=a;this._styleRepository=a.styleRepository;this._requestUpdate=b}d.prototype.destroy=function(){this.stop();this._vectorTileLayer=this._requestUpdate=this._styleRepository=
null;this._spriteMosaic&&(this._spriteMosaic.dispose(),this._spriteMosaic=null);this._glyphMosaic&&(this._glyphMosaic.dispose(),this._glyphMosaic=null)};Object.defineProperty(d.prototype,"initialized",{get:function(){return this._broadcastPromise&&this._broadcastPromise.isFulfilled()},enumerable:!0,configurable:!0});Object.defineProperty(d.prototype,"spriteMosaic",{get:function(){return this._spriteMosaic},enumerable:!0,configurable:!0});Object.defineProperty(d.prototype,"glyphMosaic",{get:function(){return this._glyphMosaic},
enumerable:!0,configurable:!0});Object.defineProperty(d.prototype,"ongoingRequestCount",{get:function(){return this._ongoingRequests.size},enumerable:!0,configurable:!0});d.prototype.start=function(){var g=this;this.stop();var h=this._styleRepository,w=new t(h.sprite,this.devicePixelRatio);w.devicePixelRatio=this.devicePixelRatio;var n=w.load().then(function(){g._spriteMosaic=new q(1024,1024,250);g._spriteMosaic.setSpriteSource(w);f("stable-symbol-rendering")&&g._spriteMosaic.preloadSpriteItems()}),
d=new u(h.glyphs);this._glyphMosaic=new r(1024,1024,d);var v=this._fetchTileMap(this._vectorTileLayer.tileIndexUrl),x=e.open(this,l.getAbsMid("./WorkerTileHandler",p,a)).then(function(a){g._connection=a}),k=new b(function(a){n.isFulfilled()||n.cancel();v.isFulfilled()||v.cancel();x.isFulfilled()||x.cancel()});c([n,v,x]).then(function(a){c(g._connection.broadcast("setLayers",h.styleJSON)).then(function(){k.resolve()})});return this._broadcastPromise=k.promise};d.prototype.stop=function(){this._broadcastPromise&&
!this._broadcastPromise.isFulfilled()&&this._broadcastPromise.cancel();this._updateQueue.forEach(function(a){return a.cancel()});this._ongoingRequests.forEach(function(a){return a.cancel()});this._connection&&(this._connection.close(),this._connection=null)};d.prototype.updateTile=function(a,b){var c=this;if(!this.allowUpdates)return h.resolve(null);if(!this._broadcastPromise.isFulfilled()||!this._connection)return h.reject(Error("no connection"));b=Math.round(w.degToByte(b.state.rotation));if(a.rotation===
b)return h.resolve(null);var g,q=a.key;this._updateQueue.has(q.id)&&(g=this._updateQueue.get(q.id),g.cancel("cancel"));a.rotation=b;g=this._connection.invoke("update",{key:a.id,rotation:b},[],{id:a.workerID}).then(function(b){a.updateSymbolData(b);return b}).always(function(){c._updateQueue["delete"](q.id)});this._updateQueue.set(a.id,g);return g};d.prototype.getVectorTileWithLRC=function(a,b,c,g){var q=this;void 0===g&&(g=0);a=new n(a,b,c,0);b=this.getRefKey(a);var t=new v(a,b,this._vectorTileLayer.tileInfo,
this._styleRepository,0);return this.getTileData(t.key,0).then(function(a){t.setData(a.tileData,a.workerId,q._connection);return t})};d.prototype.getTileData=function(a,b){var c=this;if(!this._broadcastPromise.isFulfilled()||!this._connection)return h.reject(Error("no connection"));var g=this._tileIndex?this._tileIndex.dataKey(a):a;if(!g)return h.reject(Error("no data"));b=Math.round(w.degToByte(b));return this._getTileData(this._connection,a,g,b).then(function(a){return a&&a.tileData?{tileData:a.tileData,
workerId:a.workerId,connection:c._connection}:h.reject("No data")})};d.prototype.getRefKey=function(a){return this._tileIndex?this._tileIndex.dataKey(a):a};d.prototype.fetchTileData=function(a){a=n.pool.acquire(a);var b=this._vectorTileLayer.getTileUrl(a.level,a.row,a.col);n.pool.release(a);return m(b,{callbackParamName:"callback",responseType:"array-buffer"}).then(function(a){return{data:{protobuff:a.data},buffers:[a.data]}})};d.prototype.getSprites=function(a){return h.resolve({data:{spriteItems:this._spriteMosaic.getSpriteItems(a.sprites)}})};
d.prototype.getGlyphs=function(a){return this._glyphMosaic.getGlyphItems(a.tileID,a.font,a.codePoints).then(function(a){return{data:{glyphItems:a}}})};d.prototype.getStyleRepository=function(){return this._styleRepository};d.prototype.getTileIndex=function(){return this._tileIndex};d.prototype._getTileData=function(a,b,c,g){var q=this,t={id:null};if(a=this._ongoingRequests.get(b.id))return a;a=this._connection.invoke("getTile",{key:b.id,refKey:c.id,rotation:g,cacheTile:this.allowUpdates},[],t).then(function(a){q._ongoingRequests["delete"](b.id);
return{tileData:a,workerId:t.id}}).otherwise(function(a){q._ongoingRequests["delete"](b.id);q._connection.invoke("destructTileData",{key:b.id},[],t);return h.reject(a)});this._ongoingRequests.set(b.id,a);return a};d.prototype._fetchTileMap=function(a){var b=this;if(!a)return null;if(x.has(a))return this._tileIndex=x.use(a),h.resolve();if(z.has(a))return z.get(a);var c=m(a,{callbackParamName:"callback",responseType:"json"}).then(function(c){b._tileIndex=new g(c.data);z["delete"](a);x.insert(a,b._tileIndex)});
z.set(a,c);return c};return d}()})},"esri/core/LRUCache":function(){define(["require","exports"],function(p,d){return function(){function a(a){this._cache={};this._lruQueue=[];if(0>=a)throw Error("LRU cache size must be bigger than zero!");this._maxSize=a}a.prototype.has=function(a){return void 0!==this._cache[a]};a.prototype.insert=function(a,c){null!==this.use(a)?this._cache[a]=c:(this._collect(),this._cache[a]=c,this._lruQueue.unshift(a))};a.prototype.use=function(a){var b=this._cache[a];if(!b)return null;
this._lruQueue.splice(this._lruQueue.indexOf(a),1);this._lruQueue.unshift(a);return b};a.prototype.print=function(){for(var a=0,c=this._lruQueue;a<c.length;a++){var f=c[a];console.log("key: "+f+", value: "+this._cache[f])}};a.prototype._collect=function(){if(!(this._lruQueue.length<this._maxSize)){var a=this._lruQueue.pop(),c=this._cache[a];c&&c.release&&c.release();delete this._cache[a]}};return a}()})},"esri/views/vectorTiles/TileIndex":function(){define(["require","exports","../2d/tiling/TileKey"],
function(p,d,a){return function(){function b(a){if(!("index"in a))throw Error("The tilemap is missing the 'index' property.");this._tilemap=a.index}b.prototype.dataKey=function(b){var c=[b];if(0>b.level||0>b.row||0>b.col||0<b.row>>b.level||0<b.col>>b.level)return null;for(;0!==b.level;)b=new a(b.level-1,b.row>>1,b.col>>1,b.world),c.push(b);b=this._tilemap;var e=c.pop(),h,d;if(1===b)return e;for(;c.length;){h=c.pop();d=e.level+1;var k=2*e.row,m=2*e.col;d=[a.getId(d,k,m,h.world),a.getId(d,k,m+1,h.world),
a.getId(d,k+1,m,h.world),a.getId(d,k+1,m+1,h.world)].indexOf(h.id);if(b)if(0===b[d]){e=null;break}else if(1===b[d]){e=h;break}else e=h,b=b[d]}return e};b.prototype.forEach=function(a,b,e,h,d){this._callback=d;this._maxLevel=b+a;this._forEach(this._tilemap,b,e,h)};b.prototype._forEach=function(a,b,e,h){0!==a&&(this._callback(b,e,h),b!==this._maxLevel&&"object"===typeof a&&(this._forEach(a[0],b+1,2*e,2*h),this._forEach(a[1],b+1,2*e,2*h+1),this._forEach(a[2],b+1,2*e+1,2*h),this._forEach(a[3],b+1,2*e+
1,2*h+1)))};return b}()})},"esri/views/vectorTiles/SpriteMosaic":function(){define("require exports ../webgl/Texture ../2d/engine/webgl/Geometry ./Rect ./GeometryUtils ./RectangleBinPack".split(" "),function(p,d,a,b,c,f,e){function h(a){return a-Math.floor(a)}function l(a,b,c){0>a?a=0:.9999991<a&&(a=.9999991);var g=h(a*k[0]),q=h(a*k[1]),e=h(a*k[2]);a=h(a*k[3]);b[c+0]=256*(g-g*m[0]);b[c+1]=256*(q-g*m[1]);b[c+2]=256*(e-q*m[2]);b[c+3]=256*(a-e*m[3])}var k=[16777216,65536,256,1],m=[0,1/256,1/256,1/256];
return function(){function h(a,b,c){void 0===c&&(c=0);this._size=[];this._mosaicsData=[];this._textures=[];this._dirties=[];this._pageHeight=this._pageWidth=this._currentPage=this._maxItemSize=0;this._mosaicRects={};this.pixelRatio=1;(0>=a||0>=b)&&console.error("Sprites mosaic defaultWidth and defaultHeight must be greater than zero!");this._pageWidth=a;this._pageHeight=b;0<c&&(this._maxItemSize=c);this._binPack=new e(a-4,b-4)}h.prototype.getWidth=function(a){return a>=this._size.length?-1:this._size[a][0]};
h.prototype.getHeight=function(a){return a>=this._size.length?-1:this._size[a][1]};h.prototype.setSpriteSource=function(a){this.dispose();this.pixelRatio=a.devicePixelRatio;if(0===this._mosaicsData.length){this._binPack=new e(this._pageWidth-4,this._pageHeight-4);var b=new Uint32Array(Math.floor(this._pageWidth)*Math.floor(this._pageHeight));this._mosaicsData[0]=b;this._dirties.push(!0);this._size.push([this._pageWidth,this._pageHeight]);this._textures.push(void 0)}this._sprites=a};h.prototype.getSpriteItem=
function(a,b){void 0===b&&(b=!1);var c=this._mosaicRects[a];if(c)return c;if(!this._sprites||"loaded"!==this._sprites.loadStatus)return null;c=this._sprites.getSpriteInfo(a);if(!c||!c.width||!c.height||0>c.width||0>c.height)return null;var g=c.width,q=c.height,e,f=1;if(c.cim){f=this._buildSDF(c.cim);e=f[0];var h=f[1],d=f[2],n=f[3],k=f[4],f=f[5];if(!e||0>=n||0>=k)return null;var m=this._allocateImage(h,d),k=m[0],n=m[1],m=m[2];if(0>=k.width)return null;(c.cim||c.sdf)&&this._clearRect(k,n,m,1);this._copy(k,
{width:h,height:d,x:0,y:0},n,m,b,e);k.x+=4;k.y+=4;k.width-=8;k.height-=8;b=k;e=n;f*=.75;f=d/q;c.sdf=!0}else{d=this._allocateImage(g,q);k=d[0];n=d[1];m=d[2];if(0>=k.width)return null;this._copy(k,c,n,m,b);b=k;e=n}c={rect:b,width:g,height:q,sdf:c.sdf,pixelRatio:c.pixelRatio,page:e,sdfRatio:f};return this._mosaicRects[a]=c};h.prototype.preloadSpriteItems=function(){for(var a=0,b=this._sprites.spriteNames;a<b.length;a++)this.getSpriteItem(b[a],!0)};h.prototype.getSpriteItems=function(a){for(var b={},
c=0;c<a.length;c++){var g=a[c];b[g]=this.getSpriteItem(g)}return b};h.prototype.getMosaicItemPosition=function(a,b){b=(a=this.getSpriteItem(a,b))&&a.rect;if(!b)return null;b.width=a.width;b.height=a.height;return{size:[a.width,a.height],tl:[(b.x+2)/this._size[a.page][0],(b.y+2)/this._size[a.page][1]],br:[(b.x+2+a.width)/this._size[a.page][0],(b.y+2+a.height)/this._size[a.page][1]],page:a.page}};h.prototype.bind=function(b,c,e,f){void 0===e&&(e=0);void 0===f&&(f=0);this._textures[e]||(this._textures[e]=
new a(b,{pixelFormat:6408,dataType:5121,width:this._size[e][0],height:this._size[e][1]},new Uint8Array(this._mosaicsData[e].buffer)));var g=this._textures[e];g.setSamplingMode(c);this._dirties[e]&&g.setData(new Uint8Array(this._mosaicsData[e].buffer));b.bindTexture(g,f);this._dirties[e]=!1};h._copyBits=function(a,b,c,e,f,h,d,n,k,m,l){var g=e*b+c;d=n*h+d;if(l)for(d-=h,l=-1;l<=m;l++,g=((l+m)%m+e)*b+c,d+=h)for(n=-1;n<=k;n++)f[d+n]=a[g+(n+k)%k];else for(l=0;l<m;l++){for(n=0;n<k;n++)f[d+n]=a[g+n];g+=b;
d+=h}};h.prototype._copy=function(a,b,c,e,f,d){if(this._sprites&&"loaded"===this._sprites.loadStatus&&!(c>=this._mosaicsData.length)){var g=new Uint32Array(d?d.buffer:this._sprites.image.buffer),q=this._mosaicsData[c];q&&g||console.error("Source or target images are uninitialized!");h._copyBits(g,d?b.width:this._sprites.width,b.x,b.y,q,e[0],a.x+2,a.y+2,b.width,b.height,f);this._dirties[c]=!0}};h.prototype._allocateImage=function(a,b){a+=2;b+=2;var g=Math.max(a,b);if(this._maxItemSize&&this._maxItemSize<
g){var g=Math.pow(2,Math.ceil(f.log2(a))),q=Math.pow(2,Math.ceil(f.log2(b)));a=new c(0,0,a,b);this._mosaicsData.push(new Uint32Array(g*q));this._dirties.push(!0);this._size.push([g,q]);this._textures.push(void 0);return[a,this._mosaicsData.length-1,[g,q]]}g=a%4?4-a%4:4;q=b%4?4-b%4:4;1===g&&(g=5);1===q&&(q=5);g=this._binPack.allocate(a+g,b+q);return 0>=g.width?(this._dirties[this._currentPage]||(this._mosaicsData[this._currentPage]=null),this._currentPage=this._mosaicsData.length,this._mosaicsData.push(new Uint32Array(this._pageWidth*
this._pageHeight)),this._dirties.push(!0),this._size.push([this._pageWidth,this._pageHeight]),this._textures.push(void 0),this._binPack=new e(this._pageWidth-4,this._pageHeight-4),this._allocateImage(a,b)):[g,this._currentPage,[this._pageWidth,this._pageHeight]]};h.prototype._clearRect=function(a,b,c,e){(b=this._mosaicsData[b])||console.error("Source image is uninitialized!");var g=[0,0,0,0];l(e,g,0);e=g[0]&255|(g[1]&255)<<8|(g[2]&255)<<16|g[3]<<24;c=c[0];var g=a.y*c+a.x,q=a.width;a=a.height;for(var f=
0;f<a;f++){for(var t=0;t<q;t++)b[g+t]=e;g+=c}};h.prototype.dispose=function(){this._binPack=null;this._mosaicRects={};for(var a=0,b=this._textures;a<b.length;a++){var c=b[a];c&&c.dispose()}this._textures.length=0};h.prototype._extractGeometry=function(a){if(!a)return null;a=a.symbolLayers;if(!a||1!==a.length)return null;a=a[0];if(!a)return null;a=a.markerGraphics;if(!a||1!==a.length)return null;a=a[0];if(!a)return null;var c=a.geometry;if(!c||!c.rings)return null;a=[];for(var g=0,c=c.rings;g<c.length;g++){for(var e=
[],f=0,h=c[g];f<h.length;f++){var d=h[f];e.push(new b.Point(d[0],d[1]))}a.push(e)}return a};h.prototype._getEnvelope=function(a){for(var b=Infinity,g=-Infinity,e=Infinity,f=-Infinity,h=0;h<a.length;h++)for(var d=0,n=a[h];d<n.length;d++){var k=n[d];k.x<b&&(b=k.x);k.x>g&&(g=k.x);k.y<e&&(e=k.y);k.y>f&&(f=k.y)}return new c(b,e,g-b,f-e)};h.prototype._buildSDF=function(a){a=this._extractGeometry(a);if(!a)return null;var b=this._getEnvelope(a);if(0>=b.width||0>=b.height)return null;for(var c=86/Math.max(b.width,
b.height),g=Math.round(b.width*c),e=Math.round(b.height*c),f=g+32,h=e+32,d=0;d<a.length;d++)for(var n=0,k=a[d];n<k.length;n++){var m=k[n];m.x-=b.x;m.y-=b.y;m.x*=c;m.y*=c;m.x+=15.5;m.y+=15.5}b=this._dist_map(a,f,h,16);this._sign_dist_map(a,f,h,16,b);return[this._encodeDistMap(b),f,h,g,e,c]};h.prototype._dist_map=function(a,b,c,e){for(var g=b*c,f=new Float32Array(g),q=e*e+1,t=0;t<g;++t)f[t]=q;for(q=0;q<a.length;q++)for(var h=a[q],r=h.length,t=1;t<r;++t){var d=h[t-1],n=h[t],k=void 0,m=void 0;d.x<n.x?
(k=d.x,m=n.x):(k=n.x,m=d.x);var l=void 0,p=void 0;d.y<n.y?(l=d.y,p=n.y):(l=n.y,p=d.y);var G=Math.floor(k)-e,m=Math.floor(m)+e,l=Math.floor(l)-e,p=Math.floor(p)+e;0>G&&(G=0);m>b&&(m=b);0>l&&(l=0);p>c&&(p=c);for(var k=n.x-d.x,C=n.y-d.y,K=k*k+C*C;G<m;G++)for(var E=l;E<p;E++){var B=(G-d.x)*k+(E-d.y)*C,y=void 0,M=void 0;0>B?(y=d.x,M=d.y):B>K?(y=n.x,M=n.y):(B/=K,y=d.x+B*k,M=d.y+B*C);B=(G-y)*(G-y)+(E-M)*(E-M);y=(c-E-1)*b+G;B<f[y]&&(f[y]=B)}}for(t=0;t<g;++t)f[t]=Math.sqrt(f[t]);return f};h.prototype._sign_dist_map=
function(a,b,c,e,f){for(var g=0;g<a.length;g++)for(var q=a[g],t=q.length,h=1;h<t;++h){var d=q[h-1],r=q[h],u=void 0,n=void 0;d.x<r.x?(u=d.x,n=r.x):(u=r.x,n=d.x);var k=void 0,m=void 0;d.y<r.y?(k=d.y,m=r.y):(k=r.y,m=d.y);u=Math.floor(u);n=Math.floor(n)+1;k=Math.floor(k);m=Math.floor(m)+1;u<e&&(u=e);n>b-e&&(n=b-e);k<e&&(k=e);for(m>c-e&&(m=c-e);k<m;++k)if(d.y>k!==r.y>k){for(var l=(c-k-1)*b,p=u;p<n;++p)p<(r.x-d.x)*(k-d.y)/(r.y-d.y)+d.x&&(f[l+p]=-f[l+p]);for(p=e;p<u;++p)f[l+p]=-f[l+p]}}};h.prototype._encodeDistMap=
function(a){for(var b=a.length,c=new Uint8Array(4*b),g=0;g<b;++g)l(a[g]/16+.5,c,4*g);return c};return h}()})},"esri/views/2d/engine/webgl/Geometry":function(){define(["require","exports"],function(p,d){Object.defineProperty(d,"__esModule",{value:!0});p=function(){function a(a,c){this.x=a;this.y=c}a.prototype.clone=function(){return new a(this.x,this.y)};a.prototype.equals=function(a,c){return a===this.x&&c===this.y};a.prototype.isEqual=function(a){return a.x===this.x&&a.y===this.y};a.prototype.setCoords=
function(a,c){this.x=a;this.y=c};a.prototype.normalize=function(){var a=this.x,c=this.y,a=Math.sqrt(a*a+c*c);this.x/=a;this.y/=a};a.prototype.rightPerpendicular=function(){var a=this.x;this.x=this.y;this.y=-a};a.prototype.move=function(a,c){this.x+=a;this.y+=c};a.prototype.assign=function(a){this.x=a.x;this.y=a.y};a.prototype.assignAdd=function(a,c){this.x=a.x+c.x;this.y=a.y+c.y};a.prototype.assignSub=function(a,c){this.x=a.x-c.x;this.y=a.y-c.y};a.prototype.rotate=function(a,c){var b=this.x,e=this.y;
this.x=b*a-e*c;this.y=b*c+e*a};a.prototype.scale=function(a){this.x*=a;this.y*=a};a.prototype.length=function(){var a=this.x,c=this.y;return Math.sqrt(a*a+c*c)};a.distance=function(a,c){var b=c.x-a.x;a=c.y-a.y;return Math.sqrt(b*b+a*a)};a.add=function(b,c){return new a(b.x+c.x,b.y+c.y)};a.sub=function(b,c){return new a(b.x-c.x,b.y-c.y)};return a}();d.Point=p})},"esri/views/vectorTiles/Rect":function(){define(["require","exports"],function(p,d){return function(){function a(a,c,f,e){void 0===a&&(a=
0);void 0===c&&(c=0);void 0===f&&(f=0);void 0===e&&(e=0);this.x=a;this.y=c;this.width=f;this.height=e}Object.defineProperty(a.prototype,"isEmpty",{get:function(){return 0>=this.width||0>=this.height},enumerable:!0,configurable:!0});return a}()})},"esri/views/vectorTiles/GeometryUtils":function(){define(["require","exports"],function(p,d){function a(a,b){a%=b;return 0<=a?a:a+b}Object.defineProperty(d,"__esModule",{value:!0});d.C_INFINITY=Number.POSITIVE_INFINITY;d.C_PI=Math.PI;d.C_2PI=2*d.C_PI;d.C_PI_BY_2=
d.C_PI/2;d.C_RAD_TO_256=128/d.C_PI;d.C_256_TO_RAD=d.C_PI/128;d.C_DEG_TO_256=256/360;d.C_DEG_TO_RAD=d.C_PI/180;d.C_SQRT2=1.414213562;d.C_SQRT2_INV=1/d.C_SQRT2;var b=1/Math.LN2;d.positiveMod=a;d.radToByte=function(b){return a(b*d.C_RAD_TO_256,256)};d.degToByte=function(b){return a(b*d.C_DEG_TO_256,256)};d.log2=function(a){return Math.log(a)*b};d.sqr=function(a){return a*a};d.clamp=function(a,b,e){return Math.min(Math.max(a,b),e)};d.interpolate=function(a,b,e){return a*(1-e)+b*e};d.between=function(a,
b,e){return a>=b&&a<=e||a>=e&&a<=b}})},"esri/views/vectorTiles/RectangleBinPack":function(){define(["require","exports","./Rect"],function(p,d,a){return function(){function b(b,f){this._height=this._width=0;this._free=[];this._width=b;this._height=f;this._free.push(new a(0,0,b,f))}Object.defineProperty(b.prototype,"width",{get:function(){return this._width},enumerable:!0,configurable:!0});Object.defineProperty(b.prototype,"height",{get:function(){return this._height},enumerable:!0,configurable:!0});
b.prototype.allocate=function(b,f){if(b>this._width||f>this._height)return new a;for(var c=null,h=-1,d=0;d<this._free.length;++d){var k=this._free[d];b<=k.width&&f<=k.height&&(null===c||k.y<=c.y&&k.x<=c.x)&&(c=k,h=d)}if(null===c)return new a;this._free.splice(h,1);c.width<c.height?(c.width>b&&this._free.push(new a(c.x+b,c.y,c.width-b,f)),c.height>f&&this._free.push(new a(c.x,c.y+f,c.width,c.height-f))):(c.width>b&&this._free.push(new a(c.x+b,c.y,c.width-b,c.height)),c.height>f&&this._free.push(new a(c.x,
c.y+f,b,c.height-f)));return new a(c.x,c.y,b,f)};b.prototype.release=function(a){for(var b=0;b<this._free.length;++b){var c=this._free[b];if(c.y===a.y&&c.height===a.height&&c.x+c.width===a.x)c.width+=a.width;else if(c.x===a.x&&c.width===a.width&&c.y+c.height===a.y)c.height+=a.height;else if(a.y===c.y&&a.height===c.height&&a.x+a.width===c.x)c.x=a.x,c.width+=a.width;else if(a.x===c.x&&a.width===c.width&&a.y+a.height===c.y)c.y=a.y,c.height+=a.height;else continue;this._free.splice(b,1);this.release(a)}this._free.push(a)};
return b}()})},"esri/views/vectorTiles/SpriteSource":function(){define("require exports ../../core/tsSupport/extendsHelper ../../core/tsSupport/decorateHelper dojo/Deferred ../../request ../../kernel ../../core/promiseUtils".split(" "),function(p,d,a,b,c,f,e,h){return function(){function a(a,b){this.baseURL=a;this.devicePixelRatio=b;this._isRetina=!1;this._spritesData={};this.height=this.width=this.image=null;this.loadStatus="not-loaded"}Object.defineProperty(a.prototype,"spriteNames",{get:function(){var a=
[],b;for(b in this._spritesData)a.push(b);a.sort();return a},enumerable:!0,configurable:!0});a.prototype.getSpriteInfo=function(a){return this._spritesData[a]};a.prototype.load=function(){var a=this;this.loadStatus="loading";return this.baseURL?this._loadSprites().then(function(){a.loadStatus="loaded";return a}).otherwise(function(b){a.loadStatus="failed";return a}):h.resolve(this)};a.prototype._loadSprites=function(){var a=this;this._isRetina=1.15<this.devicePixelRatio?!0:!1;var b=this.baseURL,d=
this._isRetina?"@2x":"";return f(b+d+".json",{callbackParamName:"callback",responseType:"json"}).then(function(g){var f=Object.keys(g.data);if(!f||0===f.length||1===f.length&&"_ssl"===f[0])return h.resolve(null);a._spritesData=g.data;var t=new c,r=new Image;r.crossOrigin="anonymous";r.onload=function(){r.onload=null;a.width=r.width;a.height=r.height;var b=document.createElement("canvas");b.width=r.width;b.height=r.height;b=b.getContext("2d");b.drawImage(r,0,0,r.width,r.height);for(var b=b.getImageData(0,
0,r.width,r.height),b=new Uint8Array(b.data),c,g=0;g<b.length;g+=4)c=b[g+3]/255,b[g]*=c,b[g+1]*=c,b[g+2]*=c;a.image=b;t.resolve()};g=""+b+d+".png";e.id&&(f=e.id.findCredential(g))&&f.token&&(g+="?token\x3d"+f.token);r.src=g;return t})};return a}()})},"esri/views/vectorTiles/GlyphMosaic":function(){define("require exports dojo/has ../../core/promiseUtils ./Rect ../webgl/Texture ./RectangleBinPack".split(" "),function(p,d,a,b,c,f,e){var h;a("stable-symbol-rendering")&&(h=new Set);return function(){function d(a,
b,c){this.height=this.width=0;this._dirties=[];this._glyphData=[];this._currentPage=0;this._glyphIndex={};this._textures=[];this._rangePromises=new Map;(0>=a||0>=b)&&console.error("Glyph mosaic width and height must be greater than zero!");this.width=a;this.height=b;this._glyphSource=c;this._binPack=new e(a-4,b-4);this._glyphData.push(new Uint8Array(a*b));this._dirties.push(!0);this._textures.push(void 0)}d.prototype.getGlyphItems=function(f,d,n){var g=this,q=[],t=this._glyphSource,r=new Set;f=1/
256;for(var u=0;u<n.length;u++)r.add(Math.floor(n[u]*f));var k=[];r.forEach(function(a){if(256>=a){var b=d+a;g._rangePromises.has(b)?k.push(g._rangePromises.get(b)):(a=t.getRange(d,a).always(function(){g._rangePromises["delete"](b)}),g._rangePromises.set(b,a),k.push(a))}});return b.all(k).then(function(b){b=g._glyphIndex[d];b||(b={},g._glyphIndex[d]=b);var f;if(a("stable-symbol-rendering")){h.clear();for(var u=0;u<n.length;u++)f=n[u],h.add(f);var k=[];r.forEach(function(a){k.push(a)});k.sort();f=
[];for(u=0;u<k.length;u++)for(var m=k[u],l=0;256>l;++l)f.push(256*m+l)}else f=n;u=0;for(m=f;u<m.length;u++)if(f=m[u],l=b[f]){if(!a("stable-symbol-rendering")||h.has(f))q[f]={rect:l.rect,metrics:l.metrics,page:l.page}}else{var w=t.getGlyph(d,f);if(w&&w.metrics){var l=w.metrics,v=void 0;if(0===l.width)v=new c(0,0,0,0);else{var p=l.width+6,L=l.height+6,G=p%4?4-p%4:4,C=L%4?4-L%4:4;1===G&&(G=5);1===C&&(C=5);v=g._binPack.allocate(p+G,L+C);v.isEmpty&&(g._dirties[g._currentPage]||(g._glyphData[g._currentPage]=
null),g._currentPage=g._glyphData.length,g._glyphData.push(new Uint8Array(g.width*g.height)),g._dirties.push(!0),g._textures.push(void 0),g._binPack=new e(g.width-4,g.height-4),v=g._binPack.allocate(p+G,L+C));var G=g._glyphData[g._currentPage],w=w.bitmap,K=C=void 0;if(w)for(var E=0;E<L;E++)for(var C=p*E,K=g.width*(v.y+E+1)+v.x,B=0;B<p;B++)G[K+B+1]=w[C+B]}b[f]={rect:v,metrics:l,tileIDs:null,page:g._currentPage};if(!a("stable-symbol-rendering")||h.has(f))q[f]={rect:v,metrics:l,page:g._currentPage};
g._dirties[g._currentPage]=!0}}return q})};d.prototype.removeGlyphs=function(a){for(var b in this._glyphIndex){var c=this._glyphIndex[b];if(c){var g=void 0,f;for(f in c)if(g=c[f],g.tileIDs["delete"](a),0===g.tileIDs.size){for(var e=this._glyphData[g.page],d=g.rect,h=void 0,k=void 0,l=0;l<d.height;l++)for(h=this.width*(d.y+l)+d.x,k=0;k<d.width;k++)e[h+k]=0;delete c[f];this._dirties[g.page]=!0}}}};d.prototype.bind=function(a,b,c,g){void 0===g&&(g=0);this._textures[c]||(this._textures[c]=new f(a,{pixelFormat:6406,
dataType:5121,width:this.width,height:this.height},new Uint8Array(this.width*this.height)));var e=this._textures[c];e.setSamplingMode(b);this._dirties[c]&&e.setData(this._glyphData[c]);a.bindTexture(e,g);this._dirties[c]=!1};d.prototype.dispose=function(){this._binPack=null;for(var a=0,b=this._textures;a<b.length;a++){var c=b[a];c&&c.dispose()}this._textures.length=0};return d}()})},"esri/views/vectorTiles/GlyphSource":function(){define(["require","exports","../../core/promiseUtils","../../request",
"../../core/pbf"],function(p,d,a,b,c){var f=function(){function a(a){this._metrics=[];this._bitmaps=[];if(a)for(;a.next();)switch(a.tag()){case 1:for(var b=a.getMessage();b.next();)switch(b.tag()){case 3:for(var c=b.getMessage(),f=void 0,g=void 0,e=void 0,t=void 0,d=void 0,h=void 0,l=void 0;c.next();)switch(c.tag()){case 1:f=c.getUInt32();break;case 2:g=c.getBytes();break;case 3:e=c.getUInt32();break;case 4:t=c.getUInt32();break;case 5:d=c.getSInt32();break;case 6:h=c.getSInt32();break;case 7:l=c.getUInt32();
break;default:c.skip()}f&&(this._metrics[f]={width:e,height:t,left:d,top:h,advance:l},this._bitmaps[f]=g);break;default:b.skip()}break;default:a.skip()}}a.prototype.getMetrics=function(a){return this._metrics[a]};a.prototype.getBitmap=function(a){return this._bitmaps[a]};return a}(),e=function(){function a(){this._ranges=[]}a.prototype.getRange=function(a){return this._ranges[a]};a.prototype.addRange=function(a,b){this._ranges[a]=b};return a}();return function(){function d(a){this._glyphInfo={};this._baseURL=
a}d.prototype.getRange=function(e,d){var h=this._getFontStack(e);if(h.getRange(d))return a.resolve();var n=256*d,g=n+255;e=this._baseURL.replace("{fontstack}",e).replace("{range}",n+"-"+g);return b(e,{callbackParamName:"callback",responseType:"array-buffer"}).then(function(a){h.addRange(d,new f(new c(new Uint8Array(a.data),new DataView(a.data))))}).otherwise(function(){h.addRange(d,new f)})};d.prototype.getGlyph=function(a,b){if(a=this._getFontStack(a)){var c=Math.floor(b/256);if(!(256<c)&&(a=a.getRange(c)))return{metrics:a.getMetrics(b),
bitmap:a.getBitmap(b)}}};d.prototype._getFontStack=function(a){var b=this._glyphInfo[a];b||(b=this._glyphInfo[a]=new e);return b};return d}()})},"esri/core/pbf":function(){define(["require","exports"],function(p,d){return function(){function a(a,c,f,e){this._tag=0;this._dataType=99;this._data=a;this._dataView=c;this._pos=f||0;this._end=e||a.byteLength}a.prototype.clone=function(){return new a(this._data,this._dataView,this._pos,this._end)};a.prototype.next=function(a){for(;;){if(this._pos===this._end)return!1;
var b=this._decodeVarint();this._tag=b>>3;this._dataType=b&7;if(!a||a===this._tag)break;this.skip()}return!0};a.prototype.empty=function(){return this._pos>=this._end};a.prototype.tag=function(){return this._tag};a.prototype.getInt32=function(){return this._decodeVarint()};a.prototype.getInt64=function(){return this._decodeVarint()};a.prototype.getUInt32=function(){return this._decodeVarint()};a.prototype.getUInt64=function(){return this._decodeVarint()};a.prototype.getSInt32=function(){return this._decodeSVarint()};
a.prototype.getSInt64=function(){return this._decodeSVarint()};a.prototype.getBool=function(){var a=0!==this._data[this._pos];this._skip(1);return a};a.prototype.getEnum=function(){return this._decodeVarint()};a.prototype.getFixed64=function(){var a=this._dataView,c=this._pos,a=a.getUint32(c,!0)+4294967296*a.getUint32(c+4,!0);this._skip(8);return a};a.prototype.getSFixed64=function(){var a=this._dataView,c=this._pos,a=a.getUint32(c,!0)+4294967296*a.getInt32(c+4,!0);this._skip(8);return a};a.prototype.getDouble=
function(){var a=this._dataView.getFloat64(this._pos,!0);this._skip(8);return a};a.prototype.getFixed32=function(){var a=this._dataView.getUint32(this._pos,!0);this._skip(4);return a};a.prototype.getSFixed32=function(){var a=this._dataView.getInt32(this._pos,!0);this._skip(4);return a};a.prototype.getFloat=function(){var a=this._dataView.getFloat32(this._pos,!0);this._skip(4);return a};a.prototype.getString=function(){var a=this._getLength(),c=this._pos,c=this._toString(this._data,c,c+a);this._skip(a);
return c};a.prototype.getBytes=function(){var a=this._getLength(),c=this._pos,c=this._toBytes(this._data,c,c+a);this._skip(a);return c};a.prototype.getMessage=function(){var b=this._getLength(),c=this._pos,c=new a(this._data,this._dataView,c,c+b);this._skip(b);return c};a.prototype.skip=function(){switch(this._dataType){case 0:this._decodeVarint();break;case 1:this._skip(8);break;case 2:this._skip(this._getLength());break;case 5:this._skip(4);break;default:throw Error("Invalid data type!");}};a.prototype._skip=
function(a){if(this._pos+a>this._end)throw Error("Attempt to skip past the end of buffer!");this._pos+=a};a.prototype._decodeVarint=function(){var a=this._data,c=this._pos,f=0,e;if(10<=this._end-c){if(e=a[c++],f|=e&127,0!==(e&128)&&(e=a[c++],f|=(e&127)<<7,0!==(e&128)&&(e=a[c++],f|=(e&127)<<14,0!==(e&128)&&(e=a[c++],f|=(e&127)<<21,0!==(e&128)&&(e=a[c++],f+=268435456*(e&127),0!==(e&128)&&(e=a[c++],f+=34359738368*(e&127),0!==(e&128)&&(e=a[c++],f+=4398046511104*(e&127),0!==(e&128)&&(e=a[c++],f+=562949953421312*
(e&127),0!==(e&128)&&(e=a[c++],f+=72057594037927936*(e&127),0!==(e&128)&&(e=a[c++],f+=0x7fffffffffffffff*(e&127),0!==(e&128)))))))))))throw Error("Varint too long!");}else{for(var d=1;c!==this._end;){e=a[c];if(0===(e&128))break;++c;f+=(e&127)*d;d*=128}if(c===this._end)throw Error("Varint overrun!");++c;f+=e*d}this._pos=c;return f};a.prototype._decodeSVarint=function(){var a=this._decodeVarint();return a%2?-(a+1)/2:a/2};a.prototype._getLength=function(){if(2!==this._dataType)throw Error("Not a delimited data type!");
return this._decodeVarint()};a.prototype._toString=function(a,c,f){var b="",d="";for(f=Math.min(this._end,f);c<f;++c){var l=a[c];l&128?d+="%"+l.toString(16):(b+=decodeURIComponent(d)+String.fromCharCode(l),d="")}d.length&&(b+=decodeURIComponent(d));return b};a.prototype._toBytes=function(a,c,f){f=Math.min(this._end,f);return new Uint8Array(a.buffer,c,f-c)};return a}()})},"esri/views/vectorTiles/VectorTileDisplayObject":function(){define("require exports ../../core/tsSupport/extendsHelper ../../core/libs/gl-matrix/vec2 ../../core/libs/gl-matrix/mat4 ../../core/ObjectPool ../../geometry/support/spatialReferenceUtils ../webgl/BufferObject ../2d/engine/DisplayObject ../2d/tiling/TileKey ./RenderBucket".split(" "),
function(p,d,a,b,c,f,e,h,l,k,m){return function(d){function g(){for(var a=[],g=0;g<arguments.length;g++)a[g]=arguments[g];g=d.call(this)||this;g._renderBuckets=[];g._vectorTileData=null;g._symbolUpdateData=null;g.status=5;g.coords=[0,0];g.bounds=[0,0,0,0];g.tileTransform={transform:Float32Array[16],displayCoord:Float32Array[2]};g.stencilData={mask:0,reference:0};g.status=0;g.tileTransform.transform=c.create();g.tileTransform.displayCoord=b.create();0<a.length&&(f=g.acquire).call.apply(f,[g].concat(a));
return g;var f}a(g,d);g.prototype.reset=function(){k.pool.release(this.key);this.refKey=this.key=null;this.coords[0]=0;this.coords[1]=0;this.bounds[0]=0;this.bounds[1]=0;this.bounds[2]=0;this.height=this.width=this.bounds[3]=0;this.resolution=null;this.rotation=0;this.id=this._connection=this.workerID=this.styleLayers=this._vectorTileData=null;this.tileTransform.transform.fill(0);this.tileTransform.displayCoord.fill(0);this.stencilData.mask=0;this.stencilData.reference=0;this._renderBuckets.length=
0;this._symbolUpdateData=null;this.status=0};g.prototype.acquire=function(a,b,c,g,f){this.key=a;this.refKey=b;b=c.lodAt(a.level).resolution;var d=c.size[0]*b,q=c.origin,h=a.col*d,t=a.row*d,u=c.spatialReference,r=0;u&&(u._isWrappable?u._isWrappable():u.isWrappable)&&(u=e.getInfo(u),r=u.valid[1]-u.valid[0]);h=q.x+h+a.world*r;q=q.y-t;this.coords[0]=h;this.coords[1]=q;this.bounds[0]=h;this.bounds[1]=q;this.bounds[2]=h+d;this.bounds[3]=q-d;this.widthInPixels=c.size[1];this.coordRange=4096;this.resolution=
b;this.rotation=f;this.styleLayers=g;this.id=a.id;this.status=1};g.prototype.setData=function(a,b,c){this._vectorTileData=a;this.workerID=b;this._connection=c;this.status=3};g.prototype.updateSymbolData=function(a){a&&(this._symbolUpdateData=a,this.requestRender())};g.prototype.dispose=function(){this.fillVertexArrayObject&&(this.fillVertexArrayObject.dispose(),this.fillVertexArrayObject=null);this.fillDDVertexArrayObject&&(this.fillDDVertexArrayObject.dispose(),this.fillDDVertexArrayObject=null);
this.outlineVertexArrayObject&&(this.outlineVertexArrayObject.dispose(),this.outlineVertexArrayObject=null);this.outlineDDVertexArrayObject&&(this.outlineDDVertexArrayObject.dispose(),this.outlineDDVertexArrayObject=null);this.lineVertexArrayObject&&(this.lineVertexArrayObject.dispose(),this.lineVertexArrayObject=null);this.lineDDVertexArrayObject&&(this.lineDDVertexArrayObject.dispose(),this.lineDDVertexArrayObject=null);this.iconVertexArrayObject&&(this.iconVertexArrayObject.dispose(),this.iconVertexArrayObject=
null);this.iconDDVertexArrayObject&&(this.iconDDVertexArrayObject.dispose(),this.iconDDVertexArrayObject=null);this.textVertexArrayObject&&(this.textVertexArrayObject.dispose(),this.textVertexArrayObject=null);this.textDDVertexArrayObject&&(this.textDDVertexArrayObject.dispose(),this.textDDVertexArrayObject=null);this.fillVertexBuffer&&(this.fillVertexBuffer.dispose(),this.fillVertexBuffer=null);this.fillDDVertexBuffer&&(this.fillDDVertexBuffer.dispose(),this.fillDDVertexBuffer=null);this.fillIndexBuffer&&
(this.fillIndexBuffer.dispose(),this.fillIndexBuffer=null);this.outlineVertexBuffer&&(this.outlineVertexBuffer.dispose(),this.outlineVertexBuffer=null);this.outlineDDVertexBuffer&&(this.outlineDDVertexBuffer.dispose(),this.outlineDDVertexBuffer=null);this.outlineIndexBuffer&&(this.outlineIndexBuffer.dispose(),this.outlineIndexBuffer=null);this.lineVertexBuffer&&(this.lineVertexBuffer.dispose(),this.lineVertexBuffer=null);this.lineDDVertexBuffer&&(this.lineDDVertexBuffer.dispose(),this.lineDDVertexBuffer=
null);this.lineIndexBuffer&&(this.lineIndexBuffer.dispose(),this.lineIndexBuffer=null);this.iconVertexBuffer&&(this.iconVertexBuffer.dispose(),this.iconVertexBuffer=null);this.iconDDVertexBuffer&&(this.iconDDVertexBuffer.dispose(),this.iconDDVertexBuffer=null);this.iconIndexBuffer&&(this.iconIndexBuffer.dispose(),this.iconIndexBuffer=null);this.textVertexBuffer&&(this.textVertexBuffer.dispose(),this.textVertexBuffer=null);this.textDDVertexBuffer&&(this.textDDVertexBuffer.dispose(),this.textDDVertexBuffer=
null);this.textIndexBuffer&&(this.textIndexBuffer.dispose(),this.textIndexBuffer=null);this.texture&&(this.texture.dispose(),this.texture=null);this._renderBuckets.length=0;this.status=7};g.prototype.attach=function(a){if(4===this.status)return!0;this.status=3;if(!this._vectorTileData)return!1;if(!this._vectorTileData.bufferDataInfo)return this.status=4,!0;if(0===this._renderBuckets.length)for(var b=new Uint32Array(this._vectorTileData.bucketDataInfo),c=b.length,g=0;g<c;){var f=b[g],e=b[g+1];if(0===
e)e=new m.BackgroundRenderBucket,e.layerID=f,this._renderBuckets.push(e),g+=2;else if(1===e)e=new m.FillRenderBucket,e.layerID=f,e.triangleElementStart=b[g+2],e.triangleElementCount=b[g+3],e.outlineElementStart=b[g+4],e.outlineElementCount=b[g+5],this._renderBuckets.push(e),g+=6;else if(2===e)e=new m.LineRenderBucket,e.layerID=f,e.triangleElementStart=b[g+2],e.triangleElementCount=b[g+3],this._renderBuckets.push(e),g+=6;else if(3===e){e=new m.SymbolRenderBucket;e.layerID=f;e.isSDF=0!==b[g+2];var d=
g+3,f=b[d];d++;if(0<f)for(var q=void 0,n=void 0,k=void 0,l=0;l<f;l++)q=b[d],n=b[d+1],k=b[d+2],e.markerPerPageElementsMap.set(q,[n,k]),d+=3;var p=b[d];d++;if(0<p)for(k=n=q=void 0,l=0;l<p;l++)q=b[d],n=b[d+1],k=b[d+2],e.glyphPerPageElementsMap.set(q,[n,k]),d+=3;this._renderBuckets.push(e);g+=5+3*f+3*p}else console.error("Bad bucket type!")}a=a.context;b=new Uint32Array(this._vectorTileData.bufferDataInfo);c=b.length;for(e=g=0;e<c;e+=2,g++)if(!(0>=b[e+1]||0===this._vectorTileData.bufferData[g].byteLength))switch(b[e]){case 1:this.fillVertexBuffer?
this.fillVertexBuffer.setData(this._vectorTileData.bufferData[g]):this.fillVertexBuffer=h.createVertex(a,35044,this._vectorTileData.bufferData[g]);break;case 2:this.fillDDVertexBuffer?this.fillDDVertexBuffer.setData(this._vectorTileData.bufferData[g]):this.fillDDVertexBuffer=h.createVertex(a,35044,this._vectorTileData.bufferData[g]);break;case 3:this.fillIndexBuffer?this.fillIndexBuffer.setData(this._vectorTileData.bufferData[g]):this.fillIndexBuffer=h.createIndex(a,35044,this._vectorTileData.bufferData[g]);
break;case 4:this.outlineVertexBuffer?this.outlineVertexBuffer.setData(this._vectorTileData.bufferData[g]):this.outlineVertexBuffer=h.createVertex(a,35044,this._vectorTileData.bufferData[g]);break;case 5:this.outlineDDVertexBuffer?this.outlineDDVertexBuffer.setData(this._vectorTileData.bufferData[g]):this.outlineDDVertexBuffer=h.createVertex(a,35044,this._vectorTileData.bufferData[g]);break;case 6:this.outlineIndexBuffer?this.outlineIndexBuffer.setData(this._vectorTileData.bufferData[g]):this.outlineIndexBuffer=
h.createIndex(a,35044,this._vectorTileData.bufferData[g]);break;case 7:this.lineVertexBuffer?this.lineVertexBuffer.setData(this._vectorTileData.bufferData[g]):this.lineVertexBuffer=h.createVertex(a,35044,this._vectorTileData.bufferData[g]);break;case 8:this.lineDDVertexBuffer?this.lineDDVertexBuffer.setData(this._vectorTileData.bufferData[g]):this.lineDDVertexBuffer=h.createVertex(a,35044,this._vectorTileData.bufferData[g]);break;case 9:this.lineIndexBuffer?this.lineIndexBuffer.setData(this._vectorTileData.bufferData[g]):
this.lineIndexBuffer=h.createIndex(a,35044,this._vectorTileData.bufferData[g]);break;case 10:this.iconVertexBuffer?this.iconVertexBuffer.setData(this._vectorTileData.bufferData[g]):this.iconVertexBuffer=h.createVertex(a,35044,this._vectorTileData.bufferData[g]);break;case 11:this.iconDDVertexBuffer?this.iconDDVertexBuffer.setData(this._vectorTileData.bufferData[g]):this.iconDDVertexBuffer=h.createVertex(a,35044,this._vectorTileData.bufferData[g]);break;case 12:this.iconIndexBuffer?this.iconIndexBuffer.setData(this._vectorTileData.bufferData[g]):
this.iconIndexBuffer=h.createIndex(a,35044,this._vectorTileData.bufferData[g]);break;case 13:this.textVertexBuffer?this.textVertexBuffer.setData(this._vectorTileData.bufferData[g]):this.textVertexBuffer=h.createVertex(a,35044,this._vectorTileData.bufferData[g]);break;case 14:this.textDDVertexBuffer?this.textDDVertexBuffer.setData(this._vectorTileData.bufferData[g]):this.textDDVertexBuffer=h.createVertex(a,35044,this._vectorTileData.bufferData[g]);break;case 15:this.textIndexBuffer?this.textIndexBuffer.setData(this._vectorTileData.bufferData[g]):
this.textIndexBuffer=h.createIndex(a,35044,this._vectorTileData.bufferData[g])}this.status=4;return!0};g.prototype.detach=function(a){-1!==this.workerID&&this._connection&&6!==this.status&&7!==this.status&&this._connection.broadcast("destructTileData",{key:this.id,worker:this.workerID},[]);this.dispose();d.prototype.detach.call(this,a)};g.prototype.doRender=function(a){if(this.visible&&4===this.status){var b=a.context,c=a.renderer;if(b&&c){var g=a.drawphase;this._symbolUpdateData&&this._updateSymbolData(a);
b.setStencilFunction(514,this.stencilData.reference,this.stencilData.mask);var e=this.styleLayers,f=void 0!==a.layerOpacity?a.layerOpacity:1;if(0!==f){var d,h=this._renderBuckets.length,q=0;if(0===g)for(q=h-1;0<=q;q--)d=this._renderBuckets[q],3!==d.type&&d.hasData()&&c.renderBucket(b,d,a.displayLevel,a.requiredLevel,g,this,e.layers[d.layerID],f);else for(q=0;q<h;q++)d=this._renderBuckets[q],d.hasData()&&c.renderBucket(b,d,a.displayLevel,a.requiredLevel,g,this,e.layers[d.layerID],f)}}}};g.prototype._updateSymbolData=
function(a){if(!this._symbolUpdateData.bucketDataInfo)return!0;var b=new Uint32Array(this._symbolUpdateData.bucketDataInfo),c=b.length;if(0===c)return this._symbolUpdateData=null,!0;if(1>a.budget.remaining||4!==this.status)return this.requestRender(),!1;a=a.context;for(var g=new Uint32Array(this._symbolUpdateData.bufferDataInfo),f=g.length,e=0,d=0;d<f;d+=2,e++)switch(g[d]){case 10:this.iconVertexBuffer&&(this.iconVertexBuffer.dispose(),this.iconVertexBuffer=null);this.iconVertexBuffer=h.createVertex(a,
35044,this._symbolUpdateData.bufferData[e]);break;case 11:this.iconDDVertexBuffer&&(this.iconDDVertexBuffer.dispose(),this.iconDDVertexBuffer=null);this.iconDDVertexBuffer=h.createVertex(a,35044,this._symbolUpdateData.bufferData[e]);break;case 12:this.iconIndexBuffer&&(this.iconIndexBuffer.dispose(),this.iconIndexBuffer=null);this.iconIndexBuffer=h.createIndex(a,35044,this._symbolUpdateData.bufferData[e]);break;case 13:this.textVertexBuffer&&(this.textVertexBuffer.dispose(),this.textVertexBuffer=
null);this.textVertexBuffer=h.createVertex(a,35044,this._symbolUpdateData.bufferData[e]);break;case 14:this.textDDVertexBuffer&&(this.textDDVertexBuffer.dispose(),this.textDDVertexBuffer=null);this.textDDVertexBuffer=h.createVertex(a,35044,this._symbolUpdateData.bufferData[e]);break;case 15:this.textIndexBuffer&&(this.textIndexBuffer.dispose(),this.textIndexBuffer=null),this.textIndexBuffer=h.createIndex(a,35044,this._symbolUpdateData.bufferData[e])}a=this._renderBuckets.length;for(g=0;g<a;g++)this._renderBuckets[g]instanceof
m.SymbolRenderBucket&&(f=this._renderBuckets[g],f.markerPerPageElementsMap.clear(),f.glyphPerPageElementsMap.clear());for(a=0;a<c;){f=b[a];e=-1;d=this._renderBuckets.length;for(g=0;g<d;g++)if(this._renderBuckets[g].layerID===f){e=g;break}g=this._renderBuckets[e];g||(g=new m.SymbolRenderBucket,g.layerID=f,g.isSDF=0!==b[a+2],this._renderBuckets.push(g));var q=a+3,f=b[q];q++;if(0<f)for(var n=d=e=void 0,k=0;k<f;k++)e=b[q],d=b[q+1],n=b[q+2],g.markerPerPageElementsMap.set(e,[d,n]),q+=3;var l=b[q];q++;if(0<
l)for(n=d=e=void 0,k=0;k<l;k++)e=b[q],d=b[q+1],n=b[q+2],g.glyphPerPageElementsMap.set(e,[d,n]),q+=3;a+=5+3*f+3*l}this.iconVertexArrayObject&&(this.iconVertexArrayObject.dispose(),this.iconVertexArrayObject=null);this.iconDDVertexArrayObject&&(this.iconDDVertexArrayObject.dispose(),this.iconDDVertexArrayObject=null);this.textVertexArrayObject&&(this.textVertexArrayObject.dispose(),this.textVertexArrayObject=null);this.textDDVertexArrayObject&&(this.textDDVertexArrayObject.dispose(),this.textDDVertexArrayObject=
null);this._symbolUpdateData=null;return!0};g.pool=new f(g);return g}(l)})},"esri/core/libs/gl-matrix/vec2":function(){define(["./common"],function(p){var d={create:function(){var a=new p.ARRAY_TYPE(2);a[0]=0;a[1]=0;return a},clone:function(a){var b=new p.ARRAY_TYPE(2);b[0]=a[0];b[1]=a[1];return b},fromValues:function(a,b){var c=new p.ARRAY_TYPE(2);c[0]=a;c[1]=b;return c},copy:function(a,b){a[0]=b[0];a[1]=b[1];return a},set:function(a,b,c){a[0]=b;a[1]=c;return a},add:function(a,b,c){a[0]=b[0]+c[0];
a[1]=b[1]+c[1];return a},subtract:function(a,b,c){a[0]=b[0]-c[0];a[1]=b[1]-c[1];return a}};d.sub=d.subtract;d.multiply=function(a,b,c){a[0]=b[0]*c[0];a[1]=b[1]*c[1];return a};d.mul=d.multiply;d.divide=function(a,b,c){a[0]=b[0]/c[0];a[1]=b[1]/c[1];return a};d.div=d.divide;d.ceil=function(a,b){a[0]=Math.ceil(b[0]);a[1]=Math.ceil(b[1]);return a};d.floor=function(a,b){a[0]=Math.floor(b[0]);a[1]=Math.floor(b[1]);return a};d.min=function(a,b,c){a[0]=Math.min(b[0],c[0]);a[1]=Math.min(b[1],c[1]);return a};
d.max=function(a,b,c){a[0]=Math.max(b[0],c[0]);a[1]=Math.max(b[1],c[1]);return a};d.round=function(a,b){a[0]=Math.round(b[0]);a[1]=Math.round(b[1]);return a};d.scale=function(a,b,c){a[0]=b[0]*c;a[1]=b[1]*c;return a};d.scaleAndAdd=function(a,b,c,f){a[0]=b[0]+c[0]*f;a[1]=b[1]+c[1]*f;return a};d.distance=function(a,b){var c=b[0]-a[0];a=b[1]-a[1];return Math.sqrt(c*c+a*a)};d.dist=d.distance;d.squaredDistance=function(a,b){var c=b[0]-a[0];a=b[1]-a[1];return c*c+a*a};d.sqrDist=d.squaredDistance;d.length=
function(a){var b=a[0];a=a[1];return Math.sqrt(b*b+a*a)};d.len=d.length;d.squaredLength=function(a){var b=a[0];a=a[1];return b*b+a*a};d.sqrLen=d.squaredLength;d.negate=function(a,b){a[0]=-b[0];a[1]=-b[1];return a};d.inverse=function(a,b){a[0]=1/b[0];a[1]=1/b[1];return a};d.normalize=function(a,b){var c=b[0],f=b[1],c=c*c+f*f;0<c&&(c=1/Math.sqrt(c),a[0]=b[0]*c,a[1]=b[1]*c);return a};d.dot=function(a,b){return a[0]*b[0]+a[1]*b[1]};d.cross=function(a,b,c){b=b[0]*c[1]-b[1]*c[0];a[0]=a[1]=0;a[2]=b;return a};
d.lerp=function(a,b,c,f){var e=b[0];b=b[1];a[0]=e+f*(c[0]-e);a[1]=b+f*(c[1]-b);return a};d.random=function(a,b){b=b||1;var c=2*p.RANDOM()*Math.PI;a[0]=Math.cos(c)*b;a[1]=Math.sin(c)*b;return a};d.transformMat2=function(a,b,c){var f=b[0];b=b[1];a[0]=c[0]*f+c[2]*b;a[1]=c[1]*f+c[3]*b;return a};d.transformMat2d=function(a,b,c){var f=b[0];b=b[1];a[0]=c[0]*f+c[2]*b+c[4];a[1]=c[1]*f+c[3]*b+c[5];return a};d.transformMat3=function(a,b,c){var f=b[0];b=b[1];a[0]=c[0]*f+c[3]*b+c[6];a[1]=c[1]*f+c[4]*b+c[7];return a};
d.transformMat4=function(a,b,c){var f=b[0];b=b[1];a[0]=c[0]*f+c[4]*b+c[12];a[1]=c[1]*f+c[5]*b+c[13];return a};d.forEach=function(){var a=d.create();return function(b,c,f,e,d,l){c||(c=2);f||(f=0);for(e=e?Math.min(e*c+f,b.length):b.length;f<e;f+=c)a[0]=b[f],a[1]=b[f+1],d(a,a,l),b[f]=a[0],b[f+1]=a[1];return b}}();d.str=function(a){return"vec2("+a[0]+", "+a[1]+")"};d.exactEquals=function(a,b){return a[0]===b[0]&&a[1]===b[1]};d.equals=function(a,b){var c=a[0];a=a[1];var f=b[0];b=b[1];return Math.abs(c-
f)<=p.EPSILON*Math.max(1,Math.abs(c),Math.abs(f))&&Math.abs(a-b)<=p.EPSILON*Math.max(1,Math.abs(a),Math.abs(b))};return d})},"esri/views/vectorTiles/RenderBucket":function(){define(["require","exports","../../core/tsSupport/extendsHelper","../../core/tsSupport/decorateHelper"],function(p,d,a,b){Object.defineProperty(d,"__esModule",{value:!0});p=function(){return function(a){this.type=a}}();d.RenderBucket=p;b=function(b){function c(){var a=b.call(this,2)||this;a.triangleElementStart=0;a.triangleElementCount=
0;a.joinStart=0;a.joinCount=0;return a}a(c,b);c.prototype.hasData=function(){return 0<this.triangleElementCount||0<this.joinCount};return c}(p);d.LineRenderBucket=b;b=function(b){function c(){var a=b.call(this,1)||this;a.triangleElementStart=0;a.triangleElementCount=0;a.outlineElementStart=0;a.outlineElementCount=0;return a}a(c,b);c.prototype.hasData=function(){return 0<this.triangleElementCount||0<this.outlineElementCount};return c}(p);d.FillRenderBucket=b;b=function(b){function c(){var a=b.call(this,
3)||this;a.markerPerPageElementsMap=new Map;a.glyphPerPageElementsMap=new Map;a.isSDF=!1;return a}a(c,b);c.prototype.hasData=function(){return 0<this.markerPerPageElementsMap.size||0<this.glyphPerPageElementsMap.size};return c}(p);d.SymbolRenderBucket=b;p=function(b){function c(){return b.call(this,0)||this}a(c,b);c.prototype.hasData=function(){return!0};return c}(p);d.BackgroundRenderBucket=p})},"esri/views/vectorTiles/VectorTileContainer":function(){define("require exports ../../core/tsSupport/extendsHelper dojo/has ../../core/promiseUtils ../../core/libs/gl-matrix/vec3 ../../core/libs/gl-matrix/mat4 ../2d/engine/Container ./renderers/Renderer ./GeometryUtils".split(" "),
function(p,d,a,b,c,f,e,h,l,k){return function(d){function h(){var a=d.call(this)||this;a.isInitialized=!1;a._displayWidth=0;a._displayHeight=0;a._pointToCallbacks=new Map;a._tileCoordinateScale=f.create();a._orientationVec=f.create();a._displayScale=f.create();a._orientationVec.set([0,0,1]);a._defaultTransform=e.create();return a}a(h,d);h.prototype.initialize=function(a,b,c,e){this._renderer=new l;this._renderer.initialize(a,b);this._tileInfoView=e;this._tileInfo=c;this.isInitialized=!0};h.prototype.destroy=
function(){this._renderer&&(this._renderer.dispose(),this._renderer=null)};h.prototype.hittest=function(a,b){var g=this,e=[a,b];return c.create(function(a,b){g._pointToCallbacks.set(e,{resolve:a,reject:b});g.requestRender()},function(){g._pointToCallbacks.has(e)&&g._pointToCallbacks.delete(e)})};h.prototype.prepareChildrenRenderParameters=function(a){var b=a.state;if(!b||!this._tileInfo||!this.isInitialized)return a;a.displayLevel=this._tileInfo.scaleToZoom(b.scale);a.requiredLevel=this._tileInfoView.getClosestInfoForScale(b.scale).level;
a.renderer=this._renderer;return a};h.prototype.renderChildren=function(a){var c=this;if(0!==this.children.length&&this.isInitialized&&a&&a.state){this.sortChildren(function(a,b){return a.key.level-b.key.level});for(var g=this.children.length,e=1;e<=g;e++){var f=this.children[e-1];f.attached&&(f.stencilData.reference=e,f.stencilData.mask=255)}this._updateTilesTransform(a.state,this._tileInfoView.getClosestInfoForScale(a.state.scale).level,this.children);g=a.context;g.setDepthWriteEnabled(!0);this._renderer.setStateParams(a.state,
a.devicePixelRatio,a.displayLevel);this._renderer.drawClippingMasks(g,this.children);g.setStencilWriteMask(0);g.setBlendFunctionSeparate(1,771,1,771);g.setStencilOp(7680,7680,7681);g.setDepthFunction(515);g.setBlendingEnabled(!1);g.setStencilTestEnabled(!0);g.setDepthTestEnabled(!0);g.setDepthWriteEnabled(!0);a.drawphase=0;d.prototype.renderChildren.call(this,a);g.setDepthWriteEnabled(!1);g.setBlendingEnabled(!0);a.drawphase=1;d.prototype.renderChildren.call(this,a);a.drawphase=2;d.prototype.renderChildren.call(this,
a);g.setStencilTestEnabled(!1);g.setDepthTestEnabled(!1);if(b("esri-vector-tiles-debug"))for(e=0,f=this.children;e<f.length;e++){var h=f[e];h.attached&&h.visible&&this._renderer.renderTileInfo(g,h)}0<this._pointToCallbacks.size&&(this._pointToCallbacks.forEach(function(b,g){b.resolve(c._hitTest(a,g[0],g[1]))}),this._pointToCallbacks.clear());this._renderer.needsRedraw()&&this.requestRender()}};h.prototype.removeAllChildren=function(){for(var a=0;a<this.children.length;a++)this.children[a].dispose();
d.prototype.removeAllChildren.call(this)};h.prototype._hitTest=function(a,b,c){var g=this._tileInfoView.getClosestInfoForScale(a.state.scale).level,e=[0,0];a.state.toMap(e,[b,c]);var f=a.state.clone(),d=f.viewpoint.clone(),h=d.targetGeometry;h.x=e[0];h.y=e[1];d.targetGeometry=h;f.viewpoint=d;f.size=[3,3];this._renderer.setStateParams(f,a.devicePixelRatio,a.displayLevel);return(a=this._renderer.hitTest({budget:a.budget,devicePixelRatio:a.devicePixelRatio,stationary:a.stationary,opacity:a.opacity,context:a.context,
displayLevel:a.displayLevel,requiredLevel:a.requiredLevel,renderer:a.renderer,layerOpacity:a.layerOpacity,state:f,drawphase:3},b,c,this.children,g,3,this._updateTilesTransform.bind(this)))&&0!==a.length?a[0]:null};h.prototype._updateTilesTransform=function(a,b,c){var g=1/a.width,e=1/a.height,f=[0,0];this._calculateRelativeViewProjMat(this._tileInfo.lodAt(b).resolution,a.resolution,a.rotation,this._tileInfo.size[1],4096,a.width,a.height,this._defaultTransform);for(var d=0;d<c.length;d++){var h=c[d];
a.toScreen(f,h.coords);f[1]=a.height-f[1];h.tileTransform.displayCoord[0]=2*f[0]*g-1;h.tileTransform.displayCoord[1]=2*f[1]*e-1;h.key.level===b&&4096===h.coordRange?h.tileTransform.transform.set(this._defaultTransform):this._calculateRelativeViewProjMat(this._tileInfo.lodAt(h.key.level).resolution,a.resolution,a.rotation,this._tileInfo.size[1],h.coordRange,a.width,a.height,h.tileTransform.transform)}};h.prototype._calculateRelativeViewProjMat=function(a,b,c,f,d,h,n,m){var g=.125;512!==f&&4096!==d&&
(g=f/d);a=a/b*g;this._tileCoordinateScale.set([a,a,1]);if(h!==this._displayWidth||n!==this._displayHeight)this._displayScale.set([2/h,-2/n,1]),this._displayWidth=h,this._displayHeight=n;e.identity(m);e.scale(m,m,this._tileCoordinateScale);e.rotate(m,m,-c*k.C_DEG_TO_RAD,this._orientationVec);e.scale(m,m,this._displayScale);e.transpose(m,m)};return h}(h)})},"esri/core/libs/gl-matrix/vec3":function(){define(["./common"],function(p){var d={create:function(){var a=new p.ARRAY_TYPE(3);a[0]=0;a[1]=0;a[2]=
0;return a},clone:function(a){var b=new p.ARRAY_TYPE(3);b[0]=a[0];b[1]=a[1];b[2]=a[2];return b},fromValues:function(a,b,c){var f=new p.ARRAY_TYPE(3);f[0]=a;f[1]=b;f[2]=c;return f},copy:function(a,b){a[0]=b[0];a[1]=b[1];a[2]=b[2];return a},set:function(a,b,c,f){a[0]=b;a[1]=c;a[2]=f;return a},add:function(a,b,c){a[0]=b[0]+c[0];a[1]=b[1]+c[1];a[2]=b[2]+c[2];return a},subtract:function(a,b,c){a[0]=b[0]-c[0];a[1]=b[1]-c[1];a[2]=b[2]-c[2];return a}};d.sub=d.subtract;d.multiply=function(a,b,c){a[0]=b[0]*
c[0];a[1]=b[1]*c[1];a[2]=b[2]*c[2];return a};d.mul=d.multiply;d.divide=function(a,b,c){a[0]=b[0]/c[0];a[1]=b[1]/c[1];a[2]=b[2]/c[2];return a};d.div=d.divide;d.ceil=function(a,b){a[0]=Math.ceil(b[0]);a[1]=Math.ceil(b[1]);a[2]=Math.ceil(b[2]);return a};d.floor=function(a,b){a[0]=Math.floor(b[0]);a[1]=Math.floor(b[1]);a[2]=Math.floor(b[2]);return a};d.min=function(a,b,c){a[0]=Math.min(b[0],c[0]);a[1]=Math.min(b[1],c[1]);a[2]=Math.min(b[2],c[2]);return a};d.max=function(a,b,c){a[0]=Math.max(b[0],c[0]);
a[1]=Math.max(b[1],c[1]);a[2]=Math.max(b[2],c[2]);return a};d.round=function(a,b){a[0]=Math.round(b[0]);a[1]=Math.round(b[1]);a[2]=Math.round(b[2]);return a};d.scale=function(a,b,c){a[0]=b[0]*c;a[1]=b[1]*c;a[2]=b[2]*c;return a};d.scaleAndAdd=function(a,b,c,f){a[0]=b[0]+c[0]*f;a[1]=b[1]+c[1]*f;a[2]=b[2]+c[2]*f;return a};d.distance=function(a,b){var c=b[0]-a[0],f=b[1]-a[1];a=b[2]-a[2];return Math.sqrt(c*c+f*f+a*a)};d.dist=d.distance;d.squaredDistance=function(a,b){var c=b[0]-a[0],f=b[1]-a[1];a=b[2]-
a[2];return c*c+f*f+a*a};d.sqrDist=d.squaredDistance;d.length=function(a){var b=a[0],c=a[1];a=a[2];return Math.sqrt(b*b+c*c+a*a)};d.len=d.length;d.squaredLength=function(a){var b=a[0],c=a[1];a=a[2];return b*b+c*c+a*a};d.sqrLen=d.squaredLength;d.negate=function(a,b){a[0]=-b[0];a[1]=-b[1];a[2]=-b[2];return a};d.inverse=function(a,b){a[0]=1/b[0];a[1]=1/b[1];a[2]=1/b[2];return a};d.normalize=function(a,b){var c=b[0],f=b[1],e=b[2],c=c*c+f*f+e*e;0<c&&(c=1/Math.sqrt(c),a[0]=b[0]*c,a[1]=b[1]*c,a[2]=b[2]*
c);return a};d.dot=function(a,b){return a[0]*b[0]+a[1]*b[1]+a[2]*b[2]};d.cross=function(a,b,c){var f=b[0],e=b[1];b=b[2];var d=c[0],l=c[1];c=c[2];a[0]=e*c-b*l;a[1]=b*d-f*c;a[2]=f*l-e*d;return a};d.lerp=function(a,b,c,f){var e=b[0],d=b[1];b=b[2];a[0]=e+f*(c[0]-e);a[1]=d+f*(c[1]-d);a[2]=b+f*(c[2]-b);return a};d.hermite=function(a,b,c,f,e,d){var h=d*d,k=h*(2*d-3)+1,m=h*(d-2)+d,n=h*(d-1);d=h*(3-2*d);a[0]=b[0]*k+c[0]*m+f[0]*n+e[0]*d;a[1]=b[1]*k+c[1]*m+f[1]*n+e[1]*d;a[2]=b[2]*k+c[2]*m+f[2]*n+e[2]*d;return a};
d.bezier=function(a,b,c,f,e,d){var h=1-d,k=h*h,m=d*d,n=k*h,k=3*d*k,h=3*m*h;d*=m;a[0]=b[0]*n+c[0]*k+f[0]*h+e[0]*d;a[1]=b[1]*n+c[1]*k+f[1]*h+e[1]*d;a[2]=b[2]*n+c[2]*k+f[2]*h+e[2]*d;return a};d.random=function(a,b){b=b||1;var c=2*p.RANDOM()*Math.PI,d=2*p.RANDOM()-1,e=Math.sqrt(1-d*d)*b;a[0]=Math.cos(c)*e;a[1]=Math.sin(c)*e;a[2]=d*b;return a};d.transformMat4=function(a,b,c){var d=b[0],e=b[1];b=b[2];var h=c[3]*d+c[7]*e+c[11]*b+c[15],h=h||1;a[0]=(c[0]*d+c[4]*e+c[8]*b+c[12])/h;a[1]=(c[1]*d+c[5]*e+c[9]*b+
c[13])/h;a[2]=(c[2]*d+c[6]*e+c[10]*b+c[14])/h;return a};d.transformMat3=function(a,b,c){var d=b[0],e=b[1];b=b[2];a[0]=d*c[0]+e*c[3]+b*c[6];a[1]=d*c[1]+e*c[4]+b*c[7];a[2]=d*c[2]+e*c[5]+b*c[8];return a};d.transformQuat=function(a,b,c){var d=b[0],e=b[1],h=b[2];b=c[0];var l=c[1],k=c[2];c=c[3];var m=c*d+l*h-k*e,n=c*e+k*d-b*h,g=c*h+b*e-l*d,d=-b*d-l*e-k*h;a[0]=m*c+d*-b+n*-k-g*-l;a[1]=n*c+d*-l+g*-b-m*-k;a[2]=g*c+d*-k+m*-l-n*-b;return a};d.rotateX=function(a,b,c,d){var e=[],f=[];e[0]=b[0]-c[0];e[1]=b[1]-c[1];
e[2]=b[2]-c[2];f[0]=e[0];f[1]=e[1]*Math.cos(d)-e[2]*Math.sin(d);f[2]=e[1]*Math.sin(d)+e[2]*Math.cos(d);a[0]=f[0]+c[0];a[1]=f[1]+c[1];a[2]=f[2]+c[2];return a};d.rotateY=function(a,b,c,d){var e=[],f=[];e[0]=b[0]-c[0];e[1]=b[1]-c[1];e[2]=b[2]-c[2];f[0]=e[2]*Math.sin(d)+e[0]*Math.cos(d);f[1]=e[1];f[2]=e[2]*Math.cos(d)-e[0]*Math.sin(d);a[0]=f[0]+c[0];a[1]=f[1]+c[1];a[2]=f[2]+c[2];return a};d.rotateZ=function(a,b,c,d){var e=[],f=[];e[0]=b[0]-c[0];e[1]=b[1]-c[1];e[2]=b[2]-c[2];f[0]=e[0]*Math.cos(d)-e[1]*
Math.sin(d);f[1]=e[0]*Math.sin(d)+e[1]*Math.cos(d);f[2]=e[2];a[0]=f[0]+c[0];a[1]=f[1]+c[1];a[2]=f[2]+c[2];return a};d.forEach=function(){var a=d.create();return function(b,c,d,e,h,l){c||(c=3);d||(d=0);for(e=e?Math.min(e*c+d,b.length):b.length;d<e;d+=c)a[0]=b[d],a[1]=b[d+1],a[2]=b[d+2],h(a,a,l),b[d]=a[0],b[d+1]=a[1],b[d+2]=a[2];return b}}();d.angle=function(a,b){a=d.fromValues(a[0],a[1],a[2]);b=d.fromValues(b[0],b[1],b[2]);d.normalize(a,a);d.normalize(b,b);b=d.dot(a,b);return 1<b?0:Math.acos(b)};d.str=
function(a){return"vec3("+a[0]+", "+a[1]+", "+a[2]+")"};d.exactEquals=function(a,b){return a[0]===b[0]&&a[1]===b[1]&&a[2]===b[2]};d.equals=function(a,b){var c=a[0],d=a[1];a=a[2];var e=b[0],h=b[1];b=b[2];return Math.abs(c-e)<=p.EPSILON*Math.max(1,Math.abs(c),Math.abs(e))&&Math.abs(d-h)<=p.EPSILON*Math.max(1,Math.abs(d),Math.abs(h))&&Math.abs(a-b)<=p.EPSILON*Math.max(1,Math.abs(a),Math.abs(b))};return d})},"esri/views/vectorTiles/renderers/Renderer":function(){define("require exports ../../webgl/FramebufferObject ../../../core/libs/gl-matrix/mat4 ../GeometryUtils ./BackgroundRenderer ./LineRenderer ./FillRenderer ./SymbolRenderer ./TileInfoRenderer ./FadeRecorder".split(" "),
function(p,d,a,b,c,f,e,h,l,k,m){return function(){function d(){this._extrudeRotateVector=new Float32Array([0,0,1]);this._extrudeScaleVector=new Float32Array([1,1,1]);this._state={rotation:0,width:0,height:0};this._cachedRotation=this._cachedHeight=this._cachedWidth=0}d.prototype.initialize=function(a,b,c){void 0===c&&(c=!0);this._SpriteMosaic=a;this._glyphMosaic=b;this._ignoreSpeed=!c;this._backgroundRenderer=new f;this._lineRenderer=new e;this._fillRenderer=new h;this._symbolRenderer=new l;this._tileInfoRenderer=
new k;this._fadeRecorder=new m.FadeRecorder(300);this._extrudeMatrix=new Float32Array(16);this._extrudeNoRotationMatrix=new Float32Array(16);this._backgroundColor=new Float32Array([1,0,0,1])};d.prototype.dispose=function(){this._backgroundRenderer&&(this._backgroundRenderer.dispose(),this._backgroundRenderer=null);this._lineRenderer&&(this._lineRenderer.dispose(),this._lineRenderer=null);this._fillRenderer&&(this._fillRenderer.dispose(),this._fillRenderer=null);this._symbolRenderer&&(this._symbolRenderer.dispose(),
this._symbolRenderer=null);this._tileInfoRenderer&&(this._tileInfoRenderer.dispose(),this._tileInfoRenderer=null);this._hittestFBO&&(this._hittestFBO.dispose(),this._hittestFBO=null)};d.prototype.setStateParams=function(a,d,e){this._fadeRecorder.recordLevel(e);this._state=a;if(this._state.width!==this._cachedWidth||this._state.height!==this._cachedHeight||this._state.rotation!==this._cachedRotation)this._extrudeScaleVector[0]=2/a.width,this._extrudeScaleVector[1]=-2/a.height,b.identity(this._extrudeMatrix),
b.rotate(this._extrudeMatrix,this._extrudeMatrix,-a.rotation*c.C_DEG_TO_RAD,this._extrudeRotateVector),b.scale(this._extrudeMatrix,this._extrudeMatrix,this._extrudeScaleVector),b.transpose(this._extrudeMatrix,this._extrudeMatrix),b.identity(this._extrudeNoRotationMatrix),b.scale(this._extrudeNoRotationMatrix,this._extrudeNoRotationMatrix,this._extrudeScaleVector),b.transpose(this._extrudeNoRotationMatrix,this._extrudeNoRotationMatrix),this._cachedWidth=this._state.width,this._cachedHeight=this._state.height,
this._cachedRotation=this._state.rotation};d.prototype.drawClippingMasks=function(a,b){if(0!==b.length){a.setDepthWriteEnabled(!1);a.setDepthTestEnabled(!1);a.setStencilTestEnabled(!0);a.setBlendingEnabled(!1);a.setColorMask(!1,!1,!1,!1);a.setStencilOp(7680,7680,7681);a.setStencilWriteMask(255);a.setClearStencil(0);a.clear(a.gl.STENCIL_BUFFER_BIT);for(var c=0;c<b.length;c++){var d=b[c];d.attached&&d.visible&&(a.setStencilFunctionSeparate(1032,519,d.stencilData.reference,d.stencilData.mask),this._backgroundRenderer.renderSolidColor(a,
{u_matrix:d.tileTransform.transform,u_normalized_origin:d.tileTransform.displayCoord,u_coord_range:d.coordRange,u_depth:0,u_color:this._backgroundColor}))}a.setColorMask(!0,!0,!0,!0);a.setBlendingEnabled(!0)}};d.prototype.renderDebug=function(a,b){var c=b.key;this._backgroundColor.set([c.col%2,c.row%2,0===c.col%2&&0===c.row%2?1:0,.5]);this._backgroundRenderer.renderSolidColor(a,{u_matrix:b.tileTransform.transform,u_normalized_origin:b.tileTransform.displayCoord,u_coord_range:b.coordRange,u_depth:0,
u_color:this._backgroundColor})};d.prototype.renderBucket=function(a,b,c,d,e,f,h,k){if(!(void 0!==h.minzoom&&h.minzoom>c||void 0!==h.maxzoom&&h.maxzoom<=c))switch(b.type){case 0:2!==e&&this._renderBackground(a,b,c,e,f,h,k);break;case 1:2!==e&&this._renderFill(a,b,c,e,f,h,k);break;case 2:1!==e&&3!==e||this._renderLine(a,b,c,e,f,h,k);break;case 3:2!==e&&3!==e||this._renderSymbol(a,b,c,e,d,f,h,k)}};d.prototype.renderTileInfo=function(a,b){this._tileInfoRenderer.render(a,b)};d.prototype.needsRedraw=function(){return this._fadeRecorder.needsRedraw()};
d.prototype.hitTest=function(b,c,d,e,f,h,k){var g=[0,0],q=[0,0],n=b.state;n.toMap(g,[0,0]);n.toMap(q,[h,h]);c=e.filter(function(a){return!(g[0]>a.bounds[2]||q[0]<a.bounds[0]||g[1]<a.bounds[3]||q[1]>a.bounds[1])});if(0===c.length)return[];c.sort(function(a,b){return a.key.level-b.key.level});d=c.length;for(e=1;e<=d;e++){var r=c[e-1];r.attached&&(r.stencilData.reference=e,r.stencilData.mask=255)}k(n,f,c);f=b.context;this._hittestFBO||(this._hittestFBO=a.create(f,{colorTarget:0,depthStencilTarget:3,
width:h,height:h}));k=f.getViewport();n=f.getBoundFramebufferObject();f.bindFramebuffer(this._hittestFBO);f.setViewport(0,0,h,h);e=f.gl;f.setDepthWriteEnabled(!0);f.setStencilWriteMask(255);f.setClearColor(1,1,1,1);f.setClearDepth(1);f.setClearStencil(0);f.clear(e.COLOR_BUFFER_BIT|e.DEPTH_BUFFER_BIT|e.STENCIL_BUFFER_BIT);f.setDepthWriteEnabled(!1);this.drawClippingMasks(f,c);f.setBlendingEnabled(!1);f.setStencilWriteMask(0);f.setStencilOp(7680,7680,7681);f.setDepthFunction(515);f.setDepthTestEnabled(!0);
f.setDepthWriteEnabled(!0);f.setStencilTestEnabled(!0);for(e=0;e<d;e++)r=c[e],r.attached&&r.doRender(b);f.setStencilTestEnabled(!1);f.setDepthTestEnabled(!1);this._readbackBuffer||(this._readbackBuffer=new Uint8Array(4*h*h),this._readbackBuffer32=new Uint32Array(this._readbackBuffer.buffer));this._hittestFBO.readPixels(0,0,h,h,6408,5121,this._readbackBuffer);b=new Set;h*=h;c=this._readbackBuffer32[Math.round(h/2)];4294967295!==c&&b.add(c);for(e=0;e<h;e++)c=this._readbackBuffer32[e],4294967295!==c&&
b.add(c);f.bindFramebuffer(n);f.setViewport(k.x,k.y,k.width,k.height);var m=[];b.forEach(function(a){m.push(a)});return m};d.prototype._renderBackground=function(a,b,c,d,e,f,h){this._backgroundRenderer.render(a,b,c,d,e,f,this._SpriteMosaic,this._SpriteMosaic.pixelRatio,h)};d.prototype._renderLine=function(a,b,c,d,e,f,h){this._lineRenderer.render(a,b,c,d,this._state,e,f,this._SpriteMosaic,this._extrudeMatrix,this._SpriteMosaic.pixelRatio,h)};d.prototype._renderFill=function(a,b,c,d,e,f,h){this._fillRenderer.render(a,
b,c,this._state.rotation,d,e,f,this._SpriteMosaic,this._extrudeMatrix,this._SpriteMosaic.pixelRatio,h)};d.prototype._renderSymbol=function(a,b,c,d,e,f,h,k){var g=!0;e===f.key.level&&(g=!1);a.setStencilTestEnabled(g);this._symbolRenderer.render(a,b,c,d,this._state.rotation,this._fadeRecorder.getFadeValues(this._ignoreSpeed),f,h,this._SpriteMosaic,this._glyphMosaic,this._extrudeMatrix,this._extrudeNoRotationMatrix,this._SpriteMosaic.pixelRatio,k)};return d}()})},"esri/views/vectorTiles/renderers/BackgroundRenderer":function(){define("require exports ../../../core/libs/gl-matrix/mat3 ../../../core/libs/gl-matrix/vec4 ../../webgl/VertexArrayObject ../../webgl/BufferObject ../MemoryBuffer ../../webgl/ShaderVariations ./vtShaderSnippets ./rendererUtils".split(" "),
function(p,d,a,b,c,f,e,h,l,k){return function(){function d(){this._solidAttributeLocations={a_pos:0};this._attributeLocations={a_pos:0,a_id:1};this._patternMatrix=a.create();this._color=b.create();this._rendererInitialized=this._solidrendererInitialized=!1;this._color.set([1,0,0,1])}d.prototype.dispose=function(){this._solidVertexArrayObject&&(this._solidVertexArrayObject.dispose(),this._solidVertexArrayObject=null);this._vertexArrayObject&&(this._vertexArrayObject.dispose(),this._vertexArrayObject=
null)};d.prototype.renderSolidColor=function(a,b){this._solidrendererInitialized||this._initializeSolidRenderer(a);a.bindVAO(this._solidVertexArrayObject);var c=this._shaderVariations.getProgram([!1,!1],void 0,void 0,this._solidAttributeLocations);a.bindProgram(c);c.setUniformMatrix4fv("u_transformMatrix",b.u_matrix);c.setUniform2fv("u_normalized_origin",b.u_normalized_origin);c.setUniform1f("u_coord_range",b.u_coord_range||4096);c.setUniform1f("u_depth",b.u_depth||0);c.setUniform4fv("u_color",b.u_color||
this._color);a.drawArrays(5,0,4);a.bindVAO()};d.prototype.render=function(b,c,d,e,f,h,m,l,p){this._rendererInitialized||this._initialize(b);var g=h.getPaintValue("background-color",d);p*=h.getPaintValue("background-opacity",d);var q=h.getPaintValue("background-pattern",d),n=void 0!==q,r=g[3]*p,t=n||1>r;if(!t||0!==e)if(t||1!==e){t=3===e;e=this._shaderVariations.getProgram([n,t],void 0,void 0,this._attributeLocations);b.bindVAO(this._vertexArrayObject);b.bindProgram(e);e.setUniform1f("u_coord_range",
f.coordRange);e.setUniform1f("u_depth",h.z||0);e.setUniformMatrix4fv("u_transformMatrix",f.tileTransform.transform);e.setUniform2fv("u_normalized_origin",f.tileTransform.displayCoord);if(n){h=m.getMosaicItemPosition(q,!0);if(!h)return;d=f.coordRange/512/Math.pow(2,Math.floor(d)-f.key.level)/l;a.identity(this._patternMatrix);f=1/(h.size[1]*d);this._patternMatrix[0]=1/(h.size[0]*d);this._patternMatrix[4]=f;m.bind(b,9729,0);e.setUniformMatrix3fv("u_pattern_matrix",this._patternMatrix);e.setUniform1f("u_opacity",
p);e.setUniform2f("u_pattern_tl",h.tl[0],h.tl[1]);e.setUniform2f("u_pattern_br",h.br[0],h.br[1]);e.setUniform1i("u_texture",0)}else this._color[0]=r*g[0],this._color[1]=r*g[1],this._color[2]=r*g[2],this._color[3]=r,e.setUniform4fv("u_color",this._color);t&&(c=k.int32To4Bytes(c.layerID),e.setUniform4f("u_id",c[0],c[1],c[2],c[3]));b.drawArrays(5,0,4);b.bindVAO()}};d.prototype._initializeSolidRenderer=function(a){if(this._solidrendererInitialized)return!0;if(!this._shaderVariations){var b=new h("background",
["backgroundVS","backgroundFS"],[],l,a);b.addDefine("PATTERN","PATTERN",[!0,!0],"PATTERN");b.addDefine("ID","ID",[!0,!0],"ID");this._shaderVariations=b}b=new Int8Array([0,0,1,0,0,1,1,1]);b=f.createVertex(a,35044,b);this._solidVertexArrayObject=new c(a,{a_pos:0},{geometry:[{name:"a_pos",count:2,type:5120,offset:0,stride:2,normalized:!1,divisor:0}]},{geometry:b});return this._solidrendererInitialized=!0};d.prototype._initialize=function(a){if(this._rendererInitialized)return!0;if(!this._shaderVariations){var b=
new h("background",["backgroundVS","backgroundFS"],[],l,a);b.addDefine("PATTERN","PATTERN",[!0,!0],"PATTERN");b.addDefine("ID","ID",[!0,!0],"ID");this._shaderVariations=b}b=[];b.push(e.i1616to32(0,0));b.push(e.i1616to32(1,0));b.push(e.i1616to32(0,1));b.push(e.i1616to32(1,1));b=new Uint32Array(b);b=f.createVertex(a,35044,b);this._vertexArrayObject=new c(a,{a_pos:0},{geometry:[{name:"a_pos",count:2,type:5122,offset:0,stride:4,normalized:!1,divisor:0}]},{geometry:b});return this._rendererInitialized=
!0};return d}()})},"esri/core/libs/gl-matrix/mat3":function(){define(["./common"],function(p){var d={create:function(){var a=new p.ARRAY_TYPE(9);a[0]=1;a[1]=0;a[2]=0;a[3]=0;a[4]=1;a[5]=0;a[6]=0;a[7]=0;a[8]=1;return a},fromMat4:function(a,b){a[0]=b[0];a[1]=b[1];a[2]=b[2];a[3]=b[4];a[4]=b[5];a[5]=b[6];a[6]=b[8];a[7]=b[9];a[8]=b[10];return a},clone:function(a){var b=new p.ARRAY_TYPE(9);b[0]=a[0];b[1]=a[1];b[2]=a[2];b[3]=a[3];b[4]=a[4];b[5]=a[5];b[6]=a[6];b[7]=a[7];b[8]=a[8];return b},copy:function(a,
b){a[0]=b[0];a[1]=b[1];a[2]=b[2];a[3]=b[3];a[4]=b[4];a[5]=b[5];a[6]=b[6];a[7]=b[7];a[8]=b[8];return a},fromValues:function(a,b,c,d,e,h,l,k,m){var f=new p.ARRAY_TYPE(9);f[0]=a;f[1]=b;f[2]=c;f[3]=d;f[4]=e;f[5]=h;f[6]=l;f[7]=k;f[8]=m;return f},set:function(a,b,c,d,e,h,l,k,m,n){a[0]=b;a[1]=c;a[2]=d;a[3]=e;a[4]=h;a[5]=l;a[6]=k;a[7]=m;a[8]=n;return a},identity:function(a){a[0]=1;a[1]=0;a[2]=0;a[3]=0;a[4]=1;a[5]=0;a[6]=0;a[7]=0;a[8]=1;return a},transpose:function(a,b){if(a===b){var c=b[1],d=b[2],e=b[5];
a[1]=b[3];a[2]=b[6];a[3]=c;a[5]=b[7];a[6]=d;a[7]=e}else a[0]=b[0],a[1]=b[3],a[2]=b[6],a[3]=b[1],a[4]=b[4],a[5]=b[7],a[6]=b[2],a[7]=b[5],a[8]=b[8];return a},invert:function(a,b){var c=b[0],d=b[1],e=b[2],h=b[3],l=b[4],k=b[5],m=b[6],n=b[7];b=b[8];var g=b*l-k*n,q=-b*h+k*m,t=n*h-l*m,r=c*g+d*q+e*t;if(!r)return null;r=1/r;a[0]=g*r;a[1]=(-b*d+e*n)*r;a[2]=(k*d-e*l)*r;a[3]=q*r;a[4]=(b*c-e*m)*r;a[5]=(-k*c+e*h)*r;a[6]=t*r;a[7]=(-n*c+d*m)*r;a[8]=(l*c-d*h)*r;return a},adjoint:function(a,b){var c=b[0],d=b[1],e=
b[2],h=b[3],l=b[4],k=b[5],m=b[6],n=b[7];b=b[8];a[0]=l*b-k*n;a[1]=e*n-d*b;a[2]=d*k-e*l;a[3]=k*m-h*b;a[4]=c*b-e*m;a[5]=e*h-c*k;a[6]=h*n-l*m;a[7]=d*m-c*n;a[8]=c*l-d*h;return a},determinant:function(a){var b=a[3],c=a[4],d=a[5],e=a[6],h=a[7],l=a[8];return a[0]*(l*c-d*h)+a[1]*(-l*b+d*e)+a[2]*(h*b-c*e)},multiply:function(a,b,c){var d=b[0],e=b[1],h=b[2],l=b[3],k=b[4],m=b[5],n=b[6],g=b[7];b=b[8];var q=c[0],t=c[1],r=c[2],p=c[3],v=c[4],w=c[5],x=c[6],z=c[7];c=c[8];a[0]=q*d+t*l+r*n;a[1]=q*e+t*k+r*g;a[2]=q*h+t*
m+r*b;a[3]=p*d+v*l+w*n;a[4]=p*e+v*k+w*g;a[5]=p*h+v*m+w*b;a[6]=x*d+z*l+c*n;a[7]=x*e+z*k+c*g;a[8]=x*h+z*m+c*b;return a}};d.mul=d.multiply;d.translate=function(a,b,c){var d=b[0],e=b[1],h=b[2],l=b[3],k=b[4],m=b[5],n=b[6],g=b[7];b=b[8];var q=c[0];c=c[1];a[0]=d;a[1]=e;a[2]=h;a[3]=l;a[4]=k;a[5]=m;a[6]=q*d+c*l+n;a[7]=q*e+c*k+g;a[8]=q*h+c*m+b;return a};d.rotate=function(a,b,c){var d=b[0],e=b[1],h=b[2],l=b[3],k=b[4],m=b[5],n=b[6],g=b[7];b=b[8];var q=Math.sin(c);c=Math.cos(c);a[0]=c*d+q*l;a[1]=c*e+q*k;a[2]=
c*h+q*m;a[3]=c*l-q*d;a[4]=c*k-q*e;a[5]=c*m-q*h;a[6]=n;a[7]=g;a[8]=b;return a};d.scale=function(a,b,c){var d=c[0];c=c[1];a[0]=d*b[0];a[1]=d*b[1];a[2]=d*b[2];a[3]=c*b[3];a[4]=c*b[4];a[5]=c*b[5];a[6]=b[6];a[7]=b[7];a[8]=b[8];return a};d.fromTranslation=function(a,b){a[0]=1;a[1]=0;a[2]=0;a[3]=0;a[4]=1;a[5]=0;a[6]=b[0];a[7]=b[1];a[8]=1;return a};d.fromRotation=function(a,b){var c=Math.sin(b);b=Math.cos(b);a[0]=b;a[1]=c;a[2]=0;a[3]=-c;a[4]=b;a[5]=0;a[6]=0;a[7]=0;a[8]=1;return a};d.fromScaling=function(a,
b){a[0]=b[0];a[1]=0;a[2]=0;a[3]=0;a[4]=b[1];a[5]=0;a[6]=0;a[7]=0;a[8]=1;return a};d.fromMat2d=function(a,b){a[0]=b[0];a[1]=b[1];a[2]=0;a[3]=b[2];a[4]=b[3];a[5]=0;a[6]=b[4];a[7]=b[5];a[8]=1;return a};d.fromQuat=function(a,b){var c=b[0],d=b[1],e=b[2];b=b[3];var h=c+c,l=d+d,k=e+e,c=c*h,m=d*h,d=d*l,n=e*h,g=e*l,e=e*k,h=b*h,l=b*l;b*=k;a[0]=1-d-e;a[3]=m-b;a[6]=n+l;a[1]=m+b;a[4]=1-c-e;a[7]=g-h;a[2]=n-l;a[5]=g+h;a[8]=1-c-d;return a};d.normalFromMat4=function(a,b){var c=b[0],d=b[1],e=b[2],h=b[3],l=b[4],k=b[5],
m=b[6],n=b[7],g=b[8],q=b[9],t=b[10],r=b[11],p=b[12],v=b[13],w=b[14];b=b[15];var x=c*k-d*l,z=c*m-e*l,F=c*n-h*l,D=d*m-e*k,H=d*n-h*k,I=e*n-h*m,J=g*v-q*p,N=g*w-t*p,g=g*b-r*p,L=q*w-t*v,q=q*b-r*v,t=t*b-r*w,r=x*t-z*q+F*L+D*g-H*N+I*J;if(!r)return null;r=1/r;a[0]=(k*t-m*q+n*L)*r;a[1]=(m*g-l*t-n*N)*r;a[2]=(l*q-k*g+n*J)*r;a[3]=(e*q-d*t-h*L)*r;a[4]=(c*t-e*g+h*N)*r;a[5]=(d*g-c*q-h*J)*r;a[6]=(v*I-w*H+b*D)*r;a[7]=(w*F-p*I-b*z)*r;a[8]=(p*H-v*F+b*x)*r;return a};d.str=function(a){return"mat3("+a[0]+", "+a[1]+", "+
a[2]+", "+a[3]+", "+a[4]+", "+a[5]+", "+a[6]+", "+a[7]+", "+a[8]+")"};d.frob=function(a){return Math.sqrt(Math.pow(a[0],2)+Math.pow(a[1],2)+Math.pow(a[2],2)+Math.pow(a[3],2)+Math.pow(a[4],2)+Math.pow(a[5],2)+Math.pow(a[6],2)+Math.pow(a[7],2)+Math.pow(a[8],2))};d.add=function(a,b,c){a[0]=b[0]+c[0];a[1]=b[1]+c[1];a[2]=b[2]+c[2];a[3]=b[3]+c[3];a[4]=b[4]+c[4];a[5]=b[5]+c[5];a[6]=b[6]+c[6];a[7]=b[7]+c[7];a[8]=b[8]+c[8];return a};d.subtract=function(a,b,c){a[0]=b[0]-c[0];a[1]=b[1]-c[1];a[2]=b[2]-c[2];a[3]=
b[3]-c[3];a[4]=b[4]-c[4];a[5]=b[5]-c[5];a[6]=b[6]-c[6];a[7]=b[7]-c[7];a[8]=b[8]-c[8];return a};d.sub=d.subtract;d.multiplyScalar=function(a,b,c){a[0]=b[0]*c;a[1]=b[1]*c;a[2]=b[2]*c;a[3]=b[3]*c;a[4]=b[4]*c;a[5]=b[5]*c;a[6]=b[6]*c;a[7]=b[7]*c;a[8]=b[8]*c;return a};d.multiplyScalarAndAdd=function(a,b,c,d){a[0]=b[0]+c[0]*d;a[1]=b[1]+c[1]*d;a[2]=b[2]+c[2]*d;a[3]=b[3]+c[3]*d;a[4]=b[4]+c[4]*d;a[5]=b[5]+c[5]*d;a[6]=b[6]+c[6]*d;a[7]=b[7]+c[7]*d;a[8]=b[8]+c[8]*d;return a};d.exactEquals=function(a,b){return a[0]===
b[0]&&a[1]===b[1]&&a[2]===b[2]&&a[3]===b[3]&&a[4]===b[4]&&a[5]===b[5]&&a[6]===b[6]&&a[7]===b[7]&&a[8]===b[8]};d.equals=function(a,b){var c=a[0],d=a[1],e=a[2],h=a[3],l=a[4],k=a[5],m=a[6],n=a[7],g=a[8],q=b[0],t=b[1],r=b[2],u=b[3],v=b[4],w=b[5];a=a[6];var x=b[7];b=b[8];return Math.abs(c-q)<=p.EPSILON*Math.max(1,Math.abs(c),Math.abs(q))&&Math.abs(d-t)<=p.EPSILON*Math.max(1,Math.abs(d),Math.abs(t))&&Math.abs(e-r)<=p.EPSILON*Math.max(1,Math.abs(e),Math.abs(r))&&Math.abs(h-u)<=p.EPSILON*Math.max(1,Math.abs(h),
Math.abs(u))&&Math.abs(l-v)<=p.EPSILON*Math.max(1,Math.abs(l),Math.abs(v))&&Math.abs(k-w)<=p.EPSILON*Math.max(1,Math.abs(k),Math.abs(w))&&Math.abs(m-a)<=p.EPSILON*Math.max(1,Math.abs(m),Math.abs(a))&&Math.abs(n-x)<=p.EPSILON*Math.max(1,Math.abs(n),Math.abs(x))&&Math.abs(g-b)<=p.EPSILON*Math.max(1,Math.abs(g),Math.abs(b))};return d})},"esri/views/vectorTiles/MemoryBuffer":function(){define(["require","exports"],function(p,d){return function(){function a(a){this._array=[];0>=a&&console.error("strideInBytes must be positive!");
this._stride=a}Object.defineProperty(a.prototype,"array",{get:function(){return this._array},enumerable:!0,configurable:!0});Object.defineProperty(a.prototype,"index",{get:function(){return 4*this._array.length/this._stride},enumerable:!0,configurable:!0});Object.defineProperty(a.prototype,"itemSize",{get:function(){return this._stride},enumerable:!0,configurable:!0});Object.defineProperty(a.prototype,"sizeInBytes",{get:function(){return 4*this._array.length},enumerable:!0,configurable:!0});a.prototype.reset=
function(){this.array.length=0};a.prototype.toBuffer=function(){return(new Uint32Array(this._array)).buffer};a.i1616to32=function(a,c){return 65535&a|c<<16};a.i8888to32=function(a,c,d,e){return a&255|(c&255)<<8|(d&255)<<16|e<<24};a.i8816to32=function(a,c,d){return a&255|(c&255)<<8|d<<16};return a}()})},"esri/views/vectorTiles/renderers/vtShaderSnippets":function(){define("require exports ../../webgl/ShaderSnippets dojo/text!./shaders/backgroundShaders.xml dojo/text!./shaders/fillShaders.xml dojo/text!./shaders/outlineShaders.xml dojo/text!./shaders/lineShaders.xml dojo/text!./shaders/iconShaders.xml dojo/text!./shaders/textShaders.xml dojo/text!./shaders/tileInfo.vs.glsl dojo/text!./shaders/tileInfo.fs.glsl".split(" "),
function(p,d,a,b,c,f,e,h,l,k,m){function n(a,b){g+='\x3csnippet name\x3d"'+a+'"\x3e\x3c![CDATA[';g+=b;g+="]]\x3e\x3c/snippet\x3e"}var g="",g=g+'\x3c?xml version\x3d"1.0" encoding\x3d"UTF-8"?\x3e',g=g+"\x3csnippets\x3e";n("tileInfoVS",k);n("tileInfoFS",m);g+="\x3c/snippets\x3e";p=new a;a.parse(b,p);a.parse(g,p);a.parse(c,p);a.parse(f,p);a.parse(e,p);a.parse(h,p);a.parse(l,p);return p})},"esri/views/vectorTiles/renderers/rendererUtils":function(){define(["require","exports"],function(p,d){Object.defineProperty(d,
"__esModule",{value:!0});var a=new Uint32Array(1),b=new Uint8Array(a.buffer);d.int32To4Bytes=function(c){a[0]=c|0;return[b[0],b[1],b[2],b[3]]}})},"esri/views/vectorTiles/renderers/LineRenderer":function(){define("require exports ../../../core/libs/gl-matrix/mat4 ../../../core/libs/gl-matrix/vec4 ../../../core/libs/gl-matrix/vec3 ../../../core/libs/gl-matrix/vec2 ../../webgl/VertexArrayObject ../GeometryUtils ./rendererUtils ../../webgl/ShaderVariations ./vtShaderSnippets".split(" "),function(p,d,
a,b,c,f,e,h,l,k,m){return function(){function d(){this._attributeLocations={a_pos:0,a_offsetAndNormal:1,a_accumulatedDistance:2};this._attributeLocationsDD={a_pos:0,a_offsetAndNormal:1,a_accumulatedDistance:2,a_color:3,a_width:4};this._initialized=!1;this._viewProjMat=a.create();this._offsetVector=c.create();this._color=b.create();this._dashArray=f.create()}d.prototype.dispose=function(){};d.prototype.render=function(b,c,d,e,f,k,m,n,p,F,D){if(0!==c.triangleElementCount){this._initialized||this._initialize(b);
var g=k.tileTransform.transform,q=k.coordRange/512,r=m.getPaintValue("line-translate",d);if(0!==r[0]||0!==r[1]){a.copy(this._viewProjMat,k.tileTransform.transform);var g=r[0],r=r[1],t=0,u=0,u=(1<<k.key.level)/Math.pow(2,d)*q;f=f.rotation;if(1===m.getPaintValue("line-translate-anchor",d)){t=-h.C_DEG_TO_RAD*f;f=Math.sin(t);var v=Math.cos(t),t=u*(g*v-r*f),u=u*(g*f+r*v)}else t=u*g,u*=r;this._offsetVector[0]=t;this._offsetVector[1]=u;this._offsetVector[2]=0;a.translate(this._viewProjMat,this._viewProjMat,
this._offsetVector);g=this._viewProjMat}r=m.getPaintValue("line-pattern",d);u=void 0!==r;F=1/F;f=m.getPaintValue("line-blur",d)+F;F=m.getPaintValue("line-width",d);t=D*m.getPaintValue("line-opacity",d);D=m.getPaintValue("line-color",d);var v=m.hasDataDrivenLine,w=3===e,x;w&&(x=l.int32To4Bytes(c.layerID));if(e=this._getLineVAO(b,k,v)){b.bindVAO(e);e=this._shaderVariations.getProgram([u,v,w],void 0,void 0,v?this._attributeLocationsDD:this._attributeLocations);b.bindProgram(e);e.setUniformMatrix4fv("u_transformMatrix",
g);e.setUniformMatrix4fv("u_extrudeMatrix",p);e.setUniform2fv("u_normalized_origin",k.tileTransform.displayCoord);e.setUniform1f("u_depth",m.z);e.setUniform1f("u_blur",f);v||(k=t*D[3],this._color[0]=k*D[0],this._color[1]=k*D[1],this._color[2]=k*D[2],this._color[3]=k,e.setUniform4fv("u_color",this._color),e.setUniform1f("u_width",F));w&&e.setUniform4f("u_id",x[0],x[1],x[2],x[3]);if(u){if(d=n.getMosaicItemPosition(r,!0))n.bind(b,9729,d.page,1),e.setUniform2f("u_pattern_tl",d.tl[0],d.tl[1]),e.setUniform2f("u_pattern_br",
d.br[0],d.br[1]),e.setUniform2f("u_spriteSize",q*d.size[0],d.size[1]),e.setUniform1i("u_texture",1)}else n=m.getPaintValue("line-dasharray",d),2>n.length&&(n=[1,-1]),this._dashArray[0]=q*n[0],this._dashArray[1]=q*n[1],e.setUniform2fv("u_dasharray",this._dashArray);b.drawElements(4,c.triangleElementCount,5125,12*c.triangleElementStart);b.bindVAO()}}};d.prototype._initialize=function(a){if(this._initialized)return!0;a=new k("line",["lineVS","lineFS"],[],m,a);a.addDefine("PATTERN","PATTERN",[!0,!0],
"PATTERN");a.addDefine("DD","DD",[!0,!1],"DD");a.addDefine("ID","ID",[!0,!0],"ID");this._shaderVariations=a;this._vertexAttributes={geometry:[{name:"a_pos",count:2,type:5122,offset:0,stride:12,normalized:!1,divisor:0},{name:"a_offsetAndNormal",count:4,type:5120,offset:4,stride:12,normalized:!1,divisor:0},{name:"a_accumulatedDistance",count:2,type:5123,offset:8,stride:12,normalized:!1,divisor:0}]};this._vertexAttributesDD={geometry:[{name:"a_pos",count:2,type:5122,offset:0,stride:20,normalized:!1,
divisor:0},{name:"a_offsetAndNormal",count:4,type:5120,offset:4,stride:20,normalized:!1,divisor:0},{name:"a_accumulatedDistance",count:2,type:5122,offset:8,stride:20,normalized:!1,divisor:0},{name:"a_color",count:4,type:5121,offset:12,stride:20,normalized:!0,divisor:0},{name:"a_width",count:1,type:5126,offset:16,stride:20,normalized:!1,divisor:0}]};return this._initialized=!0};d.prototype._getLineVAO=function(a,b,c){if(c){if(b.lineDDVertexArrayObject)return b.lineDDVertexArrayObject;c=b.lineDDVertexBuffer;
var d=b.lineIndexBuffer;if(!c||!d)return null;b.lineDDVertexArrayObject=new e(a,this._attributeLocationsDD,this._vertexAttributesDD,{geometry:c},d);return b.lineDDVertexArrayObject}if(b.lineVertexArrayObject)return b.lineVertexArrayObject;c=b.lineVertexBuffer;d=b.lineIndexBuffer;if(!c||!d)return null;b.lineVertexArrayObject=new e(a,this._attributeLocations,this._vertexAttributes,{geometry:c},d);return b.lineVertexArrayObject};return d}()})},"esri/views/vectorTiles/renderers/FillRenderer":function(){define("require exports ../../../core/libs/gl-matrix/mat4 ../../../core/libs/gl-matrix/mat3 ../../../core/libs/gl-matrix/vec4 ../../../core/libs/gl-matrix/vec3 ../../webgl/VertexArrayObject ../GeometryUtils ./rendererUtils ../../webgl/ShaderVariations ./vtShaderSnippets".split(" "),
function(p,d,a,b,c,f,e,h,l,k,m){var n=1/65536;return function(){function d(){this._fillAttributeLocations={a_pos:0};this._fillAttributeLocationsDD={a_pos:0,a_color:1};this._outlineAttributeLocations={a_pos:0,a_offset:1,a_xnormal:2};this._outlineAttributeLocationsDD={a_pos:0,a_offset:1,a_xnormal:2,a_color:3};this._initialized=!1;this._viewProjMat=a.create();this._offsetVector=f.create();this._patternMatrix=b.create();this._color=c.create();this._outlineColor=c.create()}d.prototype.dispose=function(){};
d.prototype.render=function(b,c,d,e,g,f,k,m,p,D,H){if(0!==c.triangleElementCount){this._initialized||this._initialize(b);var q=void 0!==k.getPaintValue("fill-pattern",d),r=H*k.getPaintValue("fill-opacity",d),t=k.getPaintValue("fill-color",d),u=3===g,v;u&&(v=l.int32To4Bytes(c.layerID));var w=f.tileTransform.transform,x=f.coordRange/512,z=k.getPaintValue("fill-translate",d);if(0!==z[0]||0!==z[1]){a.copy(this._viewProjMat,f.tileTransform.transform);var w=z[0],z=z[1],B=0,y=0,x=(1<<f.key.level)/Math.pow(2,
d)*x;1===k.getPaintValue("fill-translate-anchor",d)?(B=-h.C_DEG_TO_RAD*e,e=Math.sin(B),y=Math.cos(B),B=x*(w*y-z*e),y=x*(w*e+z*y)):(B=x*w,y=x*z);this._offsetVector[0]=B;this._offsetVector[1]=y;this._offsetVector[2]=0;a.translate(this._viewProjMat,this._viewProjMat,this._offsetVector);w=this._viewProjMat}this._drawFill(b,c,d,g,f,k,m,w,D,H,u,v);if(k.getPaintValue("fill-antialias",d)&&!q&&0<c.outlineElementCount&&(1===g||3===g)){g=k.hasDataDrivenOutline;d=k.getPaintValue("fill-outline-color",d);if(0===
d[3]){if(1!==this._color[3]&&!g)return;d=t}D=.75/D;if(t=this._getOutlineVAO(b,f,g))b.bindVAO(t),t=this._outlineShaderVariations.getProgram([g,u],void 0,void 0,g?this._outlineAttributeLocationsDD:this._outlineAttributeLocations),b.bindProgram(t),t.setUniformMatrix4fv("u_transformMatrix",w),t.setUniformMatrix4fv("u_extrudeMatrix",p),t.setUniform2fv("u_normalized_origin",f.tileTransform.displayCoord),t.setUniform1f("u_depth",k.z+n),t.setUniform1f("u_outline_width",D),g||(f=r*d[3],this._outlineColor[0]=
f*d[0],this._outlineColor[1]=f*d[1],this._outlineColor[2]=f*d[2],this._outlineColor[3]=f,t.setUniform4fv("u_color",this._outlineColor)),u&&t.setUniform4f("u_id",v[0],v[1],v[2],v[3]),b.drawElements(4,c.outlineElementCount,5125,12*c.outlineElementStart),b.bindVAO()}}};d.prototype._initialize=function(a){if(this._initialized)return!0;var b=new k("fill",["fillVS","fillFS"],[],m,a);b.addDefine("PATTERN","PATTERN",[!0,!0],"PATTERN");b.addDefine("DD","DD",[!0,!1],"DD");b.addDefine("ID","ID",[!0,!0],"ID");
this._fillShaderVariations=b;this._fillVertexAttributes={geometry:[{name:"a_pos",count:2,type:5122,offset:0,stride:4,normalized:!1,divisor:0}]};this._fillVertexAttributesDD={geometry:[{name:"a_pos",count:2,type:5122,offset:0,stride:8,normalized:!1,divisor:0},{name:"a_color",count:4,type:5121,offset:4,stride:8,normalized:!0,divisor:0}]};a=new k("outline",["outlineVS","outlineFS"],[],m,a);a.addDefine("DD","DD",[!0,!1],"DD");a.addDefine("ID","ID",[!0,!0],"ID");this._outlineShaderVariations=a;this._outlineVertexAttributes=
{geometry:[{name:"a_pos",count:2,type:5122,offset:0,stride:8,normalized:!1,divisor:0},{name:"a_offset",count:2,type:5120,offset:4,stride:8,normalized:!1,divisor:0},{name:"a_xnormal",count:2,type:5120,offset:6,stride:8,normalized:!1,divisor:0}]};this._outlineVertexAttributesDD={geometry:[{name:"a_pos",count:2,type:5122,offset:0,stride:12,normalized:!1,divisor:0},{name:"a_offset",count:2,type:5120,offset:4,stride:12,normalized:!1,divisor:0},{name:"a_xnormal",count:2,type:5120,offset:6,stride:12,normalized:!1,
divisor:0},{name:"a_color",count:4,type:5121,offset:8,stride:12,normalized:!0,divisor:0}]};return this._initialized=!0};d.prototype._drawFill=function(a,c,d,e,g,f,h,k,m,l,p,I){var q=f.getPaintValue("fill-pattern",d),r=void 0!==q,t=l*f.getPaintValue("fill-opacity",d);l=f.getPaintValue("fill-color",d);var u=f.hasDataDrivenFill,v=u?.5:l[3]*t,H=!1;r||1!==v||(H=!0);if(!r||0!==e)if(!H||1!==e)if(r||H||0!==e)if(e=this._getFillVAO(a,g,u))a.bindVAO(e),e=this._fillShaderVariations.getProgram([r,u,p],void 0,
void 0,u?this._fillAttributeLocationsDD:this._fillAttributeLocations),a.bindProgram(e),r&&(q=h.getMosaicItemPosition(q,!0))&&(d=g.coordRange/512/Math.pow(2,Math.round(d)-g.key.level)/m,b.identity(this._patternMatrix),m=1/(q.size[1]*d),this._patternMatrix[0]=1/(q.size[0]*d),this._patternMatrix[4]=m,h.bind(a,9729,q.page,1),e.setUniformMatrix3fv("u_pattern_matrix",this._patternMatrix),e.setUniform2f("u_pattern_tl",q.tl[0],q.tl[1]),e.setUniform2f("u_pattern_br",q.br[0],q.br[1]),e.setUniform1i("u_texture",
1)),e.setUniformMatrix4fv("u_transformMatrix",k),e.setUniform2fv("u_normalized_origin",g.tileTransform.displayCoord),e.setUniform1f("u_depth",f.z+n),u||(g=t*l[3],this._color[0]=g*l[0],this._color[1]=g*l[1],this._color[2]=g*l[2],this._color[3]=g,e.setUniform4fv("u_color",this._color)),p&&e.setUniform4f("u_id",I[0],I[1],I[2],I[3]),a.drawElements(4,c.triangleElementCount,5125,12*c.triangleElementStart),a.bindVAO()};d.prototype._getFillVAO=function(a,b,c){if(c){if(b.fillDDVertexArrayObject)return b.fillDDVertexArrayObject;
c=b.fillDDVertexBuffer;var d=b.fillIndexBuffer;if(!c||!d)return null;b.fillDDVertexArrayObject=new e(a,this._fillAttributeLocationsDD,this._fillVertexAttributesDD,{geometry:c},d);return b.fillDDVertexArrayObject}if(b.fillVertexArrayObject)return b.fillVertexArrayObject;c=b.fillVertexBuffer;d=b.fillIndexBuffer;if(!c||!d)return null;b.fillVertexArrayObject=new e(a,this._fillAttributeLocations,this._fillVertexAttributes,{geometry:c},d);return b.fillVertexArrayObject};d.prototype._getOutlineVAO=function(a,
b,c){if(c){if(b.outlineDDVertexArrayObject)return b.outlineDDVertexArrayObject;c=b.outlineDDVertexBuffer;var d=b.outlineIndexBuffer;if(!c||!d)return null;b.outlineDDVertexArrayObject=new e(a,this._outlineAttributeLocationsDD,this._outlineVertexAttributesDD,{geometry:c},d);return b.outlineDDVertexArrayObject}if(b.outlineVertexArrayObject)return b.outlineVertexArrayObject;c=b.outlineVertexBuffer;d=b.outlineIndexBuffer;if(!c||!d)return null;b.outlineVertexArrayObject=new e(a,this._outlineAttributeLocations,
this._outlineVertexAttributes,{geometry:c},d);return b.outlineVertexArrayObject};return d}()})},"esri/views/vectorTiles/renderers/SymbolRenderer":function(){define(["require","exports","./IconRenderer","./SDFRenderer"],function(p,d,a,b){return function(){function c(){this._iconRenderer=new a;this._sdfRenderer=new b}c.prototype.dispose=function(){this._iconRenderer&&(this._iconRenderer.dispose(),this._iconRenderer=null);this._sdfRenderer&&(this._sdfRenderer.dispose(),this._sdfRenderer=null)};c.prototype.render=
function(a,b,c,d,k,m,n,g,q,p,r,u,v,w){b.hasData()&&(0<b.markerPerPageElementsMap.size&&this._iconRenderer.render(a,b,c,d,k,m,n,g,q,r,u,w),0<b.glyphPerPageElementsMap.size&&this._sdfRenderer.render(a,b,c,d,k,m,n,g,p,r,u,v,w))};return c}()})},"esri/views/vectorTiles/renderers/IconRenderer":function(){define("require exports ../../../core/libs/gl-matrix/mat4 ../../../core/libs/gl-matrix/vec3 ../../webgl/VertexArrayObject ../GeometryUtils ./rendererUtils ../../webgl/ShaderVariations ./vtShaderSnippets".split(" "),
function(p,d,a,b,c,f,e,h,l){return function(){function d(){this._attributeLocations={a_pos:0,a_vertexOffset:1,a_tex:2,a_levelInfo:3};this._attributeLocationsDD={a_pos:0,a_vertexOffset:1,a_tex:2,a_levelInfo:3,a_color:4,a_size:5};this._spritesTextureSize=new Float32Array(2);this._initialized=!1;this._viewProjMat=a.create();this._offsetVector=b.create();this._extrudeMat=a.create()}d.prototype.dispose=function(){};d.prototype.render=function(b,c,d,h,k,l,p,v,w,x,z,F){var g=this;this._initialized||this._initialize(b);
var m=v.getLayoutValue("icon-size",d);F*=v.getPaintValue("icon-opacity",d);var n=v.getLayoutValue("icon-rotation-alignment",d);2===n&&(n=1===v.getLayoutValue("symbol-placement",d)?0:1);var q=0===n,r=c.isSDF,t=v.hasDataDrivenIcon;h=3===h;var n=f.degToByte(k),u=p.tileTransform.transform,C=v.getPaintValue("icon-translate",d);if(0!==C[0]||0!==C[1]){a.copy(this._viewProjMat,p.tileTransform.transform);var u=C[0],C=C[1],K=0,E=0,E=(1<<p.key.level)/Math.pow(2,d)*(p.coordRange/512);if(1===v.getPaintValue("icon-translate-anchor",
d)){K=-f.C_DEG_TO_RAD*k;k=Math.sin(K);var B=Math.cos(K),K=E*(u*B-C*k),E=E*(u*k+C*B)}else K=E*u,E*=C;this._offsetVector[0]=K;this._offsetVector[1]=E;this._offsetVector[2]=0;a.translate(this._viewProjMat,this._viewProjMat,this._offsetVector);u=this._viewProjMat}q?a.copy(this._extrudeMat,x):a.copy(this._extrudeMat,z);if(x=this._getIconVAO(b,p,t)){b.bindVAO(x);var y=this._shaderVariations.getProgram([r,t,h],void 0,void 0,t?this._attributeLocationsDD:this._attributeLocations);b.bindProgram(y);r&&(x=v.getPaintValue("icon-color",
d),z=v.getPaintValue("icon-halo-color",d),r=v.getPaintValue("icon-halo-width",d),y.setUniform4f("u_color",x[0],x[1],x[2],x[3]),y.setUniform4f("u_outlineColor",z[0],z[1],z[2],z[3]),y.setUniform1f("u_outlineSize",r));y.setUniformMatrix4fv("u_transformMatrix",u);y.setUniformMatrix4fv("u_extrudeMatrix",this._extrudeMat);y.setUniform2fv("u_normalized_origin",p.tileTransform.displayCoord);y.setUniform1f("u_depth",v.z);y.setUniform1f("u_mapRotation",n);y.setUniform1f("u_keepUpright",0);y.setUniform1f("u_level",
10*d);y.setUniform1f("u_fadeSpeed",10*l.fadeSpeed);y.setUniform1f("u_minfadeLevel",10*l.minfadeLevel);y.setUniform1f("u_maxfadeLevel",10*l.maxfadeLevel);y.setUniform1f("u_fadeChange",10*(d+l.fadeChange));y.setUniform1i("u_texture",1);y.setUniform1f("u_size",m);y.setUniform1f("u_opacity",F);h&&(d=e.int32To4Bytes(c.layerID),y.setUniform4f("u_id",d[0],d[1],d[2],d[3]));c.markerPerPageElementsMap.forEach(function(a,c){g._spritesTextureSize[0]=w.getWidth(c)/4;g._spritesTextureSize[1]=w.getHeight(c)/4;y.setUniform2fv("u_mosaicSize",
g._spritesTextureSize);w.bind(b,9729,c,1);b.drawElements(4,a[1],5125,12*a[0])});b.bindVAO()}};d.prototype._initialize=function(a){if(this._initialized)return!0;a=new h("icon",["iconVS","iconFS"],[],l,a);a.addDefine("SDF","SDF",[!0,!0],"SDF");a.addDefine("DD","DD",[!0,!1],"DD");a.addDefine("ID","ID",[!0,!0],"ID");this._shaderVariations=a;this._vertexAttributes={geometry:[{name:"a_pos",count:2,type:5122,offset:0,stride:16,normalized:!1,divisor:0},{name:"a_vertexOffset",count:2,type:5122,offset:4,stride:16,
normalized:!1,divisor:0},{name:"a_tex",count:4,type:5121,offset:8,stride:16,normalized:!1,divisor:0},{name:"a_levelInfo",count:4,type:5121,offset:12,stride:16,normalized:!1,divisor:0}]};this._vertexAttributesDD={geometry:[{name:"a_pos",count:2,type:5122,offset:0,stride:24,normalized:!1,divisor:0},{name:"a_vertexOffset",count:2,type:5122,offset:4,stride:24,normalized:!1,divisor:0},{name:"a_tex",count:4,type:5121,offset:8,stride:24,normalized:!1,divisor:0},{name:"a_levelInfo",count:4,type:5121,offset:12,
stride:24,normalized:!1,divisor:0},{name:"a_color",count:4,type:5121,offset:16,stride:24,normalized:!0,divisor:0},{name:"a_size",count:1,type:5126,offset:20,stride:24,normalized:!1,divisor:0}]};return this._initialized=!0};d.prototype._getIconVAO=function(a,b,d){if(d){if(b.iconDDVertexArrayObject)return b.iconDDVertexArrayObject;d=b.iconDDVertexBuffer;var e=b.iconIndexBuffer;if(!d||!e)return null;b.iconDDVertexArrayObject=new c(a,this._attributeLocationsDD,this._vertexAttributesDD,{geometry:d},e);
return b.iconDDVertexArrayObject}if(b.iconVertexArrayObject)return b.iconVertexArrayObject;d=b.iconVertexBuffer;e=b.iconIndexBuffer;if(!d||!e)return null;b.iconVertexArrayObject=new c(a,this._attributeLocations,this._vertexAttributes,{geometry:d},e);return b.iconVertexArrayObject};return d}()})},"esri/views/vectorTiles/renderers/SDFRenderer":function(){define("require exports dojo/has ../../../core/libs/gl-matrix/mat4 ../../../core/libs/gl-matrix/vec4 ../../../core/libs/gl-matrix/vec3 ../../webgl/VertexArrayObject ../GeometryUtils ./rendererUtils ../../webgl/ShaderVariations ./vtShaderSnippets".split(" "),
function(p,d,a,b,c,f,e,h,l,k,m){var n=1/65536;return function(){function d(){this._attributeLocations={a_pos:0,a_vertexOffset:1,a_tex:2,a_levelInfo:3};this._attributeLocationsDD={a_pos:0,a_vertexOffset:1,a_tex:2,a_levelInfo:3,a_color:4,a_size:5};this._initialized=!1;this._viewProjMat=b.create();this._offsetVector=f.create();this._extrudeMat=b.create();this._haloColor=c.create();this._sdfColor=c.create();this._scaleVec=f.create()}d.prototype.dispose=function(){};d.prototype.render=function(c,d,e,f,
g,k,m,p,F,D,H,I,J){var q=this;if(!a("esri-vector-tiles-avoid-text")){this._initialized||this._initialize(c);var r=p.getLayoutValue("text-size",e),t=h.degToByte(g),u=p.getLayoutValue("text-rotation-alignment",e);2===u&&(u=1===p.getLayoutValue("symbol-placement",e)?0:1);var v=0===u,u=p.getLayoutValue("text-keep-upright",e)&&v;f=3===f;I=.8*3/I;var w=J*p.getPaintValue("text-opacity",e);this._glyphTextureSize||(this._glyphTextureSize=new Float32Array([F.width/4,F.height/4]));J=m.tileTransform.transform;
var x=p.getPaintValue("text-translate",e);if(0!==x[0]||0!==x[1]){b.copy(this._viewProjMat,m.tileTransform.transform);J=x[0];var x=x[1],y=0,z=0,z=(1<<m.key.level)/Math.pow(2,e)*(m.coordRange/512);if(1===p.getPaintValue("text-translate-anchor",e)){y=-h.C_DEG_TO_RAD*g;g=Math.sin(y);var O=Math.cos(y),y=z*(J*O-x*g),z=z*(J*g+x*O)}else y=z*J,z*=x;this._offsetVector[0]=y;this._offsetVector[1]=z;this._offsetVector[2]=0;b.translate(this._viewProjMat,this._viewProjMat,this._offsetVector);J=this._viewProjMat}v?
b.copy(this._extrudeMat,D):b.copy(this._extrudeMat,H);this._scaleVec[0]=1/24;this._scaleVec[1]=1/24;this._scaleVec[2]=1;b.scale(this._extrudeMat,this._extrudeMat,this._scaleVec);D=p.hasDataDrivenText;if(H=this._getSDFVAO(c,m,D)){c.bindVAO(H);var A=this._shaderVariations.getProgram([D,f],void 0,void 0,D?this._attributeLocationsDD:this._attributeLocations);c.bindProgram(A);A.setUniformMatrix4fv("u_transformMatrix",J);A.setUniformMatrix4fv("u_extrudeMatrix",this._extrudeMat);A.setUniform2fv("u_normalized_origin",
m.tileTransform.displayCoord);A.setUniform1f("u_depth",p.z+n);A.setUniform2fv("u_mosaicSize",this._glyphTextureSize);A.setUniform1f("u_mapRotation",t);A.setUniform1f("u_keepUpright",u?1:0);A.setUniform1f("u_level",10*e);A.setUniform1f("u_fadeSpeed",10*k.fadeSpeed);A.setUniform1f("u_minfadeLevel",10*k.minfadeLevel);A.setUniform1f("u_maxfadeLevel",10*k.maxfadeLevel);A.setUniform1f("u_fadeChange",10*(e+k.fadeChange));A.setUniform1f("u_opacity",w);A.setUniform1i("u_texture",0);A.setUniform1f("u_size",
r);A.setUniform1f("u_antialiasingWidth",I);f&&(k=l.int32To4Bytes(d.layerID),A.setUniform4f("u_id",k[0],k[1],k[2],k[3]));d.glyphPerPageElementsMap.forEach(function(a,b){F.bind(c,9729,b,0);var d=p.getPaintValue("text-halo-color",e);b=p.getPaintValue("text-halo-width",e);if(0<d[3]&&0<b){var f=d[3]*w;q._haloColor[0]=f*d[0];q._haloColor[1]=f*d[1];q._haloColor[2]=f*d[2];q._haloColor[3]=f;d=3*p.getPaintValue("text-halo-blur",e);b*=3;A.setUniform4fv("u_color",q._haloColor);A.setUniform1f("u_halo",1);A.setUniform1f("u_edgeDistance",
b);A.setUniform1f("u_edgeBlur",d);c.drawElements(4,a[1],5125,12*a[0])}b=p.getPaintValue("text-color",e);0<b[3]&&(d=b[3]*w,q._sdfColor[0]=d*b[0],q._sdfColor[1]=d*b[1],q._sdfColor[2]=d*b[2],q._sdfColor[3]=d,A.setUniform4fv("u_color",q._sdfColor),A.setUniform1f("u_halo",0),A.setUniform1f("u_edgeDistance",0),A.setUniform1f("u_edgeBlur",0),c.drawElements(4,a[1],5125,12*a[0]))});c.bindVAO()}}};d.prototype._initialize=function(a){if(this._initialized)return!0;a=new k("text",["textVS","textFS"],[],m,a);a.addDefine("DD",
"DD",[!0,!1],"DD");a.addDefine("ID","ID",[!0,!0],"ID");this._shaderVariations=a;this._vertexAttributes={geometry:[{name:"a_pos",count:2,type:5122,offset:0,stride:16,normalized:!1,divisor:0},{name:"a_vertexOffset",count:2,type:5122,offset:4,stride:16,normalized:!1,divisor:0},{name:"a_tex",count:4,type:5121,offset:8,stride:16,normalized:!1,divisor:0},{name:"a_levelInfo",count:4,type:5121,offset:12,stride:16,normalized:!1,divisor:0}]};this._vertexAttributesDD={geometry:[{name:"a_pos",count:2,type:5122,
offset:0,stride:24,normalized:!1,divisor:0},{name:"a_vertexOffset",count:2,type:5122,offset:4,stride:24,normalized:!1,divisor:0},{name:"a_tex",count:4,type:5121,offset:8,stride:24,normalized:!1,divisor:0},{name:"a_levelInfo",count:4,type:5121,offset:12,stride:24,normalized:!1,divisor:0},{name:"a_color",count:4,type:5121,offset:16,stride:24,normalized:!0,divisor:0},{name:"a_size",count:1,type:5126,offset:20,stride:24,normalized:!1,divisor:0}]};return this._initialized=!0};d.prototype._getSDFVAO=function(a,
b,c){if(c){if(b.textDDVertexArrayObject)return b.textDDVertexArrayObject;c=b.textDDVertexBuffer;var d=b.textIndexBuffer;if(!c||!d)return null;b.textDDVertexArrayObject=new e(a,this._attributeLocationsDD,this._vertexAttributesDD,{geometry:c},d);return b.textDDVertexArrayObject}if(b.textVertexArrayObject)return b.textVertexArrayObject;c=b.textVertexBuffer;d=b.textIndexBuffer;if(!c||!d)return null;b.textVertexArrayObject=new e(a,this._attributeLocations,this._vertexAttributes,{geometry:c},d);return b.textVertexArrayObject};
return d}()})},"esri/views/vectorTiles/renderers/TileInfoRenderer":function(){define("require exports ../../webgl/Program ../../webgl/VertexArrayObject ../../webgl/BufferObject ../../webgl/Texture ../GeometryUtils ./vtShaderSnippets".split(" "),function(p,d,a,b,c,f,e,h){return function(){function d(){this._initialized=!1;this._maxWidth=0;this._color=new Float32Array([1,0,0,1])}d.prototype.dispose=function(){this._outlineProgram&&(this._outlineProgram.dispose(),this._outlineProgram=null);this._tileInfoProgram&&
(this._tileInfoProgram.dispose(),this._tileInfoProgram=null);this._outlineVertexArrayObject&&(this._outlineVertexArrayObject.dispose(),this._outlineVertexArrayObject=null);this._tileInfoVertexArrayObject&&(this._tileInfoVertexArrayObject.dispose(),this._tileInfoVertexArrayObject=null)};d.prototype.render=function(a,b){this._initialized||this._initialize(a);a.bindVAO(this._outlineVertexArrayObject);a.bindProgram(this._outlineProgram);this._outlineProgram.setUniformMatrix4fv("u_transformMatrix",b.tileTransform.transform);
this._outlineProgram.setUniform2fv("u_normalized_origin",b.tileTransform.displayCoord);this._outlineProgram.setUniform1f("u_coord_range",b.coordRange);this._outlineProgram.setUniform1f("u_depth",0);this._outlineProgram.setUniform4fv("u_color",this._color);a.setLineWidth(2);a.drawArrays(3,0,4);a.bindVAO();var c=this._getTexture(a,b);c&&(a.bindVAO(this._tileInfoVertexArrayObject),a.bindProgram(this._tileInfoProgram),a.bindTexture(c,0),this._tileInfoProgram.setUniformMatrix4fv("u_transformMatrix",b.tileTransform.transform),
this._tileInfoProgram.setUniform2fv("u_normalized_origin",b.tileTransform.displayCoord),this._tileInfoProgram.setUniform1f("u_depth",0),this._tileInfoProgram.setUniform1f("u_coord_ratio",b.coordRange/512),this._tileInfoProgram.setUniform2f("u_delta",8,8),this._tileInfoProgram.setUniform2f("u_dimensions",c.descriptor.width,c.descriptor.height),a.drawArrays(5,0,4),a.bindVAO())};d.prototype._initialize=function(d){if(this._initialized)return!0;var e={a_pos:0},f=new a(d,h.backgroundVS,h.backgroundFS,
e),g=new a(d,h.tileInfoVS,h.tileInfoFS,e),k={geometry:[{name:"a_pos",count:2,type:5120,offset:0,stride:2,normalized:!1,divisor:0}]},l=new Int8Array([0,0,1,0,1,1,0,1]),l=c.createVertex(d,35044,l),l=new b(d,e,k,{geometry:l}),p=new Int8Array([0,0,1,0,0,1,1,1]),p=c.createVertex(d,35044,p);d=new b(d,e,k,{geometry:p});this._outlineProgram=f;this._tileInfoProgram=g;this._outlineVertexArrayObject=l;this._tileInfoVertexArrayObject=d;return this._initialized=!0};d.prototype._getTexture=function(a,b){if(b.texture)return b.texture;
this._canvas||(this._canvas=document.createElement("canvas"),this._canvas.setAttribute("id","canvas2d"),this._canvas.setAttribute("width","256"),this._canvas.setAttribute("height","32"),this._canvas.setAttribute("style","display:none"));var c=b.key.id,d=this._canvas.getContext("2d");d.font="24px sans-serif";d.textAlign="left";d.textBaseline="middle";var h=d.measureText(c),h=Math.pow(2,Math.ceil(e.log2(h.width+2)));h>this._maxWidth&&(this._maxWidth=h);d.clearRect(0,0,this._maxWidth,32);d.fillStyle=
b.key.level>b.refKey.level?"red":"blue";d.fillText(c,0,16);b.texture=new f(a,{target:3553,pixelFormat:6408,dataType:5121,samplingMode:9728},this._canvas);return b.texture};return d}()})},"esri/views/vectorTiles/renderers/FadeRecorder":function(){define(["require","exports","../../../core/now"],function(p,d,a){Object.defineProperty(d,"__esModule",{value:!0});(function(){return function(a,c){this.level=a;this.now=c}})();p=function(){return function(a,c,d,e){this.fadeSpeed=a;this.minfadeLevel=c;this.maxfadeLevel=
d;this.fadeChange=e}}();d.FadeProperties=p;p=function(){function b(a){void 0===a&&(a=300);this._levelSnapshots=[];this._duration=a}b.prototype.recordLevel=function(b){var c=a(),d=this._levelSnapshots;0===d.length&&(d.push({level:b,now:0}),d.push({level:b,now:0}));2!==d.length&&d[0].level===b||d.push({level:b,now:c})};b.prototype.needsRedraw=function(){if(0===this._levelSnapshots.length)return!1;for(var a=this._duration,b=this._levelSnapshots,d=b.length,h=b[d-1],l=-1;d>l+1&&b[l+1].now+a<h.now;)l++;
for(0>l&&(l=0);l<d;l++)if(b[l].level!==h.level)return!0;return!1};b.prototype.getFadeValues=function(b){void 0===b&&(b=!1);for(var c=this._duration,d=a(),h=this._levelSnapshots;3<h.length&&h[1].now+c<d;)h.shift();h[1].now+c<d&&(h[0].level=h[1].level);var l=h[0].level,k=h[h.length-1],m=k.level,n=Math.min(l,m),l=Math.max(l,m),h=(k.level-h[1].level)/((k.now-h[1].now)/c);return b?{fadeSpeed:0,minfadeLevel:n,maxfadeLevel:l,fadeChange:0}:{fadeSpeed:h,minfadeLevel:n,maxfadeLevel:l,fadeChange:(d-k.now)/c*
h}};return b}();d.FadeRecorder=p})},"url:esri/views/vectorTiles/renderers/shaders/backgroundShaders.xml":'\x3c?xml version\x3d"1.0" encoding\x3d"UTF-8"?\x3e\r\n\x3c!--\r\n  // YF TODO: (doc)\r\n--\x3e\r\n\x3csnippets\x3e\r\n  \x3csnippet name\x3d"backgroundVS"\x3e\r\n    \x3c![CDATA[\r\n    precision mediump float;\r\n\r\n    attribute vec2 a_pos;\r\n\r\n  #ifdef ID\r\n    uniform mediump vec4 u_id;\r\n    varying mediump vec4 v_id;\r\n  #endif // ID\r\n\r\n    uniform highp mat4 u_transformMatrix;\r\n    uniform mediump vec2 u_normalized_origin;\r\n    uniform mediump float u_coord_range;\r\n    uniform mediump float u_depth;\r\n\r\n  #ifdef PATTERN\r\n    uniform mediump mat3 u_pattern_matrix; // can we use medium precision?\r\n    varying mediump vec2 v_tileTextureCoord;\r\n  #endif // PATTERN\r\n\r\n    void main() {\r\n      gl_Position \x3d vec4(u_normalized_origin, u_depth, 0.0) + u_transformMatrix * vec4(u_coord_range * a_pos, 0.0, 1.0);\r\n\r\n  #ifdef PATTERN\r\n      // calculate the texture coordinates of the current vertex. It will of course get interpolated.\r\n      // The pattern matrix is a 3x3 scale matrix which \'tiles\' the texture inside the tile, translating from tile coordinates\r\n      v_tileTextureCoord \x3d (u_pattern_matrix * vec3(a_pos, 1.0)).xy;\r\n  #endif // PATTERN\r\n\r\n  #ifdef ID\r\n      v_id \x3d u_id / 255.0;\r\n  #endif // ID\r\n    }\r\n    ]]\x3e\r\n  \x3c/snippet\x3e\r\n\r\n  \x3csnippet name\x3d"backgroundFS"\x3e\r\n    \x3c![CDATA[\r\n  #ifdef PATTERN\r\n    uniform lowp float u_opacity;\r\n    uniform mediump vec2 u_pattern_tl;\r\n    uniform mediump vec2 u_pattern_br;\r\n    uniform sampler2D u_texture;\r\n\r\n    varying mediump vec2 v_tileTextureCoord;\r\n  #else\r\n    uniform lowp vec4 u_color;\r\n  #endif // PATTERN\r\n\r\n  #ifdef ID\r\n    varying mediump vec4 v_id;\r\n  #endif // ID\r\n\r\n    void main() {\r\n  #ifdef PATTERN\r\n      // normalize the calculated texture coordinate such that it fits in the range of 0 to 1.\r\n      mediump vec2 normalizedTextureCoord \x3d mod(v_tileTextureCoord, 1.0);\r\n\r\n      // interpolate the image coordinate between the top-left and the bottom right to get the actual position to sample.\r\n      // after normalizing the position, we get a value ranging between 0 and 1 which refers to the entire texture, however\r\n      // we need to only sample from area that has our sprite in the mosaic.\r\n      mediump vec2 samplePos \x3d mix(u_pattern_tl, u_pattern_br, normalizedTextureCoord);\r\n\r\n      // sample the sprite mosaic\r\n      lowp vec4 color \x3d texture2D(u_texture, samplePos);\r\n      gl_FragColor \x3d u_opacity * color;\r\n  #else\r\n      gl_FragColor \x3d u_color;\r\n  #endif // PATTERN\r\n\r\n  #ifdef ID\r\n      if (gl_FragColor.a \x3c 1.0 / 255.0) {\r\n        discard;\r\n      }\r\n      gl_FragColor \x3d v_id;\r\n  #endif // ID\r\n    }\r\n    ]]\x3e\r\n  \x3c/snippet\x3e\r\n\x3c/snippets\x3e\r\n',
"url:esri/views/vectorTiles/renderers/shaders/fillShaders.xml":'\x3c?xml version\x3d"1.0" encoding\x3d"UTF-8"?\x3e\r\n\x3c!--\r\n  // YF TODO: (doc)\r\n--\x3e\r\n\x3csnippets\x3e\r\n  \x3csnippet name\x3d"fillVS"\x3e\r\n    \x3c![CDATA[\r\n      precision mediump float;\r\n\r\n      attribute vec2 a_pos;\r\n\r\n      uniform highp mat4 u_transformMatrix;\r\n      uniform highp vec2 u_normalized_origin;\r\n      uniform mediump float u_depth;\r\n\r\n    #ifdef PATTERN\r\n      uniform mediump mat3 u_pattern_matrix;\r\n      varying mediump vec2 v_tileTextureCoord;\r\n    #endif // PATTERN\r\n\r\n    #ifdef ID\r\n      uniform mediump vec4 u_id;\r\n      varying mediump vec4 v_id;\r\n    #endif // ID\r\n\r\n    #ifdef DD\r\n      attribute vec4 a_color;\r\n    #else\r\n      uniform lowp vec4 u_color;\r\n    #endif // DD\r\n      varying lowp vec4 v_color;\r\n\r\n      void main()\r\n      {\r\n      #ifdef DD\r\n        v_color \x3d a_color;\r\n      #else\r\n        v_color \x3d u_color;\r\n      #endif // DD\r\n\r\n      #ifdef ID\r\n        v_id \x3d u_id / 255.0;\r\n      #endif // ID\r\n\r\n      #ifdef PATTERN\r\n        // calculate the texture coordinates of the current vertex. It will of course get interpolated.\r\n        // The pattern matrix is a 3x3 scale matrix which \'tiles\' the texture inside the tile, translating from tile coordinates\r\n        // (-4k to 8k -1) to texture coordinates.\r\n        v_tileTextureCoord \x3d (u_pattern_matrix * vec3(a_pos, 1.0)).xy;\r\n      #endif // PATTERN\r\n\r\n        gl_Position \x3d vec4(u_normalized_origin, u_depth, 0.0) + u_transformMatrix * vec4(a_pos, 0, 1.0);\r\n      }\r\n    ]]\x3e\r\n  \x3c/snippet\x3e\r\n\r\n  \x3csnippet name\x3d"fillFS"\x3e\r\n    \x3c![CDATA[\r\n      precision lowp float;\r\n\r\n    #ifdef PATTERN\r\n      uniform mediump vec2 u_pattern_tl;\r\n      uniform mediump vec2 u_pattern_br;\r\n      uniform lowp sampler2D u_texture;\r\n      varying mediump vec2 v_tileTextureCoord;\r\n    #endif // PATTERN\r\n\r\n    #ifdef ID\r\n      varying mediump vec4 v_id;\r\n    #endif // ID\r\n\r\n      varying lowp vec4 v_color;\r\n\r\n      vec4 mixColors(vec4 color1, vec4 color2) {\r\n        // perform un-premultiplied over operator (see https://en.wikipedia.org/wiki/Alpha_compositing#Alpha_blending)\r\n        // we use pre-multiplied colors hence the need for this kind of mixing. At lease we save ourselves an extra division...\r\n        float compositeAlpha \x3d color2.a + color1.a * (1.0 - color2.a);\r\n        vec3 compositeColor \x3d color2.rgb + color1.rgb * (1.0 - color2.a);\r\n\r\n        return vec4(compositeColor, compositeAlpha);\r\n      }\r\n      void main()\r\n      {\r\n      #ifdef PATTERN\r\n        // normalize the calculated texture coordinate such that it fits in the range of 0 to 1.\r\n        mediump vec2 normalizedTextureCoord \x3d mod(v_tileTextureCoord, 1.0);\r\n\r\n        // interpolate the image coordinate between the top-left and the bottom right to get the actual position to sample.\r\n        // after normalizing the position, we get a value ranging between 0 and 1 which refers to the entire texture, however\r\n        // we need to only sample from area that has our sprite in the mosaic.\r\n        mediump vec2 samplePos \x3d mix(u_pattern_tl, u_pattern_br, normalizedTextureCoord);\r\n\r\n        // sample the sprite mosaic\r\n        lowp vec4 color \x3d texture2D(u_texture, samplePos);\r\n        gl_FragColor \x3d v_color[3] * color;\r\n      #else\r\n        gl_FragColor \x3d v_color;\r\n      #endif // PATTERN\r\n\r\n      #ifdef ID\r\n        if (gl_FragColor.a \x3c 1.0 / 255.0) {\r\n          discard;\r\n        }\r\n        gl_FragColor \x3d v_id;\r\n      #endif // ID\r\n      }\r\n    ]]\x3e\r\n  \x3c/snippet\x3e\r\n\x3c/snippets\x3e\r\n',
"url:esri/views/vectorTiles/renderers/shaders/outlineShaders.xml":'\x3c?xml version\x3d"1.0" encoding\x3d"UTF-8"?\x3e\r\n\x3c!--\r\n  // YF TODO: (doc)\r\n--\x3e\r\n\x3csnippets\x3e\r\n  \x3csnippet name\x3d"outlineVS"\x3e\r\n    \x3c![CDATA[\r\n      attribute vec2 a_pos;\r\n      attribute vec2 a_offset;\r\n      attribute vec2 a_xnormal;\r\n\r\n    #ifdef DD\r\n      attribute vec4 a_color;\r\n    #else\r\n      uniform lowp vec4 u_color;\r\n    #endif // DD\r\n      varying lowp vec4 v_color;\r\n\r\n    #ifdef ID\r\n      uniform mediump vec4 u_id;\r\n      varying mediump vec4 v_id;\r\n    #endif // ID\r\n\r\n      uniform highp mat4 u_transformMatrix;\r\n      uniform highp mat4 u_extrudeMatrix;\r\n      uniform highp vec2 u_normalized_origin;\r\n      uniform mediump float u_depth;\r\n      uniform mediump float u_outline_width;\r\n\r\n      varying lowp vec2 v_normal;\r\n\r\n      const float scale \x3d 1.0 / 15.0;\r\n\r\n      void main()\r\n      {\r\n      #ifdef DD\r\n        v_color \x3d a_color;\r\n      #else\r\n        v_color \x3d u_color;\r\n      #endif // DD\r\n\r\n      #ifdef ID\r\n        v_id \x3d u_id / 255.0;\r\n      #endif // ID\r\n\r\n        v_normal \x3d a_xnormal;\r\n\r\n        // calculate the relative distance from the centerline to the edge of the line. Since offset is given in integers (for the\r\n        // sake of using less attribute memory, we need to scale it back to the original range of ~ 0: 1)\r\n        mediump vec4 dist \x3d vec4(u_outline_width * a_offset * scale, 0.0, 0.0);\r\n\r\n        // Remove the texture normal bit of the position before scaling it with the\r\n        // model/view matrix. Add the extrusion vector *after* the model/view matrix\r\n        // because we\'re extruding the line in pixel space, regardless of the current\r\n        // tile\'s zoom level.\r\n        gl_Position \x3d vec4(u_normalized_origin, u_depth, 0.0) + u_transformMatrix * vec4(a_pos, 0.0, 1.0) + u_extrudeMatrix * dist;\r\n      }\r\n    ]]\x3e\r\n  \x3c/snippet\x3e\r\n\r\n  \x3csnippet name\x3d"outlineFS"\x3e\r\n    \x3c![CDATA[\r\n      varying lowp vec4 v_color;\r\n      varying mediump vec2 v_normal;\r\n\r\n    #ifdef ID\r\n      varying mediump vec4 v_id;\r\n    #endif // ID\r\n\r\n      void main()\r\n      {\r\n        // Calculate the distance of the pixel from the line in pixels.\r\n        lowp float dist \x3d abs(v_normal.y);\r\n\r\n        lowp float alpha \x3d smoothstep(1.0, 0.0, dist);\r\n        gl_FragColor \x3d alpha * v_color;\r\n\r\n      #ifdef ID\r\n        if (gl_FragColor.a \x3c 1.0 / 255.0) {\r\n          discard;\r\n        }\r\n        gl_FragColor \x3d v_id;\r\n      #endif // ID\r\n      }\r\n    ]]\x3e\r\n  \x3c/snippet\x3e\r\n\x3c/snippets\x3e\r\n',
"url:esri/views/vectorTiles/renderers/shaders/lineShaders.xml":'\x3c?xml version\x3d"1.0" encoding\x3d"UTF-8"?\x3e\r\n\x3c!--\r\n  // YF TODO: (doc)\r\n--\x3e\r\n\x3csnippets\x3e\r\n  \x3csnippet name\x3d"lineVS"\x3e\r\n    \x3c![CDATA[\r\n      /* The implementation of the renderer is based on the article and implementation of MB described here:\r\n      * https://www.mapbox.com/blog/drawing-antialiased-lines/\r\n      */\r\n\r\n      attribute vec2 a_pos;\r\n      attribute vec4 a_offsetAndNormal;\r\n      attribute vec2 a_accumulatedDistance;\r\n\r\n      // the relative transformation of a vertex given in tile coordinates to a relative normalized coordinate\r\n      // relative to the tile\'s upper left corner\r\n      // the extrusion vector.\r\n      uniform highp mat4 u_transformMatrix;\r\n\r\n      // the extrude matrix which is responsible for the \'anti-zoom\' as well as the rotation\r\n      uniform highp mat4 u_extrudeMatrix;\r\n\r\n      // u_normalized_origin is the tile\'s upper left corner given in normalized coordinates\r\n      uniform highp vec2 u_normalized_origin;\r\n\r\n      uniform mediump float u_blur; // the feather distance at which the line edge fades out\r\n\r\n      // the z of the layer. Given by the order of the layers in the style\r\n      uniform mediump float u_depth;\r\n\r\n      // the interpolated normal to the line. the information is packed into the two LSBs of the vertex coordinate\r\n      varying mediump vec2 v_normal;\r\n\r\n      // the accumulated distance along the line. We need this information in order to render the dashes.\r\n      varying highp float v_accumulatedDistance;\r\n\r\n      const float scale \x3d 1.0 / 31.0;\r\n\r\n    #ifdef DD\r\n      attribute vec4 a_color;\r\n      attribute mediump float a_width;\r\n    #else\r\n      uniform lowp vec4 u_color;\r\n      uniform mediump float u_width;\r\n    #endif // DD\r\n\r\n    #ifdef ID\r\n      uniform mediump vec4 u_id;\r\n      varying mediump vec4 v_id;\r\n    #endif // ID\r\n\r\n      varying lowp vec4 v_color;\r\n      varying mediump float v_lineHalfWidth; // the inset and outset of the line\r\n\r\n    #ifndef PATTERN\r\n      uniform mediump vec2 u_dasharray;\r\n      varying mediump vec2 v_dasharray;\r\n    #endif\r\n\r\n      void main()\r\n      {\r\n        v_normal \x3d a_offsetAndNormal.zw * scale;\r\n\r\n      #ifdef DD\r\n        v_lineHalfWidth \x3d a_width + u_blur;\r\n      #else\r\n        v_lineHalfWidth \x3d u_width + u_blur;\r\n      #endif // DD\r\n\r\n        v_lineHalfWidth *\x3d 0.5;\r\n\r\n      #ifndef PATTERN\r\n      #ifdef DD\r\n        v_dasharray \x3d u_dasharray * a_width;\r\n      #else\r\n        v_dasharray \x3d u_dasharray * u_width;\r\n      #endif // DD\r\n      #endif\r\n\r\n        // calculate the relative distance from the centerline to the edge of the line. Since offset is given in integers (for the\r\n        // sake of using less attribute memory, we need to scale it back to the original range of ~ 0: 1)\r\n        mediump vec2 dist \x3d v_lineHalfWidth * a_offsetAndNormal.xy * scale;\r\n\r\n        // transform the vertex\r\n        gl_Position \x3d vec4(u_normalized_origin, u_depth, 0.0) + u_transformMatrix * vec4(a_pos, 0.0, 1.0) + u_extrudeMatrix * vec4(dist, 0.0, 0.0);\r\n\r\n        // the accumulated distance will be used to calculate the dashes (or the no-data...)\r\n        v_accumulatedDistance \x3d a_accumulatedDistance.x;\r\n\r\n        #ifdef DD\r\n          v_color \x3d a_color;\r\n        #else\r\n          v_color \x3d u_color;\r\n        #endif // DD\r\n\r\n        #ifdef ID\r\n          v_id \x3d u_id / 255.0;\r\n        #endif // ID\r\n      }\r\n    ]]\x3e\r\n  \x3c/snippet\x3e\r\n\r\n  \x3csnippet name\x3d"lineFS"\x3e\r\n    \x3c![CDATA[\r\n      uniform mediump float u_blur;\r\n\r\n      varying mediump vec2 v_normal;\r\n      varying highp float v_accumulatedDistance;\r\n\r\n      varying mediump float v_lineHalfWidth;\r\n      varying lowp vec4 v_color;\r\n\r\n    #ifdef PATTERN\r\n      uniform mediump vec2 u_pattern_tl;\r\n      uniform mediump vec2 u_pattern_br;\r\n      uniform mediump vec2 u_spriteSize;\r\n      uniform sampler2D u_texture;\r\n\r\n      // Horizontal scale is used to scale the horizontal texture coordinate v_normal.x before adding it as an offset to the\r\n      // accumulated distance. Most vertices will have v_normal.x \x3d\x3d 0, because the pattern must be sampled only depending on\r\n      // the v_accumulatedDistance value. But tessellation at caps can have vertices with v_normal.x !\x3d 0, thus allowing to\r\n      // "keep moving" for a few more pixel even when the line has ended or has not started yet.\r\n      const mediump float tileCoordRatio \x3d 8.0;\r\n    #else\r\n      varying mediump vec2 v_dasharray;\r\n    #endif\r\n\r\n    #ifdef ID\r\n      varying mediump vec4 v_id;\r\n    #endif // ID\r\n\r\n      void main()\r\n      {\r\n        // dist represent the distance of the fragment from the line. 1.0 or -1.0 will be the values on the edge of the line,\r\n        // and any value in between will be inside the line (the sign represent the direction - right or left).\r\n        // since u_linewidth.s (half line width) is represented in pixels, dist is also given in pixels\r\n        mediump float fragDist \x3d length(v_normal) * v_lineHalfWidth;\r\n\r\n        // calculate the alpha given the difference between the line-width and the distance of the fragment from the center-line.\r\n        // We need to count for both sides of the line.\r\n        lowp float alpha \x3d clamp(min(fragDist + u_blur + 1.0, v_lineHalfWidth - fragDist) / u_blur, 0.0, 1.0);\r\n\r\n      #ifdef PATTERN\r\n        // we need to calculate the relative portion of the line texture along the line given the accumulated distance aliong the line\r\n        // The computed value should is anumber btween 0 and 1 which will later be used to interpolate btween the BR and TL values\r\n        mediump float relativeTexX \x3d mod((v_accumulatedDistance + v_normal.x * v_lineHalfWidth * tileCoordRatio) / u_spriteSize.x, 1.0);\r\n\r\n        // in order to calculate the texture coordinates perpendicular to the line (Y axis), we use the interpolated normal values\r\n        // which range from -1.0 to 1.0. On the line\'s centerline, the value of the interpolated normal is 0.0, however the relative\r\n        // texture value should be 0.5 (given that at the bottom of the line, the texture coordinate must be equal to 0.0)\r\n        // (TL) ---------------------------      --\x3e left edge of line. Interpolated normal is 1.0\r\n        //              | -\x3e line-width / 2\r\n        //      - - - - - - - - - - - - - -\r\n        //              | -\x3e line-width / 2\r\n        //      ---------------------------- (BR)--\x3e right edge of line. Interpolated normal is -1.0\r\n\r\n        mediump float relativeTexY \x3d 0.5 + (v_normal.y * v_lineHalfWidth / u_spriteSize.y);\r\n\r\n        // claculate the actual texture coordinates by interpolating between the TL/BR pattern coordinates\r\n        mediump vec2 texCoord \x3d mix(u_pattern_tl, u_pattern_br, vec2(relativeTexX, relativeTexY));\r\n\r\n        // get the color from the texture\r\n        lowp vec4 color \x3d texture2D(u_texture, texCoord);\r\n\r\n        // finally write the fragment value\r\n        gl_FragColor \x3d alpha * v_color[3] * color;\r\n      #else\r\n        // now calculate the dashes given the accumulated distance of the line:\r\n        // start with calculating a normalized position along the line\r\n        lowp float dashPos \x3d  mod(v_accumulatedDistance, v_dasharray.x + v_dasharray.y);\r\n\r\n        // calculate the contribution to the alpha of the dash part. It is provided by the shortest portion of the position along the dash.\r\n        // we must clamp since the value might be bigger than 1 or smaller than zero (when over a dash).\r\n        //   | \x3c--- pos along the dash part\r\n        // -------_______-------_______\r\n        // when the dashPos is over the \'gap\' part of the dash dasharray.x - dashPos is negative and therefore the alpha will\r\n        // get clamped to zero.\r\n        // when dasharray.x - dashPos is positive, or when dashPos is smaller than 1.0, it gives us a soft edge to each dash part.\r\n        // along the direction of the line.\r\n        lowp float dashAlpha \x3d clamp(min(dashPos, v_dasharray.x - dashPos) + 0.5, 0.0, 1.0);\r\n\r\n        // if we don\'t have a no-data part to the dash then it is a solid line\r\n        dashAlpha \x3d max(sign(-v_dasharray.y), dashAlpha);\r\n        // finally multiply the fragment\'s alpha by the calculated dash-alpha\r\n        alpha *\x3d dashAlpha;\r\n\r\n        // output the fragment color\r\n        gl_FragColor \x3d alpha * v_color;\r\n      #endif // PATTERN\r\n\r\n      #ifdef ID\r\n        if (gl_FragColor.a \x3c 1.0 / 255.0) {\r\n          discard;\r\n        }\r\n        gl_FragColor \x3d v_id;\r\n      #endif // ID\r\n      }\r\n    ]]\x3e\r\n  \x3c/snippet\x3e\r\n\x3c/snippets\x3e\r\n',
"url:esri/views/vectorTiles/renderers/shaders/iconShaders.xml":"\x3c?xml version\x3d\"1.0\" encoding\x3d\"UTF-8\"?\x3e\r\n\x3c!--\r\n  Add your GLSL snippets to this file. You should start from\r\n  importing your old GLSL files. For instance, if you have a\r\n  file such as myShader.vs.glsl you should create a new \x3csnippet name\x3d\"myShaderVS\"\x3e\r\n  and then copy and paste the GLSL source as the content. You will then convert your\r\n  code to use the {@link module:esri/views/vectorTiles/renderers/vtShaderSnippets vtShaderSnippets}\r\n  instance to access the GLSL code, instead of importing it directly with require(\"dojo/text!...\").\r\n--\x3e\r\n\x3csnippets\x3e\r\n  \x3csnippet name\x3d\"rgba2floatFunc\"\x3e\r\n    \x3c![CDATA[\r\n    float rgba2float(vec4 rgba) {\r\n      return dot(rgba,  vec4(1.0/16777216.0, 1.0/65535.0, 1.0/256.0, 1.0));\r\n    }\r\n    ]]\x3e\r\n  \x3c/snippet\x3e\r\n\r\n  \x3csnippet name\x3d\"iconVS\"\x3e\r\n    \x3c![CDATA[\r\n      attribute vec2 a_pos;\r\n      attribute vec2 a_vertexOffset;\r\n      attribute vec4 a_tex;\r\n      attribute vec4 a_levelInfo;\r\n\r\n    #ifdef DD\r\n      attribute vec4 a_color;\r\n      attribute mediump float a_size;\r\n    #else\r\n      uniform lowp vec4 u_color;\r\n      uniform mediump float u_size;\r\n    #endif // DD\r\n\r\n    #ifdef ID\r\n      uniform mediump vec4 u_id;\r\n      varying mediump vec4 v_id;\r\n    #endif // ID\r\n\r\n      varying lowp vec4 v_color;\r\n\r\n      // the relative transformation of a vertex given in tile coordinates to a relative normalized coordinate\r\n      // relative to the tile's upper left corner\r\n      // the extrusion vector.\r\n      uniform highp mat4 u_transformMatrix;\r\n\r\n      // the extrude matrix which is responsible for the 'anti-zoom' as well as the rotation\r\n      uniform highp mat4 u_extrudeMatrix;\r\n\r\n      // u_normalized_origin is the tile's upper left corner given in normalized coordinates\r\n      uniform highp vec2 u_normalized_origin;\r\n\r\n      // the size of the mosaic given in pixels\r\n      uniform vec2 u_mosaicSize;\r\n\r\n      // the z of the layer. Given by the order of the layers in the style\r\n      uniform mediump float u_depth;\r\n\r\n      // the map's rotation from the north\r\n      uniform mediump float u_mapRotation;\r\n      uniform mediump float u_level;\r\n\r\n      // indicate whether the current set of iconst should be kept upright when the map is rotated\r\n      uniform lowp float u_keepUpright;\r\n\r\n      // the rate of the change in the opacity (fade) of the icons\r\n      uniform mediump float u_fadeSpeed;\r\n\r\n      // the low level we transition (to/from)\r\n      uniform mediump float u_minfadeLevel;\r\n\r\n      // the high level we transition (to/from)\r\n      uniform mediump float u_maxfadeLevel;\r\n\r\n      // the amount of fade given teh current time past the last recorded level\r\n      uniform mediump float u_fadeChange;\r\n\r\n      // the opacity of the layer given by the painter\r\n      uniform mediump float u_opacity;\r\n\r\n      // the interpolated texture coordinate value to be used by the fragment shader in order to sample the sprite texture\r\n      varying mediump vec2 v_tex;\r\n\r\n      // the calculated transparency to be applied by the fragment shader. It is incorporating both the fade as well as the\r\n      // opacity of the layer given by the painter\r\n      varying lowp float v_transparency;\r\n\r\n      varying mediump vec2 v_size;\r\n\r\n      // the vertex offsets are given in integers, therefore in order to maintain a reasonable precision we multiply the values\r\n      // by 16 and then at the shader devide by the same number\r\n      const float C_OFFSET_PRECISION \x3d 1.0 / 32.0;\r\n\r\n      const float C_256_TO_RAD \x3d 3.14159265359 / 128.0;\r\n      const float C_DEG_TO_RAD \x3d 3.14159265359 / 180.0;\r\n      const float tileCoordRatio \x3d 1.0 / 8.0;\r\n\r\n      void main()\r\n      {\r\n        mediump float a_labelMinLevel \x3d a_levelInfo[0];\r\n        mediump float a_angle         \x3d a_levelInfo[1];\r\n        mediump float a_minLevel      \x3d a_levelInfo[2];\r\n        mediump float a_maxLevel      \x3d a_levelInfo[3];\r\n\r\n        // if the given vertex should not be visible simply clip it by adding it a value that will push it outside the clipping plane\r\n        mediump float delta_z \x3d 0.0;\r\n\r\n        // If the label rotates with the map, and if the rotated label is upside down, hide it\r\n        mediump float rotated \x3d mod(a_angle + u_mapRotation, 256.0);\r\n        delta_z +\x3d (1.0 - step(u_keepUpright, 0.0)) * step(64.0, rotated) * (1.0 - step(192.0, rotated)); //ie. z +\x3d (flip \x3e 0) \x26\x26 (64 \x3c\x3d rotated) \x26\x26 (rotated \x3c 192)\r\n\r\n        // u_level is the current service level adjusted for the change in font size\r\n        delta_z +\x3d 1.0 - step(a_minLevel, u_level); // Test if (level \x3c minLevel)\r\n        delta_z +\x3d step(a_maxLevel, u_level); // Test if (maxLevel \x3c\x3d level)\r\n\r\n        // calculate the alpha given the change in the fade and the fade-speed\r\n        lowp float alpha \x3d clamp((u_fadeChange - a_labelMinLevel) / u_fadeSpeed, 0.0, 1.0);\r\n\r\n        // if the speed is positive we are zooming in and therefore we need to 'fade-in'. Else we need to 'fade-out'\r\n        v_transparency \x3d (u_fadeSpeed \x3e\x3d 0.0 ? alpha : 1.0 - alpha);\r\n\r\n        // now deal with the min/max fade-levels. If we exceeded the level we simply snap to 0 or 1\r\n        if (u_maxfadeLevel \x3c a_labelMinLevel)\r\n        {\r\n          v_transparency \x3d 0.0;\r\n        }\r\n        if (u_minfadeLevel \x3e\x3d a_labelMinLevel)\r\n        {\r\n          v_transparency \x3d 1.0;\r\n        }\r\n\r\n        // if label had been faded out, clip it\r\n        delta_z +\x3d step(v_transparency, 0.0);\r\n\r\n        vec2 offset \x3d C_OFFSET_PRECISION * a_vertexOffset;\r\n\r\n        v_size \x3d abs(offset);\r\n\r\n      #ifdef SDF\r\n        offset \x3d (120.0 / 86.0) * offset;\r\n      #endif // SDF\r\n\r\n      #ifdef DD\r\n        mediump float icon_size \x3d a_size;\r\n      #else\r\n        mediump float icon_size \x3d u_size;\r\n      #endif // DD\r\n        gl_Position \x3d vec4(u_normalized_origin, u_depth, 0.0) + u_transformMatrix * vec4(a_pos, 0.0, 1.0) + u_extrudeMatrix * icon_size * vec4(offset, delta_z, 0.0);\r\n\r\n        float opacity;\r\n\r\n      #ifdef SDF\r\n      #ifdef DD\r\n        v_color \x3d a_color;\r\n      #else\r\n        v_color \x3d u_color;\r\n      #endif // DD\r\n        opacity \x3d u_opacity;\r\n      #else // SDF\r\n      #ifdef DD\r\n        opacity \x3d a_color.w;\r\n      #else\r\n        opacity \x3d u_opacity;\r\n      #endif // DD\r\n      #endif // SDF\r\n\r\n      #ifdef ID\r\n        v_id \x3d u_id / 255.0;\r\n      #endif // ID\r\n\r\n        v_tex \x3d a_tex.xy / u_mosaicSize;\r\n        v_transparency *\x3d opacity;\r\n      }\r\n    ]]\x3e\r\n  \x3c/snippet\x3e\r\n\r\n  \x3csnippet name\x3d\"iconFS\"\x3e\r\n    \x3c![CDATA[\r\n      precision mediump float;\r\n\r\n      uniform lowp sampler2D u_texture; // SDF texture\r\n    #ifdef SDF\r\n      uniform lowp vec4 u_color; // a color to override the one of the vertex\r\n      uniform lowp vec4 u_outlineColor;\r\n      uniform mediump float u_outlineSize;\r\n    #endif // SDF\r\n\r\n      varying mediump vec2 v_tex;\r\n      // the calculated transparency to be applied by the fragment shader. It is incorporating both the fade as well as the\r\n      // opacity of the layer given by the painter\r\n      varying lowp float v_transparency;\r\n\r\n      varying mediump vec2 v_size;\r\n\r\n    #ifdef SDF\r\n      varying lowp vec4 v_color;\r\n    #endif // SDF\r\n\r\n    #ifdef ID\r\n      varying mediump vec4 v_id;\r\n    #endif // ID\r\n\r\n      // we need the conversion function from RGBA to float\r\n      $rgba2floatFunc\r\n\r\n      vec4 mixColors(vec4 color1, vec4 color2) {\r\n        // perform un-premultiplied over operator (see https://en.wikipedia.org/wiki/Alpha_compositing#Alpha_blending)\r\n        // we use pre-multiplied colors hence the need for this kind of mixing. At lease we save ourselves an extra division...\r\n        float compositeAlpha \x3d color2.a + color1.a * (1.0 - color2.a);\r\n        vec3 compositeColor \x3d color2.rgb + color1.rgb * (1.0 - color2.a);\r\n\r\n        return vec4(compositeColor, compositeAlpha);\r\n      }\r\n\r\n      void main()\r\n      {\r\n      #ifdef SDF\r\n        lowp vec4 fillPixelColor \x3d v_color;\r\n\r\n        // calculate the distance from the edge [-0.5, 0.5]\r\n        float d \x3d rgba2float(texture2D(u_texture, v_tex)) - 0.5;\r\n\r\n        // Work around loss of precision for 'd \x3d 0.0'.\r\n        // '0' gets normalised to 0.5 * 256 \x3d 128 before float packing, but can only\r\n        // be stored in the texture as 128 / 255 \x3d 0.502.\r\n        // see: https://devtopia.esri.com/WebGIS/arcgis-js-api/issues/7058#issuecomment-603110\r\n        const float diff \x3d (128.0 / 255.0 - 0.5);\r\n\r\n        // adjust all values, not just those close to 0, to avoid discontinuities in\r\n        // the outlines of other shapes e.g. circles\r\n        d \x3d d - diff;\r\n\r\n        // the soft edge ratio is about 1.5 pixels allocated for the soft edge.\r\n        // 1 / 86 represents a single pixel given the the size of the SDF is 128 and we add 4 pixels margins to deal with\r\n        // other non SDF types.\r\n        // The rasterized geometry takes only 86 pixels because of the extra 16 pixels margin for the outline.\r\n        const float sofetEdgeRatio \x3d 0.248062016; // \x3d\x3d\x3e (32.0 / 86.0) / 1.5;\r\n        float size \x3d max(v_size.x, v_size.y);\r\n        float dist \x3d d * sofetEdgeRatio * size;\r\n\r\n        // set the fragment's transparency according to the distance from the edge\r\n        fillPixelColor *\x3d clamp(0.5 - dist, 0.0, 1.0);\r\n\r\n        // count for the outline\r\n        // therefore tint the entire icon area.\r\n        if (u_outlineSize \x3e 0.25) {\r\n          lowp vec4 outlinePixelColor \x3d u_outlineColor;\r\n          // the outline limit ratio is derived from the 16 pixels allocated for the outline and the fact that 1/86 represents\r\n          // a single pixel.\r\n          const float outlineLimitRatio \x3d (16.0 / 86.0);\r\n          float clampedOutlineSize \x3d sofetEdgeRatio * min(u_outlineSize, outlineLimitRatio * max(v_size.x, v_size.y));\r\n\r\n          outlinePixelColor *\x3d clamp(0.5 - (abs(dist) - clampedOutlineSize), 0.0, 1.0);\r\n\r\n          // finally combine the outline and the fill colors\r\n          gl_FragColor \x3d v_transparency * mixColors(fillPixelColor, outlinePixelColor);\r\n        }\r\n        else {\r\n          gl_FragColor \x3d v_transparency * fillPixelColor;\r\n        }\r\n      #else // not an SDF\r\n        lowp vec4 texColor \x3d texture2D(u_texture, v_tex);\r\n        gl_FragColor \x3d v_transparency * texColor;\r\n      #endif // SDF\r\n\r\n      #ifdef ID\r\n        if (gl_FragColor.a \x3c 1.0 / 255.0) {\r\n          discard;\r\n        }\r\n        gl_FragColor \x3d v_id;\r\n      #endif // ID\r\n      }\r\n    ]]\x3e\r\n  \x3c/snippet\x3e\r\n\r\n\x3c/snippets\x3e\r\n\r\n",
"url:esri/views/vectorTiles/renderers/shaders/textShaders.xml":'\x3c?xml version\x3d"1.0" encoding\x3d"UTF-8"?\x3e\r\n\x3c!--\r\n  Add your GLSL snippets to this file. You should start from\r\n  importing your old GLSL files. For instance, if you have a\r\n  file such as myShader.vs.glsl you should create a new \x3csnippet name\x3d"myShaderVS"\x3e\r\n  and then copy and paste the GLSL source as the content. You will then convert your\r\n  code to use the {@link module:esri/views/vectorTiles/renderers/vtShaderSnippets vtShaderSnippets}\r\n  instance to access the GLSL code, instead of importing it directly with require("dojo/text!...").\r\n--\x3e\r\n\x3csnippets\x3e\r\n  \x3csnippet name\x3d"rgba2floatFunc"\x3e\r\n    \x3c![CDATA[\r\n    float rgba2float(vec4 rgba) {\r\n      return dot(rgba, vec4(1.0/16777216.0, 1.0/65535.0, 1.0/256.0, 1.0));\r\n    }\r\n    ]]\x3e\r\n  \x3c/snippet\x3e\r\n\r\n  \x3csnippet name\x3d"textVS"\x3e\r\n    \x3c![CDATA[\r\n      attribute vec2 a_pos;\r\n      attribute vec2 a_vertexOffset;\r\n      attribute vec4 a_tex;\r\n      attribute vec4 a_levelInfo;\r\n\r\n      uniform lowp vec4 u_color; // always defined as halo does not support data driven but text does\r\n    #ifdef DD\r\n      attribute vec4 a_color;\r\n    #endif // DD\r\n      varying lowp vec4 v_color;\r\n\r\n    #ifdef DD\r\n      attribute mediump float a_size;\r\n    #else\r\n      uniform mediump float u_size;\r\n    #endif // DD\r\n      varying mediump float v_size;\r\n\r\n    #ifdef ID\r\n      uniform mediump vec4 u_id;\r\n      varying mediump vec4 v_id;\r\n    #endif // ID\r\n\r\n\r\n      // attribute bool a_visible; // --\x3e a one bit controlling the visibility of the vertex\r\n\r\n      // the relative transformation of a vertex given in tile coordinates to a relative normalized coordinate\r\n      // relative to the tile\'s upper left corner\r\n      // the extrusion vector.\r\n      uniform highp mat4 u_transformMatrix;\r\n\r\n      // the extrude matrix which is responsible for the \'anti-zoom\' as well as the rotation\r\n      uniform highp mat4 u_extrudeMatrix;\r\n\r\n      // u_normalized_origin is the tile\'s upper left corner given in normalized coordinates\r\n      uniform highp vec2 u_normalized_origin;\r\n\r\n      // the size of the mosaic given in pixels\r\n      uniform vec2 u_mosaicSize;\r\n\r\n      // the z of the layer. Given by the order of the layers in the style\r\n      uniform mediump float u_depth;\r\n\r\n      // the map\'s rotation from the north\r\n      uniform mediump float u_mapRotation;\r\n      uniform mediump float u_level;\r\n\r\n      // indicate whether the current set of iconst should be kept upright when the map is rotated\r\n      uniform lowp float u_keepUpright;\r\n\r\n      // the rate of the change in the opacity (fade) of the icons\r\n      uniform mediump float u_fadeSpeed;\r\n\r\n      // the low level we transition (to/from)\r\n      uniform mediump float u_minfadeLevel;\r\n\r\n      // the high level we transition (to/from)\r\n      uniform mediump float u_maxfadeLevel;\r\n\r\n      // the amount of fade given teh current time past the last recorded level\r\n      uniform mediump float u_fadeChange;\r\n\r\n      // the opacity of the layer given by the painter\r\n      uniform mediump float u_opacity;\r\n\r\n      // the interpolated texture coordinate value to be used by the fragment shader in order to sample the sprite texture\r\n      varying lowp vec2 v_tex;\r\n\r\n      // the calculated transparency to be applied by the fragment shader. It is incorporating both the fade as well as the\r\n      // opacity of the layer given by the painter\r\n      varying lowp float v_transparency;\r\n\r\n      // the vertex offsets are given in integers, therefore in order to maintain a reasonable precission we multiply the values\r\n      // by 16 and then at the shader devide by the same number\r\n      const float offsetPrecision \x3d 1.0 / 32.0;\r\n\r\n      // outline position and appearance\r\n      const mediump float edgePos \x3d 0.75; // defined by the SDF encoding\r\n      uniform mediump float u_edgeDistance;\r\n      uniform mediump float u_edgeBlur;\r\n      uniform mediump float u_antialiasingWidth; // antialiasing (factors in the pixel_ratio for high res devices)\r\n\r\n      varying mediump float v_edgeDistance; // will factor in the size\r\n      varying mediump float v_edgeWidth; // will factor in the size\r\n\r\n      uniform lowp float u_halo; // needed to avoid using the color attribute for halo\r\n\r\n      void main()\r\n      {\r\n        mediump float a_labelMinLevel \x3d a_levelInfo[0];\r\n        mediump float a_angle        \x3d a_levelInfo[1];\r\n        mediump float a_minLevel    \x3d a_levelInfo[2];\r\n        mediump float a_maxLevel    \x3d a_levelInfo[3];\r\n\r\n        // if the given vertex should not be visible simply clip it by adding it a value that will push it outside the clipping plane\r\n        mediump float delta_z \x3d 0.0;\r\n\r\n        // TODO: force clipping the vertex in case that the vertex isn\'t visible\r\n        //delta_z +\x3d a_visible ? 0.0 : 1.0;\r\n\r\n        // If the label rotates with the map, and if the rotated label is upside down, hide it\r\n        mediump float rotated \x3d mod(a_angle + u_mapRotation, 256.0);\r\n        delta_z +\x3d (1.0 - step(u_keepUpright, 0.0)) * step(64.0, rotated) * (1.0 - step(192.0, rotated)); //ie. z +\x3d (flip \x3e 0) \x26\x26 (64 \x3c\x3d rotated) \x26\x26 (rotated \x3c 192)\r\n\r\n        // u_level is the current service level adjusted for the change in font size\r\n        delta_z +\x3d 1.0 - step(a_minLevel, u_level); // Test if (level \x3c minLevel)\r\n        delta_z +\x3d step(a_maxLevel, u_level); // Test if (maxLevel \x3c\x3d level)\r\n\r\n        // calculate the alpha given the change in the fade and the fade-speed\r\n        lowp float alpha \x3d clamp((u_fadeChange - a_labelMinLevel) / u_fadeSpeed, 0.0, 1.0);\r\n\r\n        // if the speed is positive we are zooming in and therefore we need to \'fade-in\'. Else we need to \'fade-out\'\r\n        v_transparency \x3d (u_fadeSpeed \x3e\x3d 0.0 ? alpha : 1.0 - alpha);\r\n\r\n        // now deal with the min/max fade-levels. If we exceeded the level we simply snap to 0 or 1\r\n        if (u_maxfadeLevel \x3c a_labelMinLevel)\r\n        {\r\n          v_transparency \x3d 0.0;\r\n        }\r\n        if (u_minfadeLevel \x3e\x3d a_labelMinLevel)\r\n        {\r\n          v_transparency \x3d 1.0;\r\n        }\r\n\r\n        // if label has been faded out, clip it\r\n        delta_z +\x3d step(v_transparency, 0.0);\r\n\r\n        v_tex \x3d a_tex.xy / u_mosaicSize;\r\n\r\n      #ifdef DD\r\n        if (u_halo \x3e 0.5)\r\n        {\r\n          v_color \x3d u_color;\r\n          v_transparency *\x3d u_opacity;\r\n        }\r\n        else\r\n        {\r\n          v_color \x3d a_color;\r\n          // opacity already factored in a_color\r\n        }\r\n      #else\r\n        v_color \x3d u_color;\r\n        v_transparency *\x3d u_opacity;\r\n      #endif // DD\r\n\r\n      #ifdef DD\r\n        v_size \x3d a_size;\r\n      #else\r\n        v_size \x3d u_size;\r\n      #endif // DD\r\n\r\n      #ifdef ID\r\n        v_id \x3d u_id / 255.0;\r\n      #endif // ID\r\n\r\n        v_edgeDistance \x3d edgePos - u_edgeDistance / v_size;\r\n        v_edgeWidth \x3d (u_antialiasingWidth + u_edgeBlur) / v_size;\r\n\r\n        gl_Position \x3d vec4(u_normalized_origin, u_depth, 0.0) + u_transformMatrix * vec4(a_pos, 0.0, 1.0) + u_extrudeMatrix * v_size * vec4(offsetPrecision * a_vertexOffset, delta_z, 0.0);\r\n      }\r\n    ]]\x3e\r\n  \x3c/snippet\x3e\r\n\r\n  \x3csnippet name\x3d"textFS"\x3e\r\n    \x3c![CDATA[\r\n      uniform lowp sampler2D u_texture;\r\n      uniform mediump float u_edgeDistance;\r\n\r\n      varying lowp vec2 v_tex;\r\n      varying lowp float v_transparency;\r\n      varying lowp vec4 v_color;\r\n      varying mediump float v_edgeWidth;\r\n      varying mediump float v_edgeDistance;\r\n\r\n    #ifdef ID\r\n      varying mediump vec4 v_id;\r\n    #endif // ID\r\n\r\n      // this is taken from http://www.valvesoftware.com/publications/2007/SIGGRAPH2007_AlphaTestedMagnification.pdf\r\n      // and https://www.mapbox.com/blog/text-signed-distance-fields/\r\n      // http://metalbyexample.com/rendering-text-in-metal-with-signed-distance-fields/\r\n\r\n      void main()\r\n      {\r\n        // read the distance from the SDF texture\r\n        lowp float dist \x3d texture2D(u_texture, v_tex).a;\r\n\r\n        // use a smooth-step in order to calculate the geometry of the shape given by the distance field\r\n        mediump float alpha \x3d smoothstep(v_edgeDistance - v_edgeWidth, v_edgeDistance + v_edgeWidth, dist) * v_transparency;\r\n\r\n        gl_FragColor \x3d alpha * v_color;\r\n\r\n      #ifdef ID\r\n        if (gl_FragColor.a \x3c 1.0 / 255.0) {\r\n          discard;\r\n        }\r\n        gl_FragColor \x3d v_id;\r\n      #endif // ID\r\n      }\r\n    ]]\x3e\r\n  \x3c/snippet\x3e\r\n\r\n\x3c/snippets\x3e\r\n\r\n',
"url:esri/views/vectorTiles/renderers/shaders/tileInfo.vs.glsl":"attribute vec2 a_pos;\r\n\r\nuniform highp mat4 u_transformMatrix;\r\nuniform mediump vec2 u_normalized_origin;\r\nuniform mediump float u_depth;\r\nuniform mediump float u_coord_ratio;\r\nuniform mediump vec2 u_delta; // in tile coordinates\r\nuniform mediump vec2 u_dimensions; // in tile coordinates\r\n\r\nvarying mediump vec2 v_tex;\r\n\r\nvoid main() {\r\n  mediump vec2 offests \x3d u_coord_ratio * vec2(u_delta + a_pos * u_dimensions);\r\n  gl_Position \x3d vec4(u_normalized_origin, u_depth, 0.0) + u_transformMatrix * vec4(offests, 0.0, 1.0);\r\n\r\n  v_tex \x3d a_pos;\r\n}\r\n",
"url:esri/views/vectorTiles/renderers/shaders/tileInfo.fs.glsl":"uniform mediump sampler2D u_texture;\r\nvarying mediump vec2 v_tex;\r\n\r\nvoid main(void) {\r\n  lowp vec4 color \x3d texture2D(u_texture, v_tex);\r\n  gl_FragColor \x3d 0.75 * color;\r\n}\r\n","*noref":1}});
define("require exports ../../../core/tsSupport/extendsHelper ../../../core/tsSupport/decorateHelper dojo/has ../../../core/Logger ../../../core/accessorSupport/decorators ../../../core/HandleRegistry ../../../core/promiseUtils ../../../Graphic ./LayerView2D ../engine/StageGL ../tiling/TileInfoViewPOT ../tiling/TileStrategy ../tiling/TileKey ../tiling/TileQueue ../../../views/vectorTiles/TileHandler ../../../views/vectorTiles/VectorTileContainer ../../../views/vectorTiles/VectorTileDisplayObject ../../support/screenshotUtils".split(" "),function(p,
d,a,b,c,f,e,h,l,k,m,n,g,q,t,r,u,v,w,x){var z=f.getLogger("esri.views.2d.layers.VectorTileLayerView2D");return function(d){function f(){var a=null!==d&&d.apply(this,arguments)||this;a._handles=new h;a._fetchQueue=null;a._tileRequests=new Map;a.container=new n;return a}a(f,d);f.prototype.hitTest=function(a,b){var c=this;return this._vectorTileContainer.hittest(a,b).then(function(a){var b=c._tileHandler.getStyleRepository().layers;if(null===a||0>a||a>=b.length)return null;a=new k({attributes:{layerId:a,
layerName:b[a].id}});a.layer=c.layer;return a})};f.prototype.update=function(a){if(this._vectorTileContainer&&this._vectorTileContainer.isInitialized)if(a.devicePixelRatio!==this._tileHandler.devicePixelRatio)this._start();else{this._fetchQueue.pause();this._fetchQueue.state=a.state;this._tileStrategy.update(a);this._fetchQueue.resume();for(var b=0,c=this._vectorTileContainer.children;b<c.length;b++)this._tileHandler.updateTile(c[b],a);this.notifyChange("updating")}};f.prototype.attach=function(){c("esri-webgl")?
this._start():z.error("WebGL is required but not supported!")};f.prototype.detach=function(){this._stop()};f.prototype.moveStart=function(){this.requestUpdate()};f.prototype.viewChange=function(){this.requestUpdate()};f.prototype.moveEnd=function(){this.requestUpdate()};f.prototype.destroy=function(){this.container.dispose();this._vectorTileContainer.destroy();this._tileHandler.destroy()};f.prototype.takeScreenshot=function(a,b){if(!this.container)return l.reject("Could not find an object capable of capturing screenshot!");
a=x.adjustScreenshotSettings(a,b);return this.container.takeScreenshot(a)};f.prototype.isUpdating=function(){var a=!0;this._tileRequests.forEach(function(b){a=a&&b.isFulfilled()});return!a};f.prototype.acquireTile=function(a){var b=this,c=t.pool.acquire();c.set(a.level,a.row,a.col,a.world);a=this._tileHandler.getRefKey(c);var d=this.updateParameters.state.rotation,e=this._tileHandler.getStyleRepository(),f=w.pool.acquire(c,a,this.layer.tileInfo,e,this._tileHandler.glyphMosaic,d);a=this._fetchQueue.push(f.key).then(function(a){f.setData(a.tileData,
a.workerId,a.connection);f.once("attach",function(){return b.requestUpdate()});b._vectorTileContainer.addChild(f);b.notifyChange("updating")});this._tileRequests.set(c.id,a);this.notifyChange("updating");return f};f.prototype.releaseTile=function(a){var b=a.key.id,c=this._tileRequests.get(b);c.isFulfilled()||c.cancel();this._tileRequests.delete(b);this._vectorTileContainer.removeChild(a);this.requestUpdate();a.once("detach",function(){return w.pool.release(a)});this.notifyChange("updating")};f.prototype._stop=
function(){this._handles.removeAll();this._tileStrategy&&this._tileStrategy.destroy();this._vectorTileContainer&&(this._vectorTileContainer.removeAllChildren(),this.container.removeChild(this._vectorTileContainer));this._tileHandler&&this._tileHandler.stop();w.pool.prune();this._vectorTileContainer=this._tileHandler=this._tileStrategy=this._tileInfoView=null};f.prototype._start=function(){var a=this;this._stop();this._handles.add(this.watch("layer.currentStyleInfo",function(){return a.attach()}));
this._vectorTileContainer=new v;this.container.addChild(this._vectorTileContainer);this._tileInfoView=new g(this.layer.tileInfo,this.layer.fullExtent);this._tileStrategy=new q({cachePolicy:"keep",acquireTile:function(b){return a.acquireTile(b)},releaseTile:function(b){return a.releaseTile(b)},tileInfoView:this._tileInfoView});this._fetchQueue=new r({tileInfoView:this._tileInfoView,process:function(b){return a._getTileData(b)}});this._tileHandler=new u(this.layer,function(){return a.requestUpdate()},
window.devicePixelRatio||1,!0,this._tileInfoView);this._tileHandler.start().then(function(){a._vectorTileContainer.initialize(a._tileHandler.spriteMosaic,a._tileHandler.glyphMosaic,a.layer.tileInfo,a._tileInfoView);a.requestUpdate()})};f.prototype._getTileData=function(a){return this._tileHandler.getTileData(a,this.updateParameters.state.rotation)};return f=b([e.subclass("esri.views.2d.layers.VectorTileLayerView2D")],f)}(e.declared(m))});