// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.6/esri/copyright.txt for details.
//>>built
define("require exports dojo/_base/lang ../../../core/promiseUtils ../../../tasks/support/GenerateRendererParameters ./support/utils ../support/utils".split(" "),function(z,A,n,e,t,d,g){function u(a){if(!(a&&a.layer&&a.field))return e.reject(d.createError("class-breaks:missing-parameters","'layer' and 'field' parameters are required"));var b=n.mixin({},a);b.normalizationType=d.getNormalizationType(b);a=[0,1];var c=g.createLayerAdapter(b.layer,a);return(b.layer=c)?c.load().then(function(){var a=b.field,
f=b.minValue,k=b.maxValue,h=null!=f||null!=k,l=b.classificationMethod,p="percent-of-total"===b.normalizationType,q=!1!==b.analyzeData,a=a?c.getField(a):null,m=g.getFieldsList({field:b.field,normalizationField:b.normalizationField});if(m=d.verifyBasicFieldValidity(c,m,"class-breaks:invalid-parameters"))return e.reject(m);if(a=d.verifyNumericField(c,a,"class-breaks:invalid-parameters"))return e.reject(a);if(h)if(q){if(p&&null==b.normalizationTotal)return e.reject(d.createError("class-breaks:missing-parameters",
"'normalizationTotal' is required when 'normalizationType' is 'precent-of-total' and 'minValue', 'maxValue' are specified"))}else{if(null==f||null==k)return e.reject(d.createError("class-breaks:missing-parameters","Both 'minValue' and 'maxValue' are required when 'analyzeData' is false"));if(l&&"equal-interval"!==l)return e.reject(d.createError("class-breaks:invalid-parameters","'classificationMethod' other than 'equal-interval' is not allowed when 'analyzeData' is false"));if(p&&null==b.normalizationTotal)return e.reject(d.createError("class-breaks:missing-parameters",
"'normalizationTotal' is required when 'normalizationType' is 'precent-of-total' and 'analyzeData' is false"))}else if(!q)return e.reject(d.createError("class-breaks:missing-parameters","Both 'minValue' and 'maxValue' are required when 'analyzeData' is false"));return b}):e.reject(d.createError("class-breaks:invalid-parameters","'layer' must be one of these types: "+g.getLayerTypeLabels(a).join(", ")))}function v(a,b){var c=a.layer;b=d.createCBDefn(a,b);var e=d.getSQLFilterForNormalization(a),f=d.getFieldExpr(a,
a.normalizationTotal);a=d.getRangeExpr(f,a.minValue,a.maxValue);f=new t;f.classificationDefinition=b;f.where=d.mergeWhereClauses(e,a);return c.generateRenderer(f)}function r(a,b){var c=b.classBreakInfos,d=c[0].minValue,f=c[c.length-1].maxValue,e="standard-deviation"===a.classificationMethod,h=w,c=c.map(function(a){var b=a.label;a={minValue:a.minValue,maxValue:a.maxValue,label:b};if(e&&b){var c=b.match(h).map(function(a){return+n.trim(a)});2===c.length?(a.minStdDev=c[0],a.maxStdDev=c[1],0>c[0]&&0<
c[1]&&(a.hasAvg=!0)):1===c.length&&(-1<b.indexOf("\x3c")?(a.minStdDev=null,a.maxStdDev=c[0]):-1<b.indexOf("\x3e")&&(a.minStdDev=c[0],a.maxStdDev=null))}return a});return{minValue:d,maxValue:f,classBreakInfos:c,normalizationTotal:b.normalizationTotal}}function x(a,b){var c=a.minValue,g=a.maxValue;if(c>=g)return e.reject(d.createError("class-breaks:invalid-parameters","'minValue' should be less than 'maxValue'"));for(var f=[],k=(g-c)/b,h=0;h<b;h++){var l=c+h*k;f.push({minValue:l,maxValue:l+k})}f[b-
1].maxValue=g;return e.resolve({classBreakInfos:f,normalizationTotal:a.normalizationTotal})}function y(a){var b=a.numClasses||5;return!1!==a.analyzeData?v(a,b).then(function(b){return r(a,b)}):x(a,b).then(function(b){return r(a,b)})}var w=/\s*(\+|-)?((\d+(\.\d+)?)|(\.\d+))\s*/gi;return function(a){return u(a).then(function(a){return y(a)})}});