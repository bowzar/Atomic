// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.6/esri/copyright.txt for details.
//>>built
define("require exports dojo/i18n!../../nls/smartMapping dojo/_base/lang ../statistics/summaryStatistics ../symbology/color ../../../core/numberUtils ../../support/utils ../../ClassBreaksRenderer ../../../core/promiseUtils ../../PointCloudRGBRenderer ../../PointCloudStretchRenderer ./support/utils ../support/utils ../../support/utils ../../support/AuthoringInfoVisualVariable ../../support/AuthoringInfo ../statistics/support/utils".split(" "),function(S,m,w,g,x,q,D,r,y,d,E,F,e,f,G,H,z,I){function J(a){if(!(a&&
a.layer&&(a.field||a.valueExpression||a.sqlExpression)))return d.reject(e.createError("color-visual-variable:missing-parameters","'layer' and 'field', 'valueExpression' or 'sqlExpression' parameters are required"));var b=g.mixin({},a);a=[0,1];var c=f.createLayerAdapter(b.layer,a);return(b.layer=c)?c.load().then(function(){var a=c.geometryType;if("mesh"!==a&&b.worldScale){if("polyline"===a||"polygon"===a)return d.reject(e.createError("color-visual-variable:not-supported","'worldScale' sizing is not supported for polyline and polygon layers"));
if(!b.view||"3d"!==b.view.type)return d.reject(e.createError("color-visual-variable:invalid-parameters","'view' parameter should be an instance of SceneView when 'worldScale' parameter is true"))}a=f.getFieldsList({field:b.field,normalizationField:b.normalizationField,valueExpression:b.valueExpression});return(a=e.verifyBasicFieldValidity(c,a,"color-visual-variable:invalid-parameters"))?d.reject(a):b}):d.reject(e.createError("color-visual-variable:invalid-parameters","'layer' must be one of these types: "+
f.getLayerTypeLabels(a).join(", ")))}function K(a){if(!(a&&a.layer&&(a.field||a.valueExpression||a.sqlExpression)))return d.reject(e.createError("color-continuous-renderer:missing-parameters","'layer' and 'field', 'valueExpression' or 'sqlExpression' parameters are required"));var b=g.mixin({},a);b.symbolType=b.symbolType||"2d";b.defaultSymbolEnabled=null==b.defaultSymbolEnabled?!0:b.defaultSymbolEnabled;a=[0,1];var c=f.createLayerAdapter(b.layer,a);return(b.layer=c)?c.load().then(function(){var a=
c.geometryType,l=-1<b.symbolType.indexOf("3d");if("mesh"===a)b.symbolType="3d-volumetric",b.colorMixMode=b.colorMixMode||"replace";else{if(l&&("polyline"===a||"polygon"===a))return d.reject(e.createError("color-continuous-renderer:not-supported","3d symbols are not supported for polyline and polygon layers"));if(-1<b.symbolType.indexOf("3d-volumetric")&&(!b.view||"3d"!==b.view.type))return d.reject(e.createError("color-continuous-renderer:invalid-parameters","'view' parameter should be an instance of SceneView when 'symbolType' parameter is '3d-volumetric' or '3d-volumetric-uniform'"))}a=
f.getFieldsList({field:b.field,normalizationField:b.normalizationField,valueExpression:b.valueExpression});return(a=e.verifyBasicFieldValidity(c,a,"color-continuous-renderer:invalid-parameters"))?d.reject(a):b}):d.reject(e.createError("color-continuous-renderer:invalid-parameters","'layer' must be one of these types: "+f.getLayerTypeLabels(a).join(", ")))}function L(a){if(!(a&&a.layer&&a.field))return d.reject(e.createError("color-class-breaks-renderer:missing-parameters","'layer' and 'field' parameters are required"));
var b=g.mixin({},a);b.symbolType=b.symbolType||"2d";b.defaultSymbolEnabled=null==b.defaultSymbolEnabled?!0:b.defaultSymbolEnabled;b.classificationMethod=b.classificationMethod||"equal-interval";b.normalizationType=I.getNormalizationType(b);a=[0,1];var c=f.createLayerAdapter(b.layer,a);return(b.layer=c)?null!=b.minValue&&null!=b.maxValue||null==b.minValue&&null==b.maxValue?c.load().then(function(){var a=c.geometryType,l=-1<b.symbolType.indexOf("3d");if("mesh"===a)b.symbolType="3d-volumetric",b.colorMixMode=
b.colorMixMode||"replace";else{if(l&&("polyline"===a||"polygon"===a))return d.reject(e.createError("color-class-breaks-renderer:not-supported","3d symbols are not supported for polyline and polygon layers"));if(-1<b.symbolType.indexOf("3d-volumetric")&&(!b.view||"3d"!==b.view.type))return d.reject(e.createError("color-class-breaks-renderer:invalid-parameters","'view' parameter should be an instance of SceneView when 'symbolType' parameter is '3d-volumetric' or '3d-volumetric-uniform'"))}a=f.getFieldsList({field:b.field,
normalizationField:b.normalizationField});return(a=e.verifyBasicFieldValidity(c,a,"color-class-breaks-renderer:invalid-parameters"))?d.reject(a):b}):d.reject(e.createError("color-class-breaks-renderer:missing-parameters","Both 'minValue' and 'maxValue' are required when specifying custom data range")):d.reject(e.createError("color-class-breaks-renderer:invalid-parameters","'layer' must be one of these types: "+f.getLayerTypeLabels(a).join(", ")))}function M(a){a=g.mixin({},a);delete a.basemap;delete a.colorScheme;
delete a.legendOptions;delete a.symbolType;delete a.defaultSymbolEnabled;delete a.colorMixMode;delete a.view;a.analyzeData=!(null!=a.minValue&&null!=a.maxValue);return a}function N(a){if(!a||!a.layer)return d.reject(e.createError("color-point-cloud-true-color-renderer:missing-parameters","'layer' parameter is required"));var b=g.mixin({},a);a=[2];var c=f.createLayerAdapter(b.layer,a);b.layer=c;b.density=b.density||25;b.size=b.size||"100%";return e.isValidPointSize(b.size)?c?c.load().then(function(){return b}):
d.reject(e.createError("color-point-cloud-true-color-renderer:invalid-parameters","'layer' must be one of these types: "+f.getLayerTypeLabels(a).join(", "))):d.reject(e.createError("color-point-cloud-true-color-renderer:invalid-parameters","Invalid 'size' parameter. It should be a string of the form '100%'"))}function O(a){if(!(a&&a.layer&&a.field))return d.reject(e.createError("color-point-cloud-continuous-renderer:missing-parameters","'layer' and 'field' parameters are required"));var b=a.field.toLowerCase();
if("intensity"!==b&&"elevation"!==b)return d.reject(e.createError("color-point-cloud-continuous-renderer:invalid-parameters","'field' should be either 'intensity' or 'elevation'"));var c=g.mixin({},a);a=[2];b=f.createLayerAdapter(c.layer,a);c.layer=b;c.density=c.density||25;c.size=c.size||"100%";return e.isValidPointSize(c.size)?b?b.load().then(function(){return c}):d.reject(e.createError("color-point-cloud-continuous-renderer:invalid-parameters","'layer' must be one of these types: "+f.getLayerTypeLabels(a).join(", "))):
d.reject(e.createError("color-point-cloud-continuous-renderer:invalid-parameters","Invalid 'size' parameter. It should be a string of the form '100%'"))}function P(a){a=g.mixin({},a);var b=-1<a.symbolType.indexOf("3d-volumetric");delete a.symbolType;delete a.defaultSymbolEnabled;delete a.colorMixMode;a.worldScale=b;return a}function t(a,b){var c=a.colorScheme,e=a.basemap;if(c)c=q.cloneScheme(c);else{b=b||a.theme||"high-to-low";var d=q.getSchemes({theme:b,basemap:a.basemap,geometryType:a.geometryType,
worldScale:a.worldScale,view:a.view});d&&(e=d.basemapId,c=a.schemeId?q.getSchemeById({id:b+"/"+e+"/"+a.schemeId,geometryType:a.geometryType}):d.primaryScheme)}return{scheme:c,basemapId:e}}function A(a,b,c){for(var e=(b-a)/(c-1),d=[a],n=1;n<=c-2;n++)d.push(a+n*e);d.push(b);return D.round(d,{strictBounds:!0})}function B(a){return J(a).then(function(a){var b=a.normalizationField,p=b?"field":void 0;return(a.statistics?d.resolve(a.statistics):x({layer:a.layer,field:a.field,valueExpression:a.valueExpression,
sqlExpression:a.sqlExpression,sqlWhere:a.sqlWhere,normalizationType:p,normalizationField:b,minValue:a.minValue,maxValue:a.maxValue})).then(function(c){var n=a.layer,h=a.field,p=h&&"function"!==typeof h?n.getField(h):null,k=p&&"date"===p.type,n=t({basemap:a.basemap,theme:a.theme,geometryType:n.geometryType,colorScheme:a.colorScheme,worldScale:a.worldScale,view:a.view});if(p=n.scheme){var l=e.createColors(p.colors,5);if(5>l.length)c=d.reject(e.createError("color-visual-variable:insufficient-info","Color scheme does not have enough colors"));
else{var f=e.getDefaultDataRange(c,k,!0),g=-1<p.id.indexOf("seq-"),g=f?A(f[0],f[1],5):e.createStopValues(c,g),l=e.createColors(l,5),h={type:"color",field:h,valueExpression:a.valueExpression,normalizationField:b,stops:r.createColorStops({values:g,isDate:k,dateFormatOptions:k?r.timelineDateFormatOptions:null,colors:l,labelIndexes:[0,2,4]}),legendOptions:a.legendOptions},k=new H({type:"color",minSliderValue:c.min,maxSliderValue:c.max,theme:p.theme}),k=new z({visualVariables:[k]});c=d.resolve({basemapId:n.basemapId,
visualVariable:h,statistics:c,defaultValuesUsed:!!f,colorScheme:q.cloneScheme(p),authoringInfo:k})}}else c=d.reject(e.createError("color-visual-variable:insufficient-info","Unable to find color scheme"));return c})})}function Q(a,b){a=a.colorsForClassBreaks;var c;if(a&&0<a.length&&(a.some(function(a){a.numClasses===b&&(c=a.colors);return!!c}),!c)){var d=a[a.length-1];a=b-d.numClasses;if(0<a){var l=d.colors[d.numClasses-1];c=d.colors.splice(0);for(d=1;d<=a;d++)c.push(l)}}c&&(c=e.createColors(c,c.length));
return c}function R(a,b){var c=a.field,f=a.defaultSymbolEnabled,l=a.layer.geometryType,n=t({basemap:a.basemap,geometryType:l,colorScheme:a.colorScheme,worldScale:-1<a.symbolType.indexOf("3d-volumetric"),view:a.view}),h=n.scheme,g=b.result,k=g.classBreakInfos,m=a.classificationMethod,r="standard-deviation"===m,u=a.normalizationType;if(!h)return d.reject(e.createError("color-class-breaks-renderer:insufficient-info","Unable to find color scheme"));var v=Q(h,k.length);if(!v||v.length!==k.length)return d.reject(e.createError("color-class-breaks-renderer:insufficient-info",
"Color scheme does not have enough colors"));c=new y({classBreakInfos:k.map(function(b,c){return{minValue:b.minValue,maxValue:b.maxValue,symbol:e.createSymbol(h,v[c],l,a.symbolType,a.colorMixMode),label:b.label}}),defaultLabel:f?w.other:null,defaultSymbol:f?e.createSymbol(h,h.noDataColor,l,a.symbolType,a.colorMixMode):null,field:c,classificationMethod:m,normalizationType:u,normalizationField:a.normalizationField,normalizationTotal:"percent-of-total"===u?g.normalizationTotal:void 0,legendOptions:a.legendOptions,
authoringInfo:new z({type:"class-breaks-color",classificationMethod:m,standardDeviationInterval:a.standardDeviationInterval})});r||G.setLabelsForClassBreaks({classBreakInfos:c.classBreakInfos,classificationMethod:m,normalizationType:u,round:!0});return d.resolve({renderer:c,colorScheme:q.cloneScheme(h),classBreaksResult:g,defaultValuesUsed:b.defaultValuesUsed,basemapId:n.basemapId})}Object.defineProperty(m,"__esModule",{value:!0});var C=Math.pow(2,53)-1;m.createVisualVariable=B;m.createContinuousRenderer=
function(a){return K(a).then(function(a){return B(P(a)).then(function(b){var c=a.normalizationField,d=c?"field":void 0,f=a.field,h=a.layer.geometryType,g=a.defaultSymbolEnabled,k=q.cloneScheme(b.colorScheme);return{renderer:new y({classBreakInfos:[{minValue:-C,maxValue:C,symbol:e.createSymbol(k,k.noDataColor,h,a.symbolType,a.colorMixMode)}],defaultLabel:g?w.other:null,defaultSymbol:g?e.createSymbol(k,k.noDataColor,h,a.symbolType,a.colorMixMode):null,field:f,normalizationType:d,normalizationField:c,
valueExpression:a.valueExpression,visualVariables:[r.cloneColorVariable(b.visualVariable)],authoringInfo:b.authoringInfo&&b.authoringInfo.clone()}),visualVariable:r.cloneColorVariable(b.visualVariable),statistics:b.statistics,defaultValuesUsed:b.defaultValuesUsed,colorScheme:q.cloneScheme(b.colorScheme),basemapId:b.basemapId}})})};m.createClassBreaksRenderer=function(a){return L(a).then(function(a){return e.getClassBreaks(M(a)).then(function(b){return R(a,b)})})};m.createPCTrueColorRenderer=function(a){return N(a).then(function(a){return{renderer:new E({field:"RGB",
pointsPerInch:a.density,pointSizeAlgorithm:e.getPointSizeAlgorithm(a.size)})}})};m.createPCContinuousRenderer=function(a){return O(a).then(function(a){return(a.statistics?d.resolve(a.statistics):x({layer:a.layer,field:a.field})).then(function(b){var c=t({basemap:a.basemap,colorScheme:a.colorScheme,geometryType:a.layer.geometryType,schemeId:"elevation"===a.field.toLowerCase()?"point-cloud-elevation-scheme":"point-cloud-intensity-scheme"}),f=c.scheme;if(f){var g=e.createColors(f.colors,5);if(5>g.length)b=
d.reject(e.createError("color-point-cloud-continuous-renderer:insufficient-info","Color scheme does not have enough colors"));else{var h=e.getDefaultDataRange(b,!1,!0),m=h?A(h[0],h[1],5):e.createStopValues(b),g=r.createColorStops({values:m,isDate:!1,dateFormatOptions:null,colors:g,labelIndexes:[0,2,4]});b=d.resolve({stops:g,basemapId:c.basemapId,statistics:b,defaultValuesUsed:!!h,colorScheme:q.cloneScheme(f)})}}else b=d.reject(e.createError("color-point-cloud-continuous-renderer:insufficient-info",
"Unable to find color scheme"));return b}).then(function(b){return{renderer:new F({field:a.field,pointsPerInch:a.density,pointSizeAlgorithm:e.getPointSizeAlgorithm(a.size),stops:b.stops}),basemapId:b.basemapId,statistics:b.statistics,defaultValuesUsed:b.defaultValuesUsed,colorScheme:b.colorScheme}})})}});