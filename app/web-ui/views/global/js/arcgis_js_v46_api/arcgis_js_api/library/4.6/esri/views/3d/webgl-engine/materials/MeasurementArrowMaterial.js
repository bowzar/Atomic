// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.6/esri/copyright.txt for details.
//>>built
require({cache:{"url:esri/views/3d/webgl-engine/materials/MeasurementArrowMaterial.xml":'\x3c?xml version\x3d"1.0" encoding\x3d"UTF-8"?\x3e\r\n\r\n\x3csnippets\x3e\r\n\r\n\x3csnippet name\x3d"vsMeasurementArrow"\x3e\x3c![CDATA[\r\n  $vsprecisionf\r\n\r\n  uniform mat4 proj;\r\n  uniform mat4 view;\r\n  uniform mat4 model;\r\n\r\n  uniform float width;\r\n\r\n  attribute vec3 $position;\r\n  attribute vec3 $normal;\r\n  attribute vec2 $uv0;\r\n  attribute float $auxpos1;\r\n\r\n  varying vec2 vtc;\r\n  varying float vlength;\r\n  varying float vradius;\r\n\r\n  void main(void) {\r\n    vec3 bitangent \x3d $normal;\r\n\r\n    vtc \x3d $uv0;\r\n    vlength \x3d $auxpos1;\r\n    vradius \x3d 0.5 * width;\r\n\r\n    vec4 pos \x3d view * vec4((model * vec4($position + vradius * bitangent * $uv0.y, 1.0)).xyz, 1.0);\r\n    gl_Position \x3d proj * pos;\r\n  }\r\n]]\x3e\x3c/snippet\x3e\r\n\r\n\x3csnippet name\x3d"fsMeasurementArrow"\x3e\x3c![CDATA[\r\n  $fsprecisionf\r\n\r\n  uniform float outlineSize;\r\n  uniform vec4 outlineColor;\r\n  uniform float stripeLength;\r\n  uniform vec4 stripeEvenColor;\r\n  uniform vec4 stripeOddColor;\r\n\r\n  varying vec2 vtc;\r\n  varying float vlength;\r\n  varying float vradius;\r\n\r\n  #define INV_SQRT2 (1.0 / sqrt(2.0))\r\n\r\n  vec4 arrowColor(vec2 tc, float len) {\r\n    float d \x3d INV_SQRT2 * (tc.x - abs(tc.y));\r\n    d \x3d min(d, INV_SQRT2 * (len - tc.x - abs(tc.y)));\r\n    d \x3d min(d, 1.0 - abs(tc.y));\r\n\r\n    if (d \x3c 0.0) {\r\n      return vec4(0.0);\r\n    } else if (d \x3c outlineSize) {\r\n      return outlineColor;\r\n    } else {\r\n      return fract(0.5 / stripeLength * tc.x * vradius) \x3e\x3d 0.5 ? stripeOddColor : stripeEvenColor;\r\n    }\r\n  }\r\n\r\n  void main(void) {\r\n    vec2 ntc \x3d vec2(vtc.x / vradius, vtc.y);\r\n    vec4 color \x3d arrowColor(ntc, vlength / vradius);\r\n    if (color.a \x3d\x3d 0.0) {\r\n      discard;\r\n    }\r\n    gl_FragColor \x3d color;\r\n  }\r\n\r\n]]\x3e\x3c/snippet\x3e\r\n\r\n\x3c/snippets\x3e\r\n'}});
define("require exports ../../../../core/tsSupport/extendsHelper dojo/text!./MeasurementArrowMaterial.xml ./internal/MaterialUtil ../lib/Util ../../../webgl/Util ./internal/MaterialBase ./internal/GLMaterialBase ../lib/gl-matrix ../lib/RenderSlot ../lib/ShaderVariations".split(" "),function(C,Q,D,F,h,f,z,G,q,E,H,I){var c=E.vec3d,u=E.mat4d,v=[{name:f.VertexAttrConstants.POSITION,count:3,type:5126,offset:0,stride:36,normalized:!1},{name:f.VertexAttrConstants.NORMAL,count:3,type:5126,offset:12,stride:36,
normalized:!1},{name:f.VertexAttrConstants.UV0,count:2,type:5126,offset:24,stride:36,normalized:!1},{name:f.VertexAttrConstants.AUXPOS1,count:1,type:5126,offset:32,stride:36,normalized:!1}],J={width:32,outlineSize:.2,outlineColor:[1,.5,0,1],stripeLength:1,stripeEvenColor:[1,1,1,1],stripeOddColor:[1,.5,0,1],polygonOffset:!1};C=function(m){function b(a,k){k=m.call(this,k)||this;k.canBeMerged=!1;k.params=h.copyParameters(a,J);return k}D(b,m);b.prototype.dispose=function(){};b.prototype.getParameterValues=
function(){var a=this.params;return{width:a.width,outlineSize:a.outlineSize,outlineColor:a.outlineColor,stripeLength:a.stripeLength,stripeEvenColor:a.stripeEvenColor,stripeOddColor:a.stripeOddColor,polygonOffset:a.polygonOffset}};b.prototype.setParameterValues=function(a){h.updateParameters(this.params,a)&&this.notifyDirty("matChanged")};b.prototype.getParams=function(){return this.params};b.prototype.getOutputAmount=function(a){return 18*(a/2+1)};b.prototype.getInstanceBufferLayout=function(){};
b.prototype.getVertexBufferLayout=function(){return v};b.prototype.fillInterleaved=function(a,k,b,n,g,p){n=a.vertexAttr[f.VertexAttrConstants.POSITION].data;var d=a.vertexAttr[f.VertexAttrConstants.NORMAL].data,w=n.length/3;(a=a&&a.indices&&a.indices.position)&&a.length!==2*(w-1)&&console.warn("MeasurementArrowMaterial does not support indices");a=p+z.findAttribute(v,f.VertexAttrConstants.POSITION).offset/4;var m=p+z.findAttribute(v,f.VertexAttrConstants.NORMAL).offset/4,r=p+z.findAttribute(v,f.VertexAttrConstants.UV0).offset/
4;p+=z.findAttribute(v,f.VertexAttrConstants.AUXPOS1).offset/4;for(var t=K,A=L,q=M,x=N,B=O,y=0,l=0;l<w;++l){var e=3*l;c.set3(n[e],n[e+1],n[e+2],t);l<w-1&&(e=3*(l+1),c.set3(n[e],n[e+1],n[e+2],A),c.set3(d[e],d[e+1],d[e+2],B),c.normalize(B),c.subtract(A,t,q),c.normalize(q),c.cross(B,q,x),c.normalize(x));e=c.dist(t,A);k&&b&&(u.multiplyVec3(k,t),u.multiplyVec3(k,A),u.multiplyVec3(b,x));h.fill(t,0,g,a,void 0,3);a+=9;h.fill(t,0,g,a,void 0,3);a+=9;h.fill(x,0,g,m,void 0,3);m+=9;h.fill(x,0,g,m,void 0,3);m+=
9;g[r]=y;g[r+1]=-1;r+=9;g[r]=y;g[r+1]=1;r+=9;l<w-1&&(y+=e)}for(l=0;l<w;++l)g[p]=y,p+=9,g[p]=y,p+=9};b.prototype.intersect=function(a,b,d,c,g,f,m,h){};b.prototype.getGLMaterials=function(){return{color:P,depthShadowMap:void 0,normal:void 0,depth:void 0,highlight:void 0}};b.prototype.getAllTextureIds=function(){return[]};b.loadShaders=function(a,b,d,c){a._parse(F);a=new I("measurement-arrow",["vsMeasurementArrow","fsMeasurementArrow"],null,d,b,a,c);d.addShaderVariations("measurement-arrow-material-shader-variations",
a)};return b}(G.MaterialBase);var P=function(c){function b(a,b,d){d=c.call(this,a,b,d)||this;d.programRep=b;d.params=h.copyParameters(a.getParams());d.selectProgram();return d}D(b,c);b.prototype.selectProgram=function(){this.program=this.programRep.getShaderVariationsProgram("measurement-arrow-material-shader-variations",[])};b.prototype.updateParameters=function(){this.params=this.material.getParameterValues();this.selectProgram()};b.prototype.beginSlot=function(a){return a===H.OPAQUE_MATERIAL};
b.prototype.getProgram=function(){return this.program};b.prototype.getDrawMode=function(a){return a.gl.TRIANGLE_STRIP};b.prototype.bind=function(a,b){b=this.program;a.setDepthTestEnabled(!0);a.setDepthWriteEnabled(!0);a.setFaceCullingEnabled(!1);a.setBlendingEnabled(!1);this.params.polygonOffset&&(a.setPolygonOffsetFillEnabled(!0),a.setPolygonOffset(0,-4));a.bindProgram(b);b.setUniform1f("width",this.params.width);b.setUniform1f("outlineSize",this.params.outlineSize);b.setUniform4fv("outlineColor",
this.params.outlineColor);b.setUniform1f("stripeLength",this.params.stripeLength);b.setUniform4fv("stripeEvenColor",this.params.stripeEvenColor);b.setUniform4fv("stripeOddColor",this.params.stripeOddColor)};b.prototype.bindView=function(a,b){a=b.origin;var c=this.getProgram();h.bindView(a,b.view,c)};b.prototype.bindInstance=function(a,b){this.getProgram().setUniformMatrix4fv("model",b.transformation)};b.prototype.release=function(a){a.setDepthTestEnabled(!0);a.setDepthWriteEnabled(!0);a.setBlendingEnabled(!1);
this.params.polygonOffset&&a.setPolygonOffsetFillEnabled(!1)};return b}(q.GLMaterialBase),K=c.create(),L=c.create(),M=c.create(),N=c.create(),O=c.create();q=u.create();u.identity(q);return C});