// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.6/esri/copyright.txt for details.
//>>built
define("require exports ../../core/tsSupport/declareExtendsHelper ../../core/tsSupport/decorateHelper ../../TimeExtent ../../core/accessorSupport/decorators ../../core/JSONSupport ../../core/lang ../../core/kebabDictionary ../../geometry/SpatialReference ../../geometry/support/typeUtils ../../geometry/support/jsonUtils ../../symbols/support/typeUtils ../../symbols/support/jsonUtils ./QuantizationParameters ./StatisticDefinition".split(" "),function(x,y,k,d,l,c,m,n,e,p,q,r,t,u,v,w){var g=e({esriSpatialRelIntersects:"intersects",
esriSpatialRelContains:"contains",esriSpatialRelCrosses:"crosses",esriSpatialRelEnvelopeIntersects:"envelope-intersects",esriSpatialRelIndexIntersects:"index-intersects",esriSpatialRelOverlaps:"overlaps",esriSpatialRelTouches:"touches",esriSpatialRelWithin:"within",esriSpatialRelRelation:"relation"}),h=e({esriSRUnit_Meter:"meters",esriSRUnit_Kilometer:"kilometers",esriSRUnit_Foot:"feet",esriSRUnit_StatuteMile:"miles",esriSRUnit_NauticalMile:"nautical-miles",esriSRUnit_USNauticalMile:"us-nautical-miles"});
return function(e){function b(a){a=e.call(this,a)||this;a.distance=void 0;a.geometry=null;a.geometryPrecision=void 0;a.groupByFieldsForStatistics=null;a.maxAllowableOffset=void 0;a.multipatchOption=null;a.num=void 0;a.objectIds=null;a.orderByFields=null;a.outFields=null;a.outSpatialReference=null;a.outStatistics=null;a.pixelSize=null;a.quantizationParameters=null;a.relationParameter=null;a.resultType=null;a.returnDistinctValues=!1;a.returnGeometry=!1;a.returnCentroid=!1;a.returnExceededLimitFeatures=
!0;a.returnJSON=!1;a.returnM=!1;a.returnZ=!1;a.spatialRelationship="intersects";a.start=void 0;a.sqlFormat=null;a.text=null;a.timeExtent=null;a.units="meters";a.where=null;return a}k(b,e);f=b;b.prototype.writeStart=function(a,b,c){b.resultOffset=this.start;b.resultRecordCount=this.num||10;b.where="1\x3d1"};b.prototype.writeWhere=function(a,b,c){b.where=a||"1\x3d1"};b.prototype.clone=function(){return new f(n.clone({distance:this.distance,geometry:this.geometry,geometryPrecision:this.geometryPrecision,
groupByFieldsForStatistics:this.groupByFieldsForStatistics,maxAllowableOffset:this.maxAllowableOffset,multipatchOption:this.multipatchOption,num:this.num,objectIds:this.objectIds,orderByFields:this.orderByFields,outFields:this.outFields,outSpatialReference:this.outSpatialReference,outStatistics:this.outStatistics,pixelSize:this.pixelSize,quantizationParameters:this.quantizationParameters,relationParameter:this.relationParameter,resultType:this.resultType,returnDistinctValues:this.returnDistinctValues,
returnGeometry:this.returnGeometry,returnCentroid:this.returnCentroid,returnExceededLimitFeatures:this.returnExceededLimitFeatures,returnJSON:this.returnJSON,returnM:this.returnM,returnZ:this.returnZ,spatialRelationship:this.spatialRelationship,start:this.start,sqlFormat:this.text,text:this.text,timeExtent:this.timeExtent,units:this.units,where:this.where}))};d([c.property({type:Number,json:{write:!0}})],b.prototype,"distance",void 0);d([c.property({types:q.types,json:{read:r.fromJSON,write:!0}})],
b.prototype,"geometry",void 0);d([c.property({type:Number,json:{write:!0}})],b.prototype,"geometryPrecision",void 0);d([c.property({type:[String],json:{write:!0}})],b.prototype,"groupByFieldsForStatistics",void 0);d([c.property({type:Number,json:{write:!0}})],b.prototype,"maxAllowableOffset",void 0);d([c.property({type:String,json:{write:!0}})],b.prototype,"multipatchOption",void 0);d([c.property({type:Number,json:{read:{source:"resultRecordCount"}}})],b.prototype,"num",void 0);d([c.property({type:[Number],
json:{write:!0}})],b.prototype,"objectIds",void 0);d([c.property({type:[String],json:{write:!0}})],b.prototype,"orderByFields",void 0);d([c.property({type:[String],json:{write:!0}})],b.prototype,"outFields",void 0);d([c.property({type:p,json:{read:{source:"outSR"},write:{target:"outSR"}}})],b.prototype,"outSpatialReference",void 0);d([c.property({type:[w],json:{write:!0}})],b.prototype,"outStatistics",void 0);d([c.property({types:t.types,json:{read:u.read,write:!0}})],b.prototype,"pixelSize",void 0);
d([c.property({type:v,json:{write:!0}})],b.prototype,"quantizationParameters",void 0);d([c.property({type:String,json:{read:{source:"relationParam"},write:{target:"relationParam",overridePolicy:function(a){return{enabled:"relation"===this.spatialRelationship}}}}})],b.prototype,"relationParameter",void 0);d([c.property({type:String,json:{write:!0}})],b.prototype,"resultType",void 0);d([c.property({type:Boolean,json:{write:{overridePolicy:function(a){return{enabled:a}}}}})],b.prototype,"returnDistinctValues",
void 0);d([c.property({type:Boolean,json:{write:!0}})],b.prototype,"returnGeometry",void 0);d([c.property({type:Boolean,json:{write:{overridePolicy:function(a){return{enabled:a}}}}})],b.prototype,"returnCentroid",void 0);d([c.property({type:Boolean,json:{write:{overridePolicy:function(a){return{enabled:!a}}}}})],b.prototype,"returnExceededLimitFeatures",void 0);d([c.property({type:Boolean,json:{read:!1,write:!1}})],b.prototype,"returnJSON",void 0);d([c.property({type:Boolean,json:{write:{overridePolicy:function(a){return{enabled:a}}}}})],
b.prototype,"returnM",void 0);d([c.property({type:Boolean,json:{write:{overridePolicy:function(a){return{enabled:a}}}}})],b.prototype,"returnZ",void 0);d([c.property({type:String,json:{read:{source:"spatialRel",reader:g.read},write:{target:"spatialRel",writer:g.write}}})],b.prototype,"spatialRelationship",void 0);d([c.property({type:Number})],b.prototype,"start",void 0);d([c.writer("start"),c.writer("num")],b.prototype,"writeStart",null);d([c.property({type:String,json:{write:!0}})],b.prototype,"sqlFormat",
void 0);d([c.property({type:String,json:{write:!0}})],b.prototype,"text",void 0);d([c.property({type:l,json:{write:!0}})],b.prototype,"timeExtent",void 0);d([c.property({type:String,json:{read:h.read,write:{writer:h.write,overridePolicy:function(a){return{enabled:0<this.distance}}}}})],b.prototype,"units",void 0);d([c.property({type:String,json:{write:{overridePolicy:function(a){return{enabled:null!=a||0<this.start}}}}})],b.prototype,"where",void 0);d([c.writer("where")],b.prototype,"writeWhere",
null);return b=f=d([c.subclass("esri.tasks.support.Query")],b);var f}(c.declared(m))});